var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AccessGroupFromGraphQLApiService.html",[0,0.716,1,4.3]],["body/injectables/AccessGroupFromGraphQLApiService.html",[0,0.988,1,5.934,2,1.433,3,0.05,4,0.05,5,0.05,6,5.021,7,3.191,8,4.211,9,8.802,10,5.836,11,4.858,12,1.281,13,4.231,14,3.227,15,6.697,16,3.183,17,3.144,18,1.898,19,4.741,20,0.255,21,1.548,22,2.434,23,6.644,24,5.926,25,1.928,26,4.858,27,0.81,28,7.572,29,4.396,30,2.322,31,7.572,32,3.38,33,0.006,34,3.996,35,7.412,36,0.699,37,4.858,38,1.791,39,1.144,40,0.465,41,0.906,42,6.644,43,2.55,44,6.644,45,4.858,46,4.646,47,1.572,48,2.363,49,3.741,50,5.048,51,2.198,52,4.858,53,0.179,54,2.879,55,2.483,56,0.886,57,4.338,58,3.094,59,3.367,60,5.466,61,2.55,62,0.062,63,0.17,64,3.035,65,2.623,66,4.858,67,4.858,68,3.741,69,2.059,70,1.365,71,2.879,72,3.996,73,1.351,74,3.007,75,4.858,76,4.858,77,2.323,78,4.858,79,2.454,80,4.858,81,2.879,82,4.858,83,4.338,84,1.412,85,4.338,86,4.858,87,3.741,88,4.858,89,4.858,90,4.858,91,0.004,92,0.004]],["title/injectables/AccessGroupFromMultipleProvidersService.html",[0,0.716,93,4.3]],["body/injectables/AccessGroupFromMultipleProvidersService.html",[0,1.143,2,1.787,3,0.062,4,0.062,5,0.062,6,5.095,7,3.219,8,4.273,12,1.598,13,4.894,14,3.732,16,3.3,17,3.191,18,2.195,19,5.288,20,0.318,21,1.79,22,2.335,24,6.145,25,1.758,27,0.516,30,1.598,33,0.006,36,0.71,38,1.818,39,1.161,40,0.439,41,0.92,47,1.433,48,2.23,49,4.664,50,5.369,51,2.741,53,0.172,54,3.589,55,3.096,56,1.105,58,3.857,62,0.077,63,0.212,71,3.589,72,4.983,73,1.338,77,2.118,79,2.838,84,1.287,91,0.005,92,0.005,93,6.863,94,7.928,95,6.057,96,3.328,97,6.057,98,6.057,99,7.685,100,6.057,101,3.18,102,6.057,103,6.057,104,6.057,105,6.057,106,6.057]],["title/injectables/AccessGroupFromPayloadService.html",[0,0.716,107,4.3]],["body/injectables/AccessGroupFromPayloadService.html",[0,1.098,2,1.68,3,0.058,4,0.058,5,0.058,6,4.898,7,3.145,8,4.108,12,1.502,13,4.704,14,3.587,16,3.392,17,3.404,18,2.11,19,4.824,20,0.299,21,1.721,22,2.268,24,5.377,25,1.653,27,0.698,30,1.502,33,0.006,36,0.682,38,1.748,39,1.116,40,0.422,41,0.884,47,1.347,48,2.144,49,5.688,50,5.155,51,2.577,53,0.177,54,3.375,55,2.91,56,1.039,58,3.627,62,0.072,63,0.199,71,3.375,73,1.299,79,3.028,81,3.375,83,5.086,84,1.21,91,0.004,92,0.004,101,2.99,107,7.322,108,5.695,109,5.525,110,7.387,111,3.375,112,4.168,113,5.695,114,5.695,115,2.365,116,5.695,117,7.387,118,5.695,119,2.458,120,5.695,121,5.695,122,7.387]],["title/injectables/AccessGroupFromStaticValuesService.html",[0,0.716,123,4.3]],["body/injectables/AccessGroupFromStaticValuesService.html",[0,1.173,2,1.864,3,0.065,4,0.065,5,0.065,6,5.232,7,3.364,8,4.388,12,1.666,13,5.025,14,3.832,16,3.524,17,3.276,18,2.253,19,5.012,20,0.332,21,1.838,22,2.38,24,6.753,25,1.834,27,0.733,33,0.006,36,0.729,38,1.495,39,0.954,40,0.361,41,0.756,47,1.495,48,2.29,51,2.859,53,0.161,54,3.744,55,3.228,56,1.152,62,0.08,63,0.221,71,3.744,81,3.744,84,1.343,91,0.005,92,0.005,101,3.317,123,7.047,124,9.277,125,6.317,126,3.832,127,5.468,128,6.317,129,6.317,130,7.891,131,6.317,132,6.317,133,6.317]],["title/classes/AccessGroupService.html",[19,2.677,63,0.168]],["body/classes/AccessGroupService.html",[3,0.072,4,0.072,5,0.072,6,5.6,7,3.062,8,4.697,19,4.697,20,0.371,21,1.968,24,6.579,30,1.862,33,0.006,36,0.652,38,1.67,39,1.067,40,0.403,41,0.845,47,1.67,48,2.451,49,5.437,50,5.573,53,0.144,58,4.497,62,0.09,63,0.247,72,5.808,91,0.005,92,0.005,134,1.308,135,7.061,136,4.336,137,7.061]],["title/controllers/AdminController.html",[138,2.179,139,3.96]],["body/controllers/AdminController.html",[3,0.067,4,0.067,5,0.067,20,0.341,21,1.87,22,2.635,33,0.006,36,0.742,47,1.899,48,2.642,53,0.185,56,1.184,62,0.083,63,0.227,70,1.825,84,1.706,91,0.005,92,0.005,101,3.41,138,2.939,139,6.604,140,2.697,141,6.495,142,3.41,143,5.001,144,8.128,145,8.128,146,1.655,147,6.495,148,6.495,149,6.495,150,6.495,151,3.612,152,1.279,153,6.343,154,5.8,155,5.777,156,4.728,157,4.501,158,6.495,159,6.495,160,6.495,161,3.633,162,6.495,163,6.495,164,6.495]],["title/modules/AdminModule.html",[165,1.57,166,3.505]],["body/modules/AdminModule.html",[3,0.07,4,0.07,5,0.07,33,0.006,53,0.181,56,1.242,62,0.087,63,0.238,91,0.005,92,0.005,96,3.852,139,7.318,140,3.431,153,7.318,154,6.08,165,2.901,166,7.098,167,3.013,168,3.013,169,3.152,170,3.152,171,3.081,172,4.119,173,6.08,174,6.08,175,6.08,176,3.826,177,3.013,178,2.827,179,6.809,180,6.809,181,3.39]],["title/injectables/AdminService.html",[0,0.716,153,3.505]],["body/injectables/AdminService.html",[0,1.236,2,2.03,3,0.07,4,0.07,5,0.07,20,0.361,21,1.937,22,2.672,33,0.006,36,0.768,47,1.967,48,2.695,53,0.182,56,1.255,62,0.088,63,0.24,84,1.767,91,0.005,92,0.005,144,8.291,145,8.291,153,6.054,161,3.763,182,6.881,183,6.881,184,6.881,185,4.77,186,6.881,187,8.316,188,6.881]],["title/modules/AppModule.html",[165,1.57,189,3.707]],["body/modules/AppModule.html",[3,0.033,4,0.033,5,0.033,21,0.741,22,1.844,25,0.923,27,0.271,33,0.006,36,0.294,40,0.279,47,0.752,53,0.2,55,1.625,56,0.58,62,0.04,63,0.111,64,1.738,69,1.348,73,1.326,77,2.078,79,1.174,81,2.893,84,1.038,91,0.003,92,0.003,96,2.114,112,3.785,115,1.32,119,0.953,136,1.472,140,1.32,165,1.938,166,5.526,167,1.407,168,1.407,169,1.472,170,1.472,171,1.439,172,1.472,176,2.26,177,1.407,178,1.32,181,3.32,185,1.823,189,7.67,190,2.839,191,2.839,192,4.658,193,5.261,194,5.526,195,5.261,196,5.261,197,4.354,198,5.261,199,5.526,200,5.526,201,5.261,202,5.033,203,5.033,204,5.033,205,5.526,206,5.526,207,5.033,208,3.179,209,7.192,210,3.179,211,1.717,212,0.764,213,3.179,214,3.179,215,2.839,216,3.646,217,3.179,218,3.383,219,3.179,220,4.882,221,3.759,222,1.717,223,2.314,224,3.179,225,2.615,226,3.179,227,3.179,228,3.179,229,3.179,230,3.179,231,1.884,232,2.314,233,3.179,234,3.179,235,3.179,236,2.448,237,2.314,238,2.839,239,3.179,240,3.179,241,4.882,242,0.8,243,2.839,244,2.839,245,2.573,246,2.448,247,2.893,248,3.179,249,3.554,250,3.179,251,2.615,252,3.94,253,3.179,254,3.179,255,3.759,256,2.615,257,3.179,258,1.768,259,4.882,260,3.179,261,3.179,262,4.882,263,3.179,264,3.179,265,3.179,266,3.179,267,2.448,268,2.448,269,3.179,270,3.179,271,3.179,272,3.179,273,3.179,274,3.521,275,5.307,276,3.179,277,3.179,278,2.615,279,3.179,280,3.179,281,2.839,282,3.179,283,2.893,284,1.244,285,1.394,286,2.839,287,3.179,288,3.179,289,3.179,290,3.179,291,3.179,292,3.179,293,3.179,294,2.041,295,2.025,296,3.179,297,3.179,298,3.179,299,3.179,300,4.016,301,2.314,302,2.615,303,3.12,304,3.179,305,2.615,306,3.179,307,1.669,308,1.823,309,3.179,310,1.507,311,4.882,312,3.179,313,5.307,314,3.179,315,2.323,316,3.179,317,3.209,318,3.179,319,4.882,320,4.36,321,2.839,322,2.839,323,1.507,324,2.203,325,2.615,326,3.179,327,3.179,328,1.293,329,4.882,330,3.179,331,3.179,332,4.62,333,3.179,334,1.407,335,3.179,336,2.615,337,4.882,338,2.615,339,4.882,340,2.615,341,4.882,342,1.196,343,1.625,344,1.625,345,3.179,346,1.219,347,2.839,348,2.108,349,2.839,350,3.179,351,3.179,352,3.179,353,2.108,354,2.715,355,3.179,356,2.615]],["title/classes/Attachment.html",[63,0.168,357,2.761]],["body/classes/Attachment.html",[3,0.035,4,0.035,5,0.035,7,1.866,12,2.33,16,2.9,17,2.868,18,1.469,20,0.363,27,0.861,30,1.822,32,1.414,33,0.006,36,0.845,40,0.559,41,0.827,51,3.664,53,0.151,62,0.079,63,0.119,65,2.778,69,2.628,73,0.54,79,1.9,87,3.962,91,0.003,92,0.003,119,1.543,134,0.631,146,1.885,152,0.671,212,0.818,242,1.295,284,1.82,285,2.523,307,1.789,308,4.473,323,2.439,332,3.566,346,1.973,357,4.473,358,3.042,359,4.785,360,0.907,361,1.89,362,6.623,363,3.087,364,2.29,365,4.111,366,3.948,367,2.382,368,2.939,369,2.778,370,3.011,371,2.701,372,2.861,373,3.407,374,3.057,375,5.145,376,3.407,377,3.407,378,2.717,379,6.2,380,2.093,381,3.407,382,2.844,383,4.233,384,3.407,385,3.407,386,3.566,387,3.407,388,4.595,389,4.774,390,3.962,391,5.683,392,5.145,393,5.145,394,5.145,395,3.407,396,3.407,397,1.475,398,2.951,399,2.951,400,2.727,401,2.562,402,2.562,403,3.049,404,3.674,405,3.277,406,2.09,407,1.894,408,2.17,409,2.63,410,2.17,411,2.259,412,2.17,413,2.17,414,2.259,415,2.019,416,2.17,417,2.09,418,2.17,419,1.894,420,2.09,421,2.17,422,2.259,423,3.461,424,2.052,425,2.277,426,3.841,427,3.841,428,3.962,429,3.049,430,3.962,431,2.09,432,1.789,433,1.894,434,1.615,435,1.163,436,2.562,437,1.741,438,1.508,439,2.019,440,1.84,441,2.778,442,1.954,443,1.13,444,1.414,445,1.894,446,1.789,447,1.954,448,2.019,449,2.019,450,3.049,451,3.049,452,2.09,453,2.63,454,2.63,455,2.09,456,2.09,457,3.197,458,1.622,459,1.358,460,2.468,461,2.093,462,2.259,463,2.019,464,3.448,465,1.954,466,2.802,467,1.654,468,1.741,469,1.741,470,2.802,471,2.802,472,3.407]],["title/modules/AttachmentsModule.html",[165,1.57,192,2.954]],["body/modules/AttachmentsModule.html",[3,0.064,4,0.064,5,0.064,33,0.006,39,0.943,43,3.278,53,0.183,56,1.139,62,0.079,63,0.218,73,0.99,84,1.327,91,0.005,92,0.005,96,3.707,165,2.791,167,2.763,168,2.763,169,2.891,170,2.891,171,2.826,172,3.963,176,3.627,177,2.763,178,2.593,181,3.109,192,5.874,211,3.372,212,1.5,274,3.7,357,3.581,361,2.388,438,2.763,458,2.698,471,7.041,473,5.576,474,5.576,475,5.576,476,7.238,477,6.244,478,6.244,479,5.576,480,4.327,481,6.244,482,4.327,483,3.321,484,3.831,485,5.576,486,3.063,487,5.429,488,6.244]],["title/injectables/AttachmentsService.html",[0,0.716,476,3.505]],["body/injectables/AttachmentsService.html",[0,0.963,2,1.381,3,0.048,4,0.048,5,0.048,20,0.246,21,1.509,22,2.684,25,1.88,30,1.959,33,0.006,36,0.804,38,2.059,39,1.315,40,0.497,41,1.042,47,1.991,48,2.712,53,0.19,56,0.854,62,0.06,63,0.164,64,2.306,73,1.177,84,1.788,91,0.004,92,0.004,212,1.125,222,2.528,283,2.775,284,0.98,294,2.225,303,2.458,315,3.134,357,2.686,435,1.058,444,3.328,466,3.852,476,4.716,479,4.182,489,4.682,490,1.911,491,3.607,492,3.521,493,7.428,494,5.314,495,4.682,496,3.488,497,4.682,498,6.478,499,6.478,500,6.479,501,4.682,502,2.458,503,3.414,504,4.682,505,4.085,506,2.458,507,8.015,508,4.682,509,4.682,510,4.682,511,3.409,512,7.339,513,4.682,514,4.125,515,2.274,516,2.458,517,2.119,518,5.785,519,2.274,520,2.332,521,2.604,522,2.458,523,2.982,524,2.982,525,2.274,526,3.245,527,4.682,528,2.982,529,6.478,530,4.125,531,4.682,532,6.478,533,4.682,534,4.682,535,4.682,536,4.682,537,3.715,538,4.682,539,4.682]],["title/controllers/AuthController.html",[138,2.179,540,3.707]],["body/controllers/AuthController.html",[3,0.036,4,0.036,5,0.036,12,2.222,13,5.366,20,0.185,21,1.231,22,2.656,25,1.024,27,0.45,30,2.379,32,2.92,33,0.006,36,0.757,38,1.87,39,1.194,40,0.492,41,0.946,43,1.853,47,1.938,48,2.445,53,0.186,56,0.644,62,0.045,63,0.123,64,1.881,73,0.837,77,2.459,84,1.6,91,0.003,92,0.003,112,2.866,115,1.465,138,1.597,140,1.465,142,1.853,146,1.689,151,1.963,152,0.695,155,5.24,157,2.446,178,3.126,223,2.569,225,4.346,242,2.242,294,1.212,323,2.505,328,1.436,364,1.303,401,3.502,438,1.562,496,2.697,515,1.714,540,4.068,541,3.529,542,4.346,543,6.333,544,4.611,545,5.284,546,4.346,547,6.333,548,7.032,549,6.333,550,3.529,551,5.656,552,5.284,553,6.387,554,6.28,555,5.119,556,6.931,557,7.032,558,6.28,559,4.662,560,3.529,561,3.529,562,5.013,563,3.152,564,3.152,565,3.529,566,3.529,567,3.529,568,3.529,569,4.611,570,2.903,571,3.152,572,6.28,573,4.873,574,3.152,575,4.068,576,4.719,577,3.152,578,3.529,579,3.529,580,5.284,581,3.886,582,5.284,583,4.068,584,5.284,585,4.719,586,2.774,587,4.346,588,3.529,589,3.529,590,3.529,591,3.529,592,3.529,593,3.529,594,3.529,595,2.165,596,2.248,597,2.717,598,2.717,599,3.529,600,3.753,601,2.569,602,3.529,603,3.242,604,5.784,605,5.119,606,3.662,607,5.414,608,3.529,609,2.903,610,3.529,611,3.529,612,2.248,613,2.903,614,3.529,615,2.446,616,2.446,617,3.529,618,3.529,619,3.152,620,3.152,621,5.656,622,4.873,623,4.611,624,3.529,625,5.284,626,3.529,627,3.529,628,5.284,629,3.529,630,3.529,631,3.846,632,3.152,633,3.529,634,3.529,635,3.529,636,2.248,637,3.529,638,3.529,639,3.846,640,3.529,641,3.662,642,3.529,643,3.529,644,3.529,645,3.529,646,3.529,647,3.529,648,3.529,649,3.529,650,3.529,651,1.853,652,3.529,653,4.719,654,3.529,655,2.717,656,1.407,657,3.152,658,3.152,659,3.152,660,3.152]],["title/modules/AuthModule.html",[165,1.57,193,3.336]],["body/modules/AuthModule.html",[3,0.048,4,0.048,5,0.048,7,2.708,8,3.628,13,3.012,16,2.551,19,4.696,22,1.804,33,0.006,53,0.199,54,2.803,56,0.863,62,0.06,63,0.165,73,1.276,77,1.654,84,1.387,91,0.004,92,0.004,96,3.234,112,4.125,115,1.964,140,2.709,161,2.141,165,2.435,167,2.093,168,2.093,169,2.19,170,2.19,171,2.141,172,3.457,176,3.02,177,2.093,178,1.964,181,3.719,193,6.794,207,5.789,215,4.224,216,4.582,242,1.191,274,3.866,285,1.351,294,2.241,303,3.425,307,2.483,426,2.63,540,5.75,600,5.785,601,3.443,615,3.278,616,3.278,636,4.155,661,4.224,662,4.73,663,4.224,664,4.224,665,4.042,666,6.722,667,6.722,668,6.722,669,4.73,670,6.524,671,2.713,672,4.73,673,4.73,674,5.826,675,3.136,676,4.73,677,4.73,678,3.921,679,3.136,680,3.642,681,5.75,682,4.73,683,5.826,684,4.224,685,2.093,686,2.048,687,6.524,688,6.524,689,4.73,690,4.73,691,4.73,692,4.325,693,4.73,694,4.224,695,3.642,696,3.891,697,4.224,698,3.278,699,4.224,700,4.73,701,4.73,702,3.136,703,3.891]],["title/injectables/AuthService.html",[0,0.716,600,2.853]],["body/injectables/AuthService.html",[0,0.872,2,1.201,3,0.042,4,0.042,5,0.042,20,0.214,21,1.367,22,2.568,25,1.703,27,0.761,33,0.006,36,0.737,38,1.889,39,1.206,40,0.456,41,0.955,47,1.782,48,2.186,53,0.185,56,0.742,62,0.052,63,0.142,64,2.45,73,1.471,74,1.842,77,2.792,84,1.928,91,0.003,92,0.003,111,2.412,112,3.763,115,1.69,161,3.114,218,2.821,242,2.157,245,1.763,284,0.852,285,1.162,294,1.398,307,2.137,315,2.69,317,3.168,328,2.387,354,2.263,364,1.503,425,1.801,496,3.287,515,1.977,525,1.977,544,4.272,546,6.567,562,3.168,570,4.827,600,3.477,612,2.592,615,4.066,616,2.821,622,5.219,631,2.963,655,3.134,675,2.699,678,4.5,692,2.699,698,5.219,704,4.07,705,5.868,706,6.881,707,7.655,708,4.07,709,5.868,710,9.284,711,4.07,712,5.868,713,4.07,714,4.07,715,4.07,716,5.66,717,4.07,718,4.07,719,3.348,720,4.07,721,4.07,722,3.348,723,2.963,724,4.07,725,4.07,726,4.07,727,4.518,728,2.027,729,4.07,730,4.07,731,4.518,732,3.348,733,5.24,734,4.07,735,3.635,736,5.66,737,3.635,738,4.07,739,4.07,740,4.07,741,4.07,742,2.497,743,4.07,744,6.881,745,3.134,746,4.07,747,4.827,748,4.07,749,4.07,750,4.07,751,5.868,752,5.298,753,4.07,754,3.348,755,5.868,756,2.137,757,4.07,758,3.348,759,3.348,760,3.348,761,3.348,762,6.881,763,4.07,764,4.07]],["title/classes/BuildOpenIdClient.html",[63,0.168,680,3.707]],["body/classes/BuildOpenIdClient.html",[0,0.806,3,0.037,4,0.037,5,0.037,7,1.324,8,2.031,16,1.428,18,1.043,19,3.595,20,0.192,21,1.263,22,1.978,25,1.573,27,0.682,32,2.251,33,0.006,36,0.501,38,0.864,39,0.819,40,0.31,41,0.437,47,0.864,48,1.06,50,4.102,53,0.19,54,2.165,55,1.867,56,0.666,58,2.326,62,0.069,63,0.189,64,2.546,70,1.027,71,2.165,73,1.49,74,3.457,77,2.898,84,1.52,91,0.003,92,0.003,96,1.582,101,1.918,109,2.326,111,2.165,112,3.851,115,1.517,134,0.676,218,2.531,242,2.188,285,1.548,294,2.221,315,2.528,317,1.972,328,1.486,342,2.432,364,1.349,389,2.812,397,1.582,435,0.825,440,1.972,490,1.078,503,1.93,514,2.326,581,2.241,600,3.831,601,2.659,612,2.326,615,4.956,616,2.531,631,6.196,636,2.326,671,2.095,678,3.394,679,2.422,680,4.174,681,2.812,692,6.025,722,3.005,723,3.946,732,3.005,742,2.241,754,4.459,758,3.005,759,3.005,760,3.005,761,3.005,765,3.262,766,5.883,767,3.653,768,3.653,769,3.946,770,2.659,771,3.594,772,3.212,773,2.659,774,3.757,775,2.812,776,2.531,777,6.387,778,4.841,779,5.277,780,2.531,781,4.688,782,2.165,783,2.659,784,3.262,785,3.262,786,3.262,787,3.262,788,3.262,789,2.659,790,3.831,791,3.262,792,3.262,793,3.262,794,3.262,795,3.262,796,3.262,797,3.262,798,3.262,799,3.262,800,5.773,801,3.262,802,3.262,803,4.459,804,4.459,805,5.317,806,3.005,807,3.262,808,2.659,809,2.812,810,2.812,811,3.262,812,3.005,813,2.812,814,5.773,815,3.005,816,2.699,817,4.841,818,3.262,819,2.812,820,2.531,821,2.422,822,4.841,823,3.005,824,2.422,825,2.812,826,4.459,827,4.841,828,3.262,829,3.262,830,3.262,831,3.262,832,3.005,833,3.262,834,3.005,835,2.812,836,3.262,837,4.841,838,2.812,839,3.262,840,3.262,841,3.262,842,3.262,843,3.262,844,4.841,845,3.262,846,3.005,847,4.841,848,3.262,849,2.326,850,2.812,851,3.262,852,3.262,853,3.262,854,3.262,855,2.659,856,3.005,857,3.005,858,3.262,859,4.841,860,3.005,861,3.005,862,5.773,863,3.005,864,3.005,865,3.262]],["title/injectables/CaslAbilityFactory.html",[0,0.716,665,2.229]],["body/injectables/CaslAbilityFactory.html",[0,0.727,2,0.94,3,0.033,4,0.033,5,0.033,7,1.155,17,2.47,20,0.167,21,1.139,27,0.568,33,0.006,36,0.294,38,0.754,39,0.481,40,0.34,41,0.381,47,0.754,53,0.191,56,0.581,62,0.062,63,0.111,73,1.254,74,2.692,79,2.197,84,0.677,91,0.003,92,0.003,143,4.581,242,2.394,284,0.667,285,1.396,294,1.094,346,3.21,357,3.412,361,2.034,380,1.296,401,1.586,403,1.888,490,1.442,520,3.323,521,1.771,522,1.672,553,3.559,612,2.029,665,2.264,685,2.164,742,4.853,766,4.022,782,2.897,866,2.845,867,4.889,868,4.889,869,3.186,870,3.945,871,4.889,872,4.889,873,4.889,874,4.366,875,2.845,876,2.208,877,1.72,878,2.845,879,4.271,880,2.62,881,5.851,882,2.208,883,4.62,884,3.186,885,3.113,886,3.186,887,3.242,888,3.186,889,5.038,890,2.62,891,3.65,892,2.845,893,6.22,894,3.186,895,5.037,896,1.672,897,2.62,898,2.029,899,4.625,900,3.186,901,3.711,902,2.208,903,4.25,904,2.319,905,1.827,906,3.186,907,2.845,908,1.771,909,4.889,910,3.186,911,3.186,912,3.186,913,5.949,914,2.897,915,4.889,916,3.186,917,3.186,918,3.186,919,4.889,920,3.186,921,3.186,922,2.453,923,3.186,924,2.319,925,6.673,926,4.889,927,2.319,928,3.186,929,5.949,930,8.163,931,3.186,932,4.022,933,3.186,934,3.186,935,3.186,936,3.186,937,3.186,938,4.889,939,3.186,940,3.186,941,4.889,942,2.845,943,7.597,944,2.845,945,4.889,946,3.186,947,3.186,948,8.163,949,7.876,950,2.845,951,1.442,952,1.954,953,3.186,954,3.186,955,3.186,956,3.186,957,3.186,958,3.186,959,3.186,960,3.186,961,3.186,962,4.889,963,4.889,964,9.026,965,3.827,966,2.62,967,2.319,968,3.186,969,2.62,970,2.453,971,3.186,972,3.186,973,3.186,974,5.949,975,5.949,976,8.163,977,4.889,978,3.186,979,3.186,980,3.186,981,3.186,982,4.889,983,3.186,984,3.186,985,3.186,986,1.954,987,3.186]],["title/modules/CaslModule.html",[165,1.57,194,3.505]],["body/modules/CaslModule.html",[3,0.071,4,0.071,5,0.071,33,0.006,53,0.17,56,1.268,62,0.089,63,0.243,91,0.005,92,0.005,96,3.888,165,2.928,167,3.078,168,3.078,169,3.22,170,3.22,171,3.147,172,4.157,176,3.875,177,3.078,178,2.888,194,7.129,665,4.666,686,3.012,988,6.211,989,6.211,990,6.955,991,6.955,992,5.721]],["title/modules/CommonModule.html",[165,1.57,195,3.336]],["body/modules/CommonModule.html",[3,0.071,4,0.071,5,0.071,33,0.006,53,0.171,56,1.271,62,0.089,63,0.244,91,0.005,92,0.005,96,3.892,165,2.93,167,3.084,168,3.084,169,3.227,170,3.227,171,3.154,172,4.161,176,3.88,177,3.084,178,2.894,195,6.79,993,6.224,994,6.224,995,6.224,996,7.339,997,6.97,998,6.97]],["title/classes/CreateAttachmentDto.html",[63,0.168,500,3.707]],["body/classes/CreateAttachmentDto.html",[3,0.053,4,0.053,5,0.053,7,2.512,12,2.062,16,2.021,17,2.146,18,1.979,20,0.271,27,0.844,33,0.006,36,0.871,39,0.781,40,0.538,41,1.171,51,3.537,53,0.141,62,0.066,63,0.242,69,3.313,70,2.831,79,2.559,91,0.004,92,0.004,119,1.55,126,2.51,134,0.957,146,1.943,284,1.45,285,1.979,346,2.657,360,1.014,362,6.98,363,3.892,364,2.887,365,5.182,366,4.977,367,3.208,374,2.638,378,2.269,500,5.335,883,2.51,986,3.171,999,9.156,1000,4.615,1001,5.5,1002,4.519,1003,5.168,1004,8.708,1005,5.168,1006,5.168,1007,5.168,1008,5.168,1009,5.168,1010,3.291,1011,3.427,1012,3.291,1013,3.291,1014,3.427,1015,3.291,1016,3.427,1017,3.581,1018,4.249,1019,2.146,1020,3.581]],["title/classes/CreateCustomJwt.html",[63,0.168,1021,3.707]],["body/classes/CreateCustomJwt.html",[3,0.066,4,0.066,5,0.066,12,2.102,20,0.337,27,0.794,33,0.006,36,0.593,40,0.495,41,0.954,53,0.185,62,0.082,63,0.303,70,2.436,91,0.005,92,0.005,134,1.188,146,1.323,152,1.264,285,2.276,310,3.777,360,1.166,378,1.863,409,4.072,446,4.183,460,2.429,585,7.116,639,5.801,675,4.255,698,6.006,772,4.722,1002,3.87,1018,3.777,1019,2.664,1021,6.135,1022,5.801,1023,5.731,1024,7.129,1025,5.279,1026,7.968,1027,7.116,1028,2.786,1029,7.116,1030,5.074,1031,7.968,1032,6.417,1033,6.417,1034,3.569,1035,6.417]],["title/classes/CreateDatablockDto.html",[63,0.168,1036,3.505]],["body/classes/CreateDatablockDto.html",[3,0.04,4,0.04,5,0.059,7,2.073,12,2.493,14,3.596,16,1.536,17,1.631,18,1.633,20,0.206,27,0.834,33,0.006,36,0.831,39,1.019,40,0.549,41,0.886,51,3.051,53,0.167,62,0.05,63,0.236,70,2.781,79,2.112,91,0.003,92,0.003,119,1.178,126,1.907,134,0.727,146,1.855,152,0.773,284,1.948,285,2.115,346,2.193,360,0.836,363,3.357,364,2.112,367,2.647,374,2.99,378,2.743,380,2.326,400,2.59,460,2.585,879,4.691,883,1.907,927,4.162,986,2.41,1001,5.04,1002,3.822,1010,2.501,1011,2.604,1012,2.501,1013,2.501,1014,2.604,1015,2.501,1016,2.604,1017,2.722,1018,2.71,1019,1.631,1020,2.722,1028,3.038,1034,2.184,1036,4.162,1037,7.759,1038,3.507,1039,5.546,1040,5.191,1041,4.137,1042,5.191,1043,3.752,1044,5.729,1045,2.922,1046,3.51,1047,4.703,1048,4.137,1049,3.641,1050,6.092,1051,4.162,1052,3.927,1053,3.927,1054,5.718,1055,3.962,1056,5.106,1057,4.162,1058,3.749,1059,3.507,1060,3.927,1061,4.672,1062,3.927,1063,2.859,1064,3.927,1065,3.641,1066,4.402,1067,3.507,1068,3.927,1069,5.391,1070,5.391,1071,4.247,1072,3.927,1073,3.927,1074,3.927,1075,3.927,1076,4.402,1077,3.508,1078,5.106,1079,3.927,1080,3.927,1081,5.106,1082,3.279,1083,6.021,1084,4.703,1085,4.402,1086,4.402,1087,3.507,1088,3.507,1089,3.507,1090,3.507,1091,2.859]],["title/classes/CreateDatasetDatablockDto.html",[63,0.168,1092,4.3]],["body/classes/CreateDatasetDatablockDto.html",[3,0.074,4,0.074,5,0.074,14,3.513,18,2.066,33,0.006,53,0.175,62,0.092,63,0.253,73,1.146,79,2.672,91,0.005,92,0.005,134,1.34,152,1.424,346,2.775,363,3.602,367,3.349,380,3.486,425,3.202,490,2.134,553,5.266,879,3.906,1036,5.266,1037,6.461,1092,7.653,1093,7.234,1094,6.461,1095,5.951,1096,6.461,1097,7.234]],["title/classes/CreateDatasetOrigDatablockDto.html",[63,0.168,1098,4.3]],["body/classes/CreateDatasetOrigDatablockDto.html",[3,0.076,4,0.076,5,0.076,18,2.108,33,0.006,53,0.177,62,0.094,63,0.258,73,1.17,79,2.727,91,0.005,92,0.005,134,1.367,152,1.454,346,2.832,363,3.676,367,3.418,380,3.003,490,2.178,1094,7.745,1098,7.745,1099,6.593,1100,7.383,1101,6.01,1102,5.685]],["title/classes/CreateInitialDatasetDto.html",[63,0.168,1103,3.96]],["body/classes/CreateInitialDatasetDto.html",[3,0.076,4,0.076,5,0.076,20,0.388,27,0.739,33,0.006,36,0.682,40,0.422,62,0.094,63,0.258,70,2.588,91,0.005,92,0.005,134,1.367,236,6.678,360,1.269,361,2.807,1103,7.134,1104,5.75,1105,8.672,1106,5.375,1107,7.383]],["title/classes/CreateInstrumentDto.html",[63,0.168,1108,3.505]],["body/classes/CreateInstrumentDto.html",[3,0.063,4,0.063,5,0.063,20,0.324,27,0.823,30,2.049,33,0.006,36,0.786,39,1.285,40,0.537,41,0.93,53,0.158,62,0.078,63,0.271,70,2.738,91,0.005,92,0.005,134,1.141,146,1.754,151,3.426,152,1.213,284,1.87,285,2.218,360,1.136,374,2.872,378,2.729,382,2.979,460,2.723,728,3.868,1002,4.131,1018,3.682,1019,2.558,1108,5.655,1109,8.932,1110,5.502,1111,7.597,1112,7.597,1113,6.161,1114,6.161,1115,7.768,1116,6.161,1117,7.768,1118,6.161,1119,5.981,1120,5.502]],["title/classes/CreateJobDto.html",[63,0.168,1121,3.505]],["body/classes/CreateJobDto.html",[3,0.056,4,0.056,5,0.056,20,0.288,27,0.776,30,2.253,33,0.006,36,0.858,40,0.557,41,1.128,53,0.174,62,0.07,63,0.281,70,2.829,91,0.004,92,0.004,134,1.014,146,1.915,284,1.146,360,1.053,380,2.227,423,2.989,1002,4.149,1018,4.319,1019,2.273,1034,3.044,1058,3.044,1063,3.985,1082,4.128,1085,5.542,1119,6.193,1121,5.24,1122,9.424,1123,4.888,1124,7.182,1125,7.182,1126,7.182,1127,7.182,1128,6.616,1129,6.193,1130,6.616,1131,5.474,1132,5.474,1133,7.182,1134,5.474,1135,4.888,1136,5.474,1137,7.198,1138,5.474,1139,5.474,1140,4.215,1141,5.474,1142,5.474,1143,5.24,1144,4.503,1145,5.474,1146,5.921,1147,5.474]],["title/classes/CreateMeasurementPeriodDto.html",[63,0.168,1148,3.96]],["body/classes/CreateMeasurementPeriodDto.html",[3,0.087,4,0.049,5,0.049,10,5.357,12,2.41,14,3.187,20,0.251,27,0.778,33,0.006,36,0.746,40,0.522,41,0.786,53,0.134,62,0.061,63,0.229,65,4.363,70,2.684,91,0.004,92,0.004,134,0.884,146,1.666,152,0.94,284,1.374,360,0.96,374,2.727,378,1.905,398,3.764,400,2.295,423,3.793,424,3.222,434,3.83,460,2.583,883,4.114,952,4.027,1002,3.643,1018,3.111,1019,1.981,1030,5.146,1046,3.111,1077,5.605,1143,5.461,1148,5.399,1149,7.565,1150,7.406,1151,4.772,1152,6.171,1153,4.974,1154,6.171,1155,5.861,1156,7.201,1157,4.18,1158,5.399,1159,4.772,1160,4.772,1161,5.861,1162,5.599,1163,5.599,1164,5.599,1165,5.599,1166,5.599,1167,5.599,1168,4.957,1169,5.882,1170,5.357,1171,5.882,1172,5.882,1173,5.599,1174,4.957,1175,5.882,1176,5.399,1177,4.772,1178,5.861,1179,5.054,1180,4.772,1181,4.772,1182,4.778,1183,4.772,1184,4.262,1185,4.352,1186,4.262]],["title/classes/CreateOrigDatablockDto.html",[63,0.168,1101,3.336]],["body/classes/CreateOrigDatablockDto.html",[3,0.045,4,0.045,5,0.063,7,2.971,12,2.48,14,3.469,16,1.703,17,1.808,18,1.759,20,0.229,27,0.818,33,0.006,36,0.808,39,1.173,40,0.545,41,0.929,51,3.233,53,0.173,62,0.055,63,0.25,70,2.749,79,2.274,91,0.004,92,0.004,119,1.847,126,3.469,134,0.806,146,1.802,152,0.857,284,1.869,285,2.429,308,2.498,346,2.74,360,0.901,363,3.557,367,2.851,374,2.951,378,2.729,380,2.505,460,2.593,651,3.233,879,4.193,883,2.115,927,4.483,986,4.383,1001,5.218,1002,3.771,1010,2.773,1011,2.888,1012,2.773,1013,2.773,1014,2.888,1015,3.922,1018,3.386,1019,1.808,1020,3.018,1028,2.715,1034,2.422,1040,5.5,1041,4.383,1043,3.626,1046,2.919,1055,4.267,1056,5.499,1057,4.483,1058,3.972,1059,3.889,1061,4.951,1063,3.17,1065,3.922,1066,6.549,1067,3.889,1069,4.483,1071,4.454,1081,5.499,1082,3.532,1083,5.499,1084,5.876,1085,4.741,1086,4.741,1087,3.889,1099,7.317,1101,4.267,1187,3.889,1188,6.158,1189,4.355,1190,3.424,1191,4.083,1192,5.065,1193,4.355,1194,4.355,1195,4.355,1196,4.483,1197,4.483,1198,4.355,1199,4.355,1200,4.355,1201,4.355,1202,3.889,1203,3.17,1204,3.582,1205,3.582]],["title/classes/CreatePolicyDto.html",[63,0.168,1206,3.505]],["body/classes/CreatePolicyDto.html",[3,0.049,4,0.049,5,0.049,7,2.389,12,1.985,16,1.877,17,1.993,18,1.882,20,0.252,27,0.82,33,0.006,36,0.883,39,0.725,40,0.546,41,0.969,51,3.405,53,0.134,62,0.061,63,0.23,70,2.85,79,2.434,91,0.004,92,0.004,119,1.439,126,2.331,134,0.889,146,1.971,284,1.379,285,1.882,346,2.528,360,0.964,367,3.051,374,2.54,378,2.184,756,4.604,883,2.331,986,2.945,1001,5.381,1002,3.2,1010,3.057,1011,3.183,1012,3.057,1013,3.057,1014,3.183,1015,3.057,1016,3.183,1017,3.327,1018,4.452,1019,1.993,1020,3.327,1028,2.833,1082,4.646,1140,3.696,1206,4.797,1207,9.391,1208,3.949,1209,5.794,1210,5.794,1211,6.19,1212,6.19,1213,6.19,1214,6.19,1215,5.794,1216,5.794,1217,6.19,1218,7.525,1219,4.8,1220,7.525,1221,4.8,1222,4.8,1223,5.885,1224,4.8,1225,4.8,1226,4.287,1227,4.8,1228,4.8,1229,4.8,1230,7.234,1231,6.19]],["title/classes/CreateProposalDto.html",[63,0.168,249,3.505]],["body/classes/CreateProposalDto.html",[3,0.032,4,0.032,5,0.032,7,1.755,12,2.55,14,2.351,16,1.23,17,1.306,18,1.383,20,0.165,27,0.847,30,1.277,33,0.006,36,0.84,39,1.26,40,0.558,41,1.137,51,2.671,53,0.154,62,0.04,63,0.206,68,3.728,69,2.502,70,2.797,79,1.788,91,0.003,92,0.003,119,0.943,126,1.528,134,0.582,136,3.069,142,2.542,146,1.874,151,1.749,152,0.619,249,3.524,284,1.814,285,2.687,332,5.457,334,3.167,336,4.855,338,4.855,340,4.855,342,2.963,343,3.016,344,3.016,346,1.857,360,0.708,367,2.242,374,3.068,378,2.807,400,2.318,423,3.651,454,3.388,460,2.715,467,3.219,486,2.592,490,0.928,883,2.866,952,2.97,986,1.93,1001,4.638,1002,3.948,1010,2.003,1011,2.085,1012,2.003,1013,2.003,1014,2.085,1015,2.003,1016,2.085,1017,2.18,1018,4.036,1019,1.306,1020,2.18,1028,1.693,1034,1.749,1045,2.474,1046,2.295,1058,1.749,1063,2.29,1082,3.802,1085,3.728,1133,5.271,1143,4.297,1148,3.983,1149,7.952,1150,2.422,1179,3.728,1232,2.809,1233,4.297,1234,5.271,1235,4.297,1236,3.145,1237,3.145,1238,6.751,1239,3.145,1240,3.145,1241,3.145,1242,3.145,1243,4.826,1244,4.841,1245,3.145,1246,3.145,1247,4.545,1248,3.728,1249,3.983,1250,3.728,1251,4.324,1252,3.145,1253,3.145,1254,6.751,1255,3.145,1256,3.145,1257,4.841,1258,3.145,1259,3.145,1260,3.355,1261,4.324,1262,4.324,1263,4.324,1264,3.145,1265,3.145,1266,3.145,1267,3.145,1268,3.145,1269,3.145,1270,3.145,1271,2.809,1272,3.145,1273,3.145,1274,2.587,1275,4.855,1276,3.498,1277,2.809,1278,2.809]],["title/classes/CreatePublishedDataDto.html",[63,0.168,1279,3.505]],["body/classes/CreatePublishedDataDto.html",[3,0.037,4,0.037,5,0.037,20,0.192,27,0.848,33,0.006,36,0.891,40,0.551,41,1.173,53,0.074,62,0.046,63,0.189,70,2.868,91,0.003,92,0.003,134,0.676,136,2.993,146,1.988,231,5.737,284,1.675,334,2.861,360,0.793,361,1.971,366,4.116,423,2.251,641,4.48,656,2.578,896,5.083,1002,4.718,1018,4.392,1019,1.517,1028,2.799,1058,3.977,1135,3.262,1140,6.553,1143,3.946,1223,4.841,1231,6.285,1279,3.946,1280,9.682,1281,3.262,1282,5.317,1283,5.773,1284,4.977,1285,5.773,1286,3.831,1287,5.773,1288,4.977,1289,5.773,1290,5.317,1291,5.317,1292,5.317,1293,5.773,1294,4.286,1295,5.773,1296,5.773,1297,3.653,1298,3.653,1299,3.653,1300,7.152,1301,5.421,1302,3.653,1303,3.653,1304,3.653,1305,3.653,1306,3.653,1307,3.653,1308,3.653,1309,3.653,1310,3.653,1311,3.653,1312,3.653,1313,3.653,1314,3.653,1315,3.653,1316,3.653,1317,3.653,1318,3.653,1319,3.653]],["title/classes/CreateRelationshipDto.html",[63,0.168,1320,4.3]],["body/classes/CreateRelationshipDto.html",[3,0.066,4,0.066,5,0.066,12,2.392,20,0.338,27,0.829,33,0.006,36,0.737,40,0.518,53,0.162,62,0.082,63,0.279,70,2.438,91,0.005,92,0.005,134,1.191,146,1.645,152,1.266,284,1.898,323,3.048,360,1.167,374,2.693,378,2.632,380,3.529,460,2.644,486,3.392,1002,4.213,1019,2.67,1046,3.782,1065,5.081,1320,7.125,1321,7.747,1322,6.43,1323,8.328,1324,6.603,1325,6.43,1326,6.43,1327,6.563,1328,6.43,1329,6.43]],["title/classes/CreateRoleDto.html",[63,0.168,1330,3.707]],["body/classes/CreateRoleDto.html",[3,0.075,4,0.075,5,0.075,20,0.383,27,0.734,33,0.006,36,0.674,39,1.385,40,0.417,53,0.149,62,0.093,63,0.255,70,2.576,91,0.005,92,0.005,134,1.352,146,1.505,152,1.437,360,1.26,460,2.794,772,5.105,1330,6.633,1331,6.519,1332,6.519]],["title/classes/CreateSampleDto.html",[63,0.168,1333,3.707]],["body/classes/CreateSampleDto.html",[3,0.045,4,0.045,5,0.045,7,2.263,12,2.576,16,1.736,17,1.843,18,1.782,20,0.233,27,0.828,30,1.646,33,0.006,36,0.829,39,0.671,40,0.543,41,1.146,51,3.266,53,0.147,62,0.057,63,0.218,70,2.773,79,2.305,91,0.004,92,0.004,119,1.871,126,2.156,134,0.822,146,1.85,152,0.874,284,1.639,285,2.734,295,3.974,346,2.394,360,0.913,365,4.786,367,2.889,374,3.029,378,2.76,382,3.003,386,5.93,397,2.702,400,2.182,409,2.268,437,3.189,460,2.609,728,3.899,756,4.111,883,2.156,965,4.14,986,2.723,1001,5.25,1002,3.803,1010,2.827,1011,2.943,1012,2.827,1013,2.827,1014,2.943,1015,2.827,1016,2.943,1017,3.076,1018,4.056,1019,1.843,1020,3.076,1045,3.189,1046,2.958,1049,2.827,1119,4.805,1197,6.007,1230,5.573,1260,4.325,1333,4.805,1334,8.558,1335,3.964,1336,5.558,1337,6.241,1338,4.439,1339,4.805,1340,4.805,1341,4.439,1342,4.439,1343,4.439,1344,4.543,1345,4.543,1346,4.439,1347,4.439,1348,3.974,1349,4.543,1350,5.134,1351,4.439,1352,4.439,1353,2.723]],["title/classes/CreateTechniqueDto.html",[63,0.168,1354,4.3]],["body/classes/CreateTechniqueDto.html",[3,0.066,4,0.066,5,0.066,12,2.394,20,0.338,27,0.83,33,0.006,36,0.738,39,1.41,40,0.518,53,0.163,62,0.082,63,0.279,70,2.672,91,0.005,92,0.005,134,1.193,146,1.647,152,1.269,284,1.9,360,1.169,374,2.696,378,2.634,419,4.442,460,2.647,464,3.583,486,3.395,1002,4.216,1019,2.675,1046,3.786,1065,5.087,1321,7.753,1354,7.134,1355,6.443,1356,6.443,1357,6.443,1358,7.753,1359,6.443,1360,6.443]],["title/classes/CreateUserDto.html",[63,0.168,774,3.336]],["body/classes/CreateUserDto.html",[3,0.059,4,0.059,5,0.059,20,0.303,27,0.827,33,0.006,36,0.854,40,0.528,41,1.141,53,0.118,62,0.074,63,0.202,70,2.825,91,0.004,92,0.004,134,1.07,146,1.906,152,1.137,284,1.826,285,2.722,315,3.227,317,4.457,342,3.106,360,1.091,378,2.683,460,2.868,756,3.914,772,5.575,774,5.166,790,4.891,877,4.457,1025,7.606,1361,5.776,1362,7.371,1363,5.776,1364,5.776,1365,5.776,1366,5.776,1367,5.776,1368,5.776]],["title/classes/CreateUserIdentityDto.html",[63,0.168,771,3.192]],["body/classes/CreateUserIdentityDto.html",[3,0.06,4,0.06,5,0.06,20,0.31,27,0.815,30,1.991,33,0.006,36,0.859,40,0.531,41,1.145,53,0.154,62,0.075,63,0.206,70,2.83,74,3.77,91,0.004,92,0.004,134,1.091,146,1.916,152,1.16,242,2.378,360,1.105,460,3.021,581,5.112,771,5.006,772,5.6,779,5.306,781,5.112,783,4.289,790,4.938,820,5.774,821,5.524,1369,5.262,1370,5.892,1371,5.892,1372,5.892,1373,5.892,1374,5.892,1375,5.892,1376,3.907]],["title/classes/CreateUserJWT.html",[63,0.168,1377,3.707]],["body/classes/CreateUserJWT.html",[3,0.074,4,0.074,5,0.074,20,0.382,27,0.732,33,0.006,36,0.671,40,0.415,53,0.148,62,0.093,63,0.254,70,2.571,91,0.005,92,0.005,134,1.346,146,1.498,152,1.431,242,2.162,360,1.257,460,2.789,702,6.065,772,5.091,1023,6.49,1377,6.616,1378,7.267]],["title/classes/CreateUserRoleDto.html",[63,0.168,1379,3.707]],["body/classes/CreateUserRoleDto.html",[3,0.072,4,0.072,5,0.072,20,0.367,27,0.795,33,0.006,36,0.775,40,0.479,53,0.142,62,0.089,63,0.244,70,2.724,74,4.071,91,0.005,92,0.005,134,1.293,146,1.73,152,1.375,242,2.264,360,1.228,460,2.91,772,5.331,1331,6.238,1332,6.238,1379,6.461,1380,6.926,1381,6.985]],["title/classes/CreateUserSettingsDto.html",[63,0.168,1382,3.336]],["body/classes/CreateUserSettingsDto.html",[3,0.062,4,0.062,5,0.062,20,0.318,27,0.756,30,2.025,33,0.006,36,0.819,40,0.543,41,1.062,53,0.123,62,0.077,63,0.211,70,2.782,74,3.816,91,0.005,92,0.005,134,1.12,146,1.829,152,1.19,242,2.304,284,1.607,285,2.534,360,1.123,374,2.847,378,2.716,382,3.402,460,2.853,772,5.426,1028,3.364,1382,5.319,1383,5.399,1384,6.937,1385,7.531,1386,7.531,1387,6.046,1388,7.297,1389,6.046,1390,6.046,1391,6.046]],["title/injectables/CreateUserSettingsInterceptor.html",[0,0.716,1392,3.96]],["body/injectables/CreateUserSettingsInterceptor.html",[0,1.107,2,1.701,3,0.059,4,0.059,5,0.059,20,0.303,21,1.735,22,2.281,25,1.674,33,0.006,36,0.688,38,1.762,39,1.125,40,0.425,41,0.891,47,1.364,48,2.161,53,0.178,55,2.947,56,1.051,61,3.027,62,0.073,63,0.201,73,1.43,74,3.944,77,2.016,81,3.417,84,1.852,91,0.004,92,0.004,101,3.027,242,2.367,310,2.733,382,2.211,483,3.496,517,2.609,569,4.198,678,4.852,742,3.538,903,4.742,1382,6.04,1384,4.743,1392,6.784,1393,8.247,1394,5.766,1395,4.73,1396,5.766,1397,5.766,1398,3.417,1399,4.576,1400,5.165,1401,5.766,1402,3.805,1403,4.413,1404,3.417,1405,5.766,1406,4.44,1407,4.743,1408,4.743,1409,5.766,1410,5.766,1411,5.766,1412,5.766,1413,5.766,1414,5.766,1415,4.44,1416,5.766]],["title/classes/CredentialsDto.html",[63,0.168,607,3.707]],["body/classes/CredentialsDto.html",[3,0.069,4,0.069,5,0.069,12,2.437,20,0.356,27,0.787,33,0.006,36,0.761,40,0.471,53,0.138,62,0.086,63,0.237,70,2.705,91,0.005,92,0.005,134,1.256,146,1.699,152,1.335,242,2.325,284,1.934,315,3.702,317,5.112,360,1.206,378,2.392,460,2.707,607,6.346,1025,6.78,1417,6.78,1418,6.78,1419,6.78]],["title/classes/DataFile.html",[63,0.168,1061,3.336]],["body/classes/DataFile.html",[3,0.071,4,0.042,5,0.092,7,2.147,10,3.926,12,2.495,20,0.217,27,0.851,33,0.006,36,0.795,39,1.144,40,0.561,53,0.121,62,0.088,63,0.144,65,3.197,73,0.653,91,0.003,92,0.003,134,0.763,146,1.774,152,0.812,212,0.99,242,1.49,258,4.461,284,1.948,285,2.736,360,0.866,364,2.798,374,2.904,378,2.89,380,2.409,390,4.559,423,3.468,424,3.199,434,2.807,457,3.376,458,1.866,459,1.644,460,2.684,461,1.677,1028,2.92,1030,3.771,1043,3.55,1055,4.104,1057,4.311,1061,4.802,1070,3.001,1077,4.647,1162,4.104,1163,4.104,1164,4.104,1165,4.104,1166,4.104,1167,4.104,1168,3.633,1169,4.311,1170,3.926,1171,4.311,1172,4.311,1173,4.104,1174,3.633,1175,4.311,1185,2.733,1420,3.681,1421,4.106,1422,4.106,1423,4.106,1424,4.106,1425,4.871,1426,5.288,1427,4.871,1428,5.288,1429,4.122,1430,4.122,1431,6.764,1432,5.921,1433,4.122,1434,4.871,1435,4.559,1436,4.122,1437,4.122,1438,5.288,1439,4.871,1440,4.122,1441,4.122,1442,5.288,1443,4.122,1444,4.122,1445,4.559,1446,4.559,1447,3.681,1448,4.122,1449,4.122,1450,3.681,1451,3.174,1452,3.681,1453,5.288,1454,3.681,1455,3.391,1456,4.122]],["title/classes/DataFileDto.html",[63,0.168,1086,3.707]],["body/classes/DataFileDto.html",[3,0.073,4,0.045,5,0.093,7,2.233,10,4.083,12,2.518,20,0.229,27,0.836,33,0.006,36,0.808,39,1.173,40,0.545,53,0.125,62,0.055,63,0.215,65,3.325,70,2.767,91,0.004,92,0.004,134,0.806,146,1.802,152,0.857,242,1.55,258,4.556,284,1.78,285,2.551,360,0.901,364,2.868,374,2.951,378,2.77,380,2.505,390,4.741,423,3.224,424,3.267,434,2.919,460,2.723,1002,4.13,1018,3.883,1019,1.808,1028,2.715,1030,3.922,1043,3.626,1055,4.267,1057,4.483,1070,3.17,1077,4.764,1086,4.741,1143,4.483,1162,4.267,1163,4.267,1164,4.267,1165,4.267,1166,4.267,1167,4.267,1168,3.778,1169,4.483,1170,4.083,1171,4.483,1172,4.483,1173,4.267,1174,3.778,1175,4.483,1176,3.582,1185,2.888,1231,5.065,1421,4.233,1422,4.233,1423,4.233,1424,4.233,1425,5.065,1426,5.499,1427,5.065,1428,5.499,1431,6.935,1434,5.065,1435,4.741,1438,5.499,1439,5.065,1442,5.499,1445,4.741,1446,4.741,1451,3.353,1452,3.889,1453,5.499,1454,3.889,1457,4.355,1458,4.355,1459,4.355,1460,6.158,1461,4.355,1462,4.355,1463,4.355,1464,4.355,1465,4.355,1466,4.355,1467,4.355,1468,4.355,1469,4.355]],["title/classes/Datablock.html",[63,0.168,879,2.6]],["body/classes/Datablock.html",[3,0.03,4,0.03,5,0.066,7,1.669,12,2.47,14,3.109,16,2.716,17,2.658,18,1.315,20,0.336,27,0.847,30,1.689,32,1.224,33,0.006,36,0.829,40,0.556,41,0.766,51,3.48,53,0.141,62,0.072,63,0.103,65,2.486,73,0.467,79,1.7,91,0.003,92,0.003,119,1.92,134,0.546,146,1.85,152,0.58,212,0.708,242,1.159,284,2.06,285,2.102,307,1.548,308,3.249,323,2.182,346,1.766,359,4.517,360,0.829,361,1.727,363,2.821,364,1.7,367,2.132,368,2.685,369,2.486,370,2.751,371,2.417,372,1.639,374,3.029,378,2.842,380,2.605,382,2.664,383,3.787,397,1.276,398,2.641,399,2.641,400,2.924,401,2.293,402,2.293,403,2.728,404,3.357,405,2.932,406,1.809,407,1.639,408,1.877,409,2.353,410,1.877,411,1.955,412,1.877,413,1.877,414,1.955,415,1.747,416,1.877,417,1.809,418,1.877,419,1.639,420,1.809,421,1.877,422,1.955,423,3.304,424,1.836,425,2.037,426,3.56,427,3.56,428,3.672,429,2.728,430,3.672,431,1.809,432,1.548,433,1.639,434,1.397,435,0.666,436,2.293,437,1.506,438,1.305,439,1.747,440,1.592,441,2.486,442,1.691,443,0.978,444,1.224,445,1.639,446,1.548,447,1.691,448,1.747,449,1.747,450,2.728,451,2.728,452,1.809,453,2.353,454,2.353,455,1.809,456,1.809,457,3.136,458,2.018,459,1.175,460,2.493,461,1.199,462,1.955,463,1.747,464,3.15,465,1.691,467,1.432,468,1.506,469,1.506,486,1.8,879,4.675,927,2.146,1028,3.027,1039,4.66,1040,4.362,1041,3.476,1042,4.362,1043,3.403,1044,5.056,1045,3.272,1046,2.182,1047,3.787,1048,3.476,1049,2.932,1050,5.267,1051,3.352,1055,3.191,1058,2.56,1061,3.926,1069,4.661,1070,4.661,1071,3.672,1076,3.545,1077,2.825,1078,4.112,1088,2.633,1089,2.633,1090,2.633,1091,2.146,1190,2.56,1191,3.053,1203,2.146,1204,2.425,1248,3.545,1455,3.787,1470,2.633,1471,2.948,1472,2.948,1473,2.948,1474,4.112,1475,4.112,1476,4.112,1477,4.112,1478,2.633,1479,2.948,1480,4.604,1481,2.633,1482,2.948,1483,2.633,1484,2.948,1485,2.948,1486,2.948,1487,2.948,1488,2.948,1489,2.633,1490,2.948,1491,2.425,1492,2.633,1493,2.633,1494,2.948]],["title/modules/DatablocksModule.html",[165,1.57,196,3.336]],["body/modules/DatablocksModule.html",[3,0.068,4,0.068,5,0.068,33,0.006,39,1.005,53,0.187,56,1.214,62,0.085,63,0.233,91,0.005,92,0.005,96,3.814,165,2.872,167,2.945,168,2.945,169,3.081,170,3.081,171,3.011,172,4.078,176,3.773,177,2.945,178,2.763,181,3.314,196,6.726,211,3.593,212,1.599,458,2.098,879,3.593,1493,7.277,1495,5.943,1496,5.943,1497,5.943,1498,7.719,1499,6.655,1500,6.655,1501,5.943,1502,4.612,1503,6.655]],["title/injectables/DatablocksService.html",[0,0.716,1498,3.707]],["body/injectables/DatablocksService.html",[0,0.981,2,1.418,3,0.049,4,0.049,5,0.049,20,0.253,21,1.537,22,2.693,25,1.915,33,0.006,36,0.81,38,2.076,39,1.326,40,0.501,41,1.05,47,2.009,48,2.727,53,0.191,56,0.877,62,0.061,63,0.168,64,2.349,73,1.194,84,1.805,91,0.004,92,0.004,212,1.155,222,2.596,284,1.006,294,2.266,303,2.524,315,3.169,435,1.086,444,3.365,490,1.946,491,3.204,492,3.57,494,3.188,496,3.51,502,3.463,503,3.428,505,3.977,506,2.524,515,2.335,516,2.524,517,2.175,519,2.335,520,2.394,521,2.673,522,2.524,523,3.062,524,3.062,525,2.335,528,3.062,530,4.201,537,2.757,586,3.463,879,2.596,951,3.408,1036,6.183,1095,5.427,1491,3.955,1498,5.079,1501,4.293,1504,4.807,1505,4.807,1506,4.807,1507,6.597,1508,6.597,1509,4.807,1510,4.807,1511,4.807,1512,4.201,1513,4.807,1514,3.062,1515,7.392,1516,4.807,1517,4.807,1518,4.374,1519,4.807,1520,6.597,1521,4.807,1522,4.807,1523,4.807,1524,4.807,1525,4.807,1526,4.807]],["title/classes/DatasetListDto.html",[63,0.168,1146,3.96]],["body/classes/DatasetListDto.html",[3,0.071,4,0.071,5,0.071,20,0.362,27,0.791,33,0.006,36,0.769,40,0.476,53,0.14,62,0.088,63,0.291,70,2.716,91,0.005,92,0.005,134,1.277,146,1.716,284,1.743,360,1.218,486,3.498,1002,4.344,1019,2.863,1058,3.835,1071,5.131,1082,4.776,1084,6.85,1146,6.85,1527,8.946,1528,6.896,1529,6.896,1530,6.896,1531,6.896,1532,6.896]],["title/modules/DatasetsModule.html",[165,1.57,197,2.761]],["body/modules/DatasetsModule.html",[3,0.053,4,0.053,5,0.053,22,1.427,27,0.44,33,0.006,39,0.78,43,2.709,53,0.199,56,0.941,73,1.238,77,1.804,91,0.004,92,0.004,96,2.997,115,2.142,140,2.142,165,2.547,167,2.283,168,2.283,169,2.389,170,2.389,171,2.335,172,3.204,176,3.204,177,2.283,178,2.142,181,3.889,192,5.497,196,6.209,197,5.66,198,6.209,201,4.796,202,5.941,203,4.589,211,2.786,212,1.24,216,4.246,237,3.756,238,4.608,274,3.058,346,1.979,361,2.11,438,2.283,458,1.626,480,3.576,482,3.576,483,2.187,484,3.166,485,4.608,486,2.706,487,4.796,665,4.03,685,2.283,686,2.234,881,3.286,891,4.246,1104,3.421,1533,4.608,1534,4.608,1535,5.16,1536,4.608,1537,5.842,1538,5.16,1539,6.921,1540,5.329,1541,6.921,1542,4.244,1543,5.16,1544,4.244,1545,3.973,1546,4.608,1547,5.16,1548,5.16,1549,4.589,1550,4.608,1551,4.608,1552,5.16,1553,5.16,1554,4.608,1555,5.16,1556,5.16,1557,6.921,1558,5.16,1559,4.244,1560,5.16]],["title/injectables/DatasetsService.html",[0,0.716,1537,2.954]],["body/injectables/DatasetsService.html",[0,0.472,2,0.551,3,0.019,4,0.019,5,0.019,20,0.098,21,0.739,22,2.598,25,0.921,27,0.612,30,1.286,33,0.006,36,0.73,38,1.869,39,1.194,40,0.451,41,0.945,47,1.834,48,2.52,53,0.17,55,0.955,56,0.341,62,0.024,63,0.065,64,1.944,69,1.345,73,1.504,77,2.956,84,1.733,91,0.002,92,0.002,111,1.108,112,2.686,115,0.776,119,0.952,127,2.199,161,0.846,177,0.827,212,0.449,222,1.009,237,1.361,242,0.799,245,1.374,284,0.866,294,2.838,303,0.981,315,2.321,323,0.886,324,1.295,328,1.291,361,0.968,364,2.802,368,0.886,369,1.009,371,0.981,380,3.56,382,1.586,397,1.374,399,1.072,400,2.076,425,0.827,432,1.666,435,0.717,441,1.714,442,1.072,443,1.811,444,2.024,453,1.622,486,2.81,490,1.438,491,2.009,492,1.961,494,1.239,496,3.03,502,0.981,503,3.137,505,3.18,506,0.981,514,2.021,515,0.908,516,0.981,517,0.846,519,2.009,520,0.931,521,1.039,522,0.981,523,1.19,524,2.021,525,0.908,526,1.295,528,1.19,530,3.105,537,3.404,562,2.233,622,1.295,651,3.323,655,2.444,656,0.745,745,2.444,816,2.06,855,3.549,881,4.031,914,1.881,924,2.31,951,3.348,970,1.439,1104,1.239,1144,1.538,1157,1.19,1170,1.239,1348,1.19,1353,1.947,1518,2.742,1537,1.947,1542,1.538,1544,1.538,1561,1.869,1562,3.35,1563,3.174,1564,4.136,1565,4.875,1566,2.866,1567,2.742,1568,3.174,1569,4.877,1570,4.136,1571,4.136,1572,4.136,1573,4.607,1574,4.386,1575,1.869,1576,1.538,1577,1.869,1578,3.174,1579,4.492,1580,1.869,1581,3.327,1582,1.869,1583,3.174,1584,1.869,1585,1.869,1586,6.321,1587,4.354,1588,4.354,1589,1.869,1590,1.869,1591,3.549,1592,4.01,1593,4.01,1594,5.461,1595,1.869,1596,1.869,1597,1.295,1598,2.56,1599,1.869,1600,2.632,1601,1.361,1602,4.875,1603,1.869,1604,3.174,1605,1.869,1606,1.669,1607,1.869,1608,1.869,1609,1.869,1610,1.869,1611,1.869,1612,2.31,1613,2.31,1614,0.981,1615,2.444,1616,2.31,1617,2.834,1618,1.239,1619,1.869,1620,1.669,1621,1.439,1622,3.232,1623,1.239,1624,1.239,1625,1.361,1626,1.239,1627,1.538,1628,1.869,1629,1.869,1630,6.66,1631,1.869,1632,1.869,1633,1.869,1634,2.742,1635,2.634,1636,3.402,1637,2.634,1638,0.76,1639,0.776,1640,1.147,1641,2.104,1642,1.869,1643,1.295,1644,1.19,1645,1.19,1646,1.19,1647,1.869,1648,1.669,1649,2.31,1650,1.669,1651,2.31,1652,1.666,1653,1.439,1654,1.439,1655,1.869,1656,1.869,1657,1.869,1658,1.669,1659,1.869,1660,1.538,1661,1.439,1662,1.869,1663,4.875,1664,3.174,1665,1.669,1666,1.869,1667,1.869,1668,2.199,1669,1.869,1670,1.869,1671,1.869,1672,1.869,1673,4.01,1674,1.869,1675,4.136,1676,1.869,1677,1.869,1678,3.174,1679,2.104,1680,1.239,1681,1.361,1682,1.869,1683,1.869,1684,1.869,1685,3.174,1686,1.869,1687,1.869,1688,1.538,1689,3.174,1690,1.869,1691,1.538,1692,1.669,1693,1.669,1694,1.869,1695,3.174,1696,1.869,1697,1.869,1698,1.869,1699,1.869,1700,1.869,1701,1.869,1702,5.652,1703,1.869,1704,1.439,1705,1.869,1706,1.669,1707,1.669,1708,4.354,1709,2.834,1710,1.669,1711,4.354,1712,1.869,1713,2.834,1714,1.669,1715,1.669,1716,2.31,1717,1.669,1718,3.694,1719,1.669,1720,1.669,1721,1.039,1722,1.669,1723,1.669,1724,1.669,1725,1.669,1726,1.669,1727,1.869,1728,1.869,1729,1.869,1730,1.869,1731,1.869,1732,1.869,1733,1.869,1734,5.461,1735,3.402,1736,1.538,1737,2.31,1738,1.869,1739,1.669,1740,1.669,1741,1.869,1742,1.869,1743,1.869,1744,3.694,1745,4.136,1746,1.869,1747,2.199,1748,1.669,1749,1.869,1750,3.174,1751,3.174,1752,1.869,1753,1.869,1754,1.669,1755,1.869,1756,1.869,1757,2.31,1758,1.869,1759,3.402,1760,1.869,1761,3.174,1762,4.354,1763,4.875,1764,1.669,1765,1.869,1766,1.669,1767,1.869,1768,1.869,1769,3.174,1770,1.869,1771,1.869,1772,1.869,1773,1.869,1774,1.869,1775,1.869,1776,3.185,1777,1.538,1778,1.869,1779,1.669,1780,1.869,1781,4.136,1782,1.869,1783,1.869,1784,1.869,1785,2.834,1786,1.669,1787,1.869,1788,3.174,1789,1.669,1790,1.869,1791,1.669,1792,1.869,1793,3.174,1794,1.869]],["title/injectables/FilterPipe.html",[0,0.716,1795,3.96]],["body/injectables/FilterPipe.html",[0,1.112,2,1.713,3,0.059,4,0.059,5,0.059,20,0.305,21,1.743,27,0.744,33,0.006,36,0.536,38,1.374,39,0.877,40,0.499,41,0.695,47,1.374,53,0.118,56,1.059,62,0.074,63,0.203,73,0.92,84,1.234,91,0.004,92,0.004,310,2.753,443,2.482,483,3.705,505,4.267,1353,5.077,1395,3.331,1795,6.154,1796,5.807,1797,8.275,1798,5.807,1799,4.345,1800,8.74,1801,5.807,1802,8.275,1803,7.481,1804,4.472,1805,5.186,1806,5.807,1807,6.154,1808,8.275,1809,5.446,1810,7.481,1811,7.481,1812,5.807,1813,5.807,1814,8.74,1815,6.056,1816,6.056,1817,6.362,1818,6.056,1819,6.729,1820,5.807,1821,5.807,1822,5.807,1823,5.807,1824,5.807]],["title/injectables/FormatPhysicalQuantitiesInterceptor.html",[0,0.716,1825,3.96]],["body/injectables/FormatPhysicalQuantitiesInterceptor.html",[0,1.149,2,1.804,3,0.063,4,0.063,5,0.063,20,0.321,21,1.801,25,1.775,33,0.006,36,0.783,38,1.829,39,1.168,40,0.349,41,0.925,47,1.447,48,2.244,53,0.173,56,1.115,61,3.21,62,0.078,63,0.214,73,1.225,84,1.3,91,0.005,92,0.005,310,2.898,328,2.487,360,1.131,483,3.594,562,3.302,728,3.045,1395,4.862,1398,3.623,1399,4.677,1400,5.279,1402,3.951,1403,4.581,1404,5.024,1735,5.03,1776,5.952,1825,6.359,1826,7.955,1827,7.955,1828,6.114,1829,9.188,1830,7.731,1831,7.731,1832,6.114,1833,7.731,1834,5.03,1835,4.434,1836,6.114,1837,3.507,1838,5.357,1839,6.114,1840,7.731,1841,4.054]],["title/injectables/FullQueryInterceptor.html",[0,0.716,1842,4.3]],["body/injectables/FullQueryInterceptor.html",[0,1.079,2,1.634,3,0.057,4,0.057,5,0.057,20,0.291,21,1.69,27,0.472,33,0.006,36,0.512,38,1.311,39,0.837,40,0.316,41,0.663,47,1.311,48,2.106,53,0.186,56,1.01,61,2.908,62,0.071,63,0.194,73,1.449,84,1.542,91,0.004,92,0.004,310,2.626,400,1.937,443,2.407,483,3.429,525,2.69,562,2.991,881,4.62,951,3.283,970,6.86,1028,1.937,1144,4.557,1395,4.64,1398,3.283,1399,4.506,1400,5.086,1402,3.707,1403,4.299,1404,4.794,1408,4.557,1542,4.557,1625,5.281,1626,3.673,1777,4.557,1837,3.177,1842,6.479,1843,5.539,1844,5.539,1845,4.947,1846,4.947,1847,5.539,1848,5.539,1849,5.539,1850,5.539,1851,5.539,1852,3.177,1853,5.539,1854,5.539,1855,3.399,1856,5.086,1857,8.583,1858,7.254,1859,7.254,1860,7.254,1861,7.254,1862,5.539,1863,5.539]],["title/classes/HistoryClass.html",[63,0.168,1864,4.3]],["body/classes/HistoryClass.html",[3,0.05,4,0.05,5,0.05,12,2.33,20,0.258,27,0.818,33,0.006,36,0.704,40,0.544,53,0.167,62,0.097,63,0.172,73,0.779,91,0.004,92,0.004,119,2.567,134,0.911,142,3.517,146,1.571,152,0.968,212,1.181,242,1.686,284,2.034,285,1.913,294,1.689,302,4.045,315,2.619,323,2.331,360,0.98,361,2.323,364,1.816,368,2.331,370,3.974,371,4.001,374,2.572,378,2.786,382,3.619,423,3.82,424,2.671,427,2.734,434,3.175,435,1.111,436,2.448,443,1.631,453,2.513,457,3.283,458,2.112,459,1.961,460,2.494,461,2.725,463,2.914,464,4.761,465,2.82,486,2.619,651,3.517,951,3.448,1045,2.513,1046,3.175,1065,4.266,1274,5.511,1623,4.442,1777,4.045,1779,4.391,1864,6.805,1865,4.391,1866,5.983,1867,5.983,1868,4.917,1869,4.917,1870,4.917,1871,4.917,1872,6.805,1873,4.917,1874,4.917,1875,4.391,1876,4.917,1877,3.786,1878,4.391,1879,4.391,1880,4.391,1881,4.391,1882,4.917,1883,4.917,1884,4.391,1885,6.805,1886,4.917,1887,4.917]],["title/injectables/HistoryInterceptor.html",[0,0.716,1888,3.96]],["body/injectables/HistoryInterceptor.html",[0,1.189,2,1.904,3,0.066,4,0.066,5,0.066,20,0.339,21,1.863,22,2.403,25,2.321,33,0.006,36,0.739,38,1.892,39,1.208,40,0.457,41,0.957,47,1.527,48,2.321,53,0.177,56,1.177,61,3.389,62,0.082,63,0.226,70,1.814,73,1.023,77,2.258,84,1.372,91,0.005,92,0.005,303,3.389,310,3.06,483,3.684,562,3.486,1395,4.984,1398,3.826,1399,4.769,1400,5.382,1402,4.087,1403,4.739,1404,3.826,1537,5.836,1837,3.703,1841,4.28,1888,6.579,1889,6.456,1890,6.456,1891,6.456,1892,6.456,1893,4.7,1894,6.456,1895,6.456]],["title/interfaces/IAxiosError.html",[1896,1.311,1897,2.954]],["body/interfaces/IAxiosError.html",[3,0.057,4,0.057,5,0.057,20,0.29,27,0.855,29,2.986,30,2.491,32,3.561,33,0.006,40,0.509,41,1.027,53,0.148,62,0.12,69,2.344,91,0.004,92,0.004,119,1.658,136,2.56,185,4.92,245,3.714,247,3.277,258,3.075,328,2.25,334,2.447,342,2.081,343,2.826,344,2.826,360,1.06,400,1.934,402,2.754,424,2.205,435,1.249,443,2.404,496,3.29,503,2.58,656,2.205,1028,3.256,1043,2.447,1276,3.277,1421,3.277,1422,3.277,1423,3.277,1424,3.277,1581,2.56,1598,2.903,1638,2.25,1639,2.296,1652,2.903,1799,3.804,1835,3.172,1852,3.172,1855,3.393,1856,3.277,1896,2.571,1897,4.446,1898,2.25,1899,3.522,1900,4.446,1901,3.522,1902,3.172,1903,4.03,1904,3.522,1905,4.959,1906,3.522,1907,4.446,1908,2.754,1909,2.986,1910,3.522,1911,2.826,1912,3.172,1913,4.294,1914,4.156]],["title/interfaces/ICount.html",[1896,1.311,1915,3.192]],["body/interfaces/ICount.html",[3,0.068,4,0.068,5,0.068,12,1.744,20,0.347,27,0.84,33,0.006,40,0.378,53,0.165,62,0.117,91,0.005,92,0.005,136,3.062,334,2.927,360,1.188,366,4.212,435,1.494,443,2.194,503,2.89,656,2.637,896,3.472,898,4.212,1028,3.287,1286,3.919,1294,4.385,1562,5.62,1638,2.691,1639,2.746,1896,2.493,1898,2.691,1903,3.678,1908,3.293,1909,3.571,1911,3.38,1915,5.383,1916,5.093,1917,5.093,1918,4.212,1919,4.385,1920,4.385,1921,4.583,1922,4.583]],["title/interfaces/IDatablockFields.html",[1896,1.311,1923,4.3]],["body/interfaces/IDatablockFields.html",[3,0.067,4,0.067,5,0.067,20,0.345,27,0.845,33,0.006,40,0.563,41,1.17,53,0.134,62,0.084,91,0.005,92,0.005,360,1.183,363,4.552,1039,7.519,1041,5.608,1042,7.038,1043,4.045,1614,3.451,1799,4.799,1896,1.789,1898,2.674,1912,5.242,1913,4.793,1914,4.639,1923,7.223,1924,6.574]],["title/interfaces/IDatafileFilter.html",[1896,1.311,1912,2.761]],["body/interfaces/IDatafileFilter.html",[3,0.053,4,0.053,5,0.053,20,0.273,27,0.865,29,2.809,30,2.208,32,2.16,33,0.006,40,0.549,41,1.172,53,0.142,62,0.119,69,2.205,91,0.004,92,0.004,119,1.56,136,2.408,185,2.983,245,2.252,247,3.082,258,4.656,328,2.116,334,2.302,342,1.957,343,2.658,344,2.658,360,1.018,400,1.819,402,2.59,424,3.339,435,1.175,443,2.308,496,1.995,503,2.477,656,2.074,1028,3.207,1043,3.705,1276,3.082,1421,4.961,1422,4.961,1423,4.961,1424,4.961,1581,2.408,1598,2.731,1638,2.116,1639,2.16,1652,2.731,1799,4.396,1835,2.983,1852,2.983,1855,3.191,1856,3.082,1896,2.537,1897,3.191,1898,2.116,1899,3.312,1900,4.269,1901,3.312,1902,2.983,1903,3.869,1904,3.312,1905,4.811,1906,3.312,1907,4.269,1908,2.59,1909,2.809,1910,3.312,1911,2.658,1912,3.991,1913,4.123,1914,3.991]],["title/interfaces/IDatasetFields.html",[1625,3.505,1896,1.311]],["body/interfaces/IDatasetFields.html",[3,0.057,4,0.057,5,0.057,20,0.29,27,0.87,30,2.132,33,0.006,36,0.511,40,0.573,41,1.215,53,0.113,62,0.07,91,0.004,92,0.004,328,2.25,346,3.29,360,1.06,361,2.615,756,4.243,965,4.92,966,7.056,969,7.056,1153,3.666,1614,2.903,1625,5.275,1704,5.58,1716,6.244,1799,3.804,1852,4.92,1896,1.505,1898,2.25,1902,4.92,1925,6.471,1926,3.832,1927,8.577,1928,6.605,1929,8.577,1930,4.066,1931,6.605,1932,5.53,1933,5.53,1934,4.258]],["title/interfaces/IDatasetList.html",[1130,3.96,1896,1.311]],["body/interfaces/IDatasetList.html",[3,0.075,4,0.075,5,0.075,20,0.387,27,0.836,33,0.006,40,0.495,62,0.094,91,0.005,92,0.005,360,1.267,486,3.713,1071,5.446,1130,7.124,1896,2.005,1898,2.997,1935,7.366,1936,7.366]],["title/interfaces/IDateRange.html",[1896,1.311,1937,3.707]],["body/interfaces/IDateRange.html",[3,0.071,4,0.071,5,0.071,20,0.364,27,0.851,33,0.006,40,0.477,62,0.088,69,2.936,91,0.005,92,0.005,301,5.041,334,3.065,343,3.539,344,3.539,360,1.221,1153,6.169,1233,5.041,1235,5.041,1896,2.44,1898,2.817,1926,4.799,1930,3.283,1931,5.332,1934,7.164,1937,7.164,1938,5.697,1939,7.332,1940,5.332,1941,5.041]],["title/interfaces/IFacets.html",[1598,2.528,1896,1.311]],["body/interfaces/IFacets.html",[3,0.058,4,0.058,5,0.058,20,0.297,27,0.86,29,3.048,30,2.281,32,2.344,33,0.006,40,0.42,41,1.035,53,0.15,62,0.121,69,2.393,91,0.004,92,0.004,119,1.693,136,2.614,185,3.238,245,2.445,247,3.345,258,3.139,328,2.297,334,2.498,342,2.124,343,2.885,344,2.885,360,1.075,400,1.974,402,2.811,424,2.251,435,1.276,443,2.974,496,2.165,503,2.615,656,2.251,1028,3.272,1043,2.498,1276,3.345,1421,3.345,1422,3.345,1423,3.345,1424,3.345,1581,2.614,1598,3.856,1638,2.297,1639,2.344,1652,4.539,1835,4.682,1852,3.238,1855,3.464,1856,3.345,1896,2.582,1897,3.464,1898,2.297,1899,3.595,1900,4.506,1901,3.595,1902,3.238,1903,4.084,1904,3.595,1905,5.009,1906,3.595,1907,4.506,1908,2.811,1909,3.048,1910,3.595,1911,2.885,1912,3.238,1913,4.353,1914,4.213]],["title/interfaces/IFilters.html",[1581,2.229,1896,1.311]],["body/interfaces/IFilters.html",[3,0.056,4,0.056,5,0.056,20,0.288,27,0.854,29,2.961,30,2.255,32,2.277,33,0.006,40,0.521,41,1.128,53,0.147,62,0.12,69,2.324,91,0.004,92,0.004,119,1.644,136,2.539,185,3.145,245,2.374,247,3.249,258,3.049,328,2.231,334,2.426,342,2.063,343,2.802,344,2.802,360,1.054,400,1.917,402,2.73,424,2.186,435,1.239,443,2.946,496,2.103,503,3.044,656,2.186,1028,3.249,1043,2.426,1276,3.249,1421,3.249,1422,3.249,1423,3.249,1424,3.249,1581,3.336,1598,2.879,1638,2.231,1639,2.277,1652,2.879,1799,3.783,1835,3.145,1852,3.145,1855,3.364,1856,3.249,1896,2.566,1897,3.364,1898,2.231,1899,3.492,1900,4.421,1901,3.492,1902,3.145,1903,4.007,1904,3.492,1905,4.938,1906,3.492,1907,5.245,1908,2.73,1909,4.616,1910,5.126,1911,4.369,1912,3.145,1913,4.27,1914,4.133]],["title/interfaces/IFormPopulateData.html",[1896,1.311,1921,3.336]],["body/interfaces/IFormPopulateData.html",[3,0.063,4,0.063,5,0.063,12,2.353,20,0.322,27,0.863,33,0.006,40,0.525,41,1.174,53,0.158,62,0.114,91,0.005,92,0.005,136,4.13,334,3.948,360,1.134,366,5.681,435,1.387,443,2.036,503,2.759,656,2.447,896,3.222,898,3.909,1028,2.97,1286,3.637,1294,5.914,1562,3.766,1638,2.497,1639,2.548,1896,2.428,1898,2.497,1903,3.413,1908,3.056,1909,3.314,1911,3.137,1915,4.069,1916,4.726,1917,4.726,1918,3.909,1919,4.069,1920,4.069,1921,5.37,1922,4.253]],["title/interfaces/ILimitsFilter.html",[1896,1.311,1907,2.954]],["body/interfaces/ILimitsFilter.html",[3,0.058,4,0.058,5,0.058,20,0.295,27,0.859,29,3.033,30,2.276,32,2.332,33,0.006,40,0.465,53,0.149,62,0.121,69,2.381,91,0.004,92,0.004,119,1.684,136,2.6,185,3.221,245,2.432,247,3.328,258,3.123,328,2.285,334,2.485,342,2.113,343,2.87,344,2.87,360,1.071,400,1.964,402,2.797,424,2.24,435,1.269,443,2.428,496,2.154,503,2.606,656,2.24,1028,3.405,1043,2.485,1276,3.328,1421,3.328,1422,3.328,1423,3.328,1424,3.328,1581,2.6,1598,2.949,1638,3.51,1639,3.583,1652,2.949,1835,3.221,1852,3.221,1855,3.446,1856,3.328,1896,2.58,1897,3.446,1898,2.285,1899,3.577,1900,4.491,1901,3.577,1902,3.221,1903,4.071,1904,3.577,1905,4.996,1906,3.577,1907,4.996,1908,4.297,1909,3.033,1910,3.577,1911,2.87,1912,3.221,1913,4.338,1914,4.198]],["title/interfaces/IOrigDatablockFields.html",[1896,1.311,1942,3.707]],["body/interfaces/IOrigDatablockFields.html",[3,0.072,4,0.072,5,0.072,20,0.367,27,0.813,33,0.006,40,0.545,41,1.117,53,0.142,62,0.089,91,0.005,92,0.005,360,1.228,363,4.647,1041,5.725,1043,4.129,1614,3.667,1799,4.406,1896,1.901,1898,2.842,1912,5.352,1913,4.139,1914,4.006,1942,6.461,1943,6.985]],["title/interfaces/IPolicyFilter.html",[1896,1.311,1944,3.707]],["body/interfaces/IPolicyFilter.html",[3,0.07,4,0.07,5,0.07,20,0.361,27,0.761,33,0.006,40,0.53,41,1.179,53,0.169,62,0.087,91,0.005,92,0.005,360,1.215,435,1.551,503,3.303,1028,3.376,1638,3.774,1639,3.852,1896,1.869,1898,2.793,1908,4.62,1926,4.758,1944,6.395,1945,6.866,1946,4.998,1947,5.287]],["title/interfaces/IPolicyHandler.html",[1896,1.311,1948,3.96]],["body/interfaces/IPolicyHandler.html",[3,0.072,4,0.072,5,0.072,20,0.369,21,1.963,33,0.006,36,0.649,38,1.663,39,1.062,40,0.515,41,0.841,47,1.663,53,0.143,62,0.089,91,0.005,92,0.005,686,3.044,756,4.736,870,5.586,908,5.317,992,5.783,1896,1.914,1898,2.86,1948,7.42,1949,7.523,1950,6.278,1951,8.424,1952,8.424,1953,7.03,1954,7.523,1955,5.783]],["title/interfaces/IProposalAcceptedMessage.html",[247,2.853,1896,1.311]],["body/interfaces/IProposalAcceptedMessage.html",[3,0.056,4,0.056,5,0.056,20,0.285,27,0.863,29,2.926,30,2.245,32,2.25,33,0.006,40,0.519,53,0.146,62,0.12,69,3.608,91,0.004,92,0.004,119,1.625,136,3.94,185,3.108,245,2.346,247,4.237,258,3.013,328,2.204,334,3.766,342,2.039,343,2.769,344,2.769,360,1.046,400,1.895,402,4.238,424,2.161,435,1.224,443,2.372,496,2.078,503,2.546,656,2.161,1028,3.327,1043,2.398,1276,5.043,1421,3.211,1422,3.211,1423,3.211,1424,3.211,1581,2.509,1598,2.845,1638,2.204,1639,2.25,1652,2.845,1835,3.108,1852,3.108,1855,3.325,1856,3.211,1896,2.56,1897,3.325,1898,2.204,1899,3.451,1900,4.387,1901,3.451,1902,3.108,1903,3.976,1904,3.451,1905,5.684,1906,5.419,1907,4.387,1908,2.698,1909,2.926,1910,3.451,1911,2.769,1912,3.108,1913,4.237,1914,4.101]],["title/interfaces/IProposalFieldObject.html",[1896,1.311,1939,3.707]],["body/interfaces/IProposalFieldObject.html",[3,0.071,4,0.071,5,0.071,20,0.364,27,0.851,33,0.006,40,0.477,62,0.088,69,2.936,91,0.005,92,0.005,301,6.773,334,3.065,343,3.539,344,3.539,360,1.221,1153,4.592,1233,5.041,1235,5.041,1896,2.44,1898,2.817,1926,4.799,1930,3.283,1931,5.332,1934,5.332,1937,6.901,1938,5.697,1939,7.449,1940,7.164,1941,5.041]],["title/interfaces/IProposalFields.html",[1896,1.311,1941,3.505]],["body/interfaces/IProposalFields.html",[3,0.063,4,0.063,5,0.063,20,0.324,27,0.836,33,0.006,40,0.552,41,1.204,62,0.078,69,3.787,91,0.005,92,0.005,301,4.485,334,3.953,343,4.565,344,4.565,360,1.136,1153,4.085,1233,6.503,1235,6.503,1896,2.316,1898,2.506,1926,4.27,1930,4.234,1931,6.878,1934,4.744,1937,7.35,1938,5.068,1939,7.674,1940,4.744,1941,5.655]],["title/interfaces/IProposalMember.html",[1896,1.311,1905,2.954]],["body/interfaces/IProposalMember.html",[3,0.058,4,0.058,5,0.058,20,0.295,27,0.865,29,3.033,30,2.276,32,2.332,33,0.006,40,0.465,53,0.149,62,0.121,69,2.381,91,0.004,92,0.004,119,1.684,136,2.6,185,3.221,245,2.432,247,3.328,258,3.123,328,2.285,334,2.485,342,3.247,343,4.41,344,4.41,360,1.071,400,1.964,402,2.797,424,2.24,435,1.269,443,2.428,496,2.154,503,2.606,656,2.24,1028,3.268,1043,2.485,1276,3.328,1421,3.328,1422,3.328,1423,3.328,1424,3.328,1581,2.6,1598,2.949,1638,2.285,1639,2.332,1652,2.949,1835,3.221,1852,3.221,1855,3.446,1856,3.328,1896,2.58,1897,3.446,1898,2.285,1899,3.577,1900,4.491,1901,3.577,1902,3.221,1903,4.071,1904,3.577,1905,5.294,1906,3.577,1907,4.491,1908,2.797,1909,3.033,1910,3.577,1911,2.87,1912,3.221,1913,4.338,1914,4.198]],["title/interfaces/IPublishedDataFilters.html",[1896,1.311,1920,3.192]],["body/interfaces/IPublishedDataFilters.html",[3,0.064,4,0.064,5,0.064,12,1.637,20,0.326,27,0.831,33,0.006,40,0.561,41,1.157,53,0.159,62,0.114,91,0.005,92,0.005,136,2.874,334,2.747,360,1.142,366,3.954,435,1.403,443,2.971,503,3.189,656,2.476,896,3.259,898,3.954,1028,2.985,1286,3.679,1294,4.116,1562,3.809,1638,2.526,1639,2.578,1799,4.946,1896,2.438,1898,2.526,1903,3.452,1908,3.091,1909,4.837,1911,4.578,1915,4.116,1916,4.78,1917,4.78,1918,3.954,1919,4.116,1920,5.175,1921,4.302,1922,4.302]],["title/interfaces/IRegister.html",[1896,1.311,1922,3.336]],["body/interfaces/IRegister.html",[3,0.068,4,0.068,5,0.068,12,1.744,20,0.347,27,0.85,33,0.006,40,0.378,53,0.165,62,0.117,91,0.005,92,0.005,136,3.062,334,2.927,360,1.188,366,4.212,435,1.494,443,2.194,503,2.89,656,2.637,896,3.472,898,4.212,1028,3.072,1286,5.428,1294,4.385,1562,4.058,1638,2.691,1639,2.746,1896,2.493,1898,2.691,1903,3.678,1908,3.293,1909,3.571,1911,3.38,1915,4.385,1916,5.093,1917,5.093,1918,4.212,1919,4.385,1920,4.385,1921,4.583,1922,5.626]],["title/interfaces/ISampleFields.html",[1896,1.311,1956,3.96]],["body/interfaces/ISampleFields.html",[3,0.072,4,0.072,5,0.072,20,0.372,27,0.828,33,0.006,40,0.517,41,1.122,53,0.144,62,0.09,91,0.005,92,0.005,360,1.237,1345,6.822,1614,3.715,1716,6.822,1896,1.926,1898,2.879,1902,5.375,1926,4.904,1930,4.442,1956,6.957,1957,7.076]],["title/interfaces/IScientificFilter.html",[1896,1.311,1902,2.761]],["body/interfaces/IScientificFilter.html",[3,0.056,4,0.056,5,0.056,20,0.288,27,0.863,29,2.956,30,2.253,32,2.273,33,0.006,40,0.488,53,0.147,62,0.12,69,2.32,91,0.004,92,0.004,119,2.412,136,2.534,185,3.139,245,2.37,247,3.244,258,3.044,328,2.227,334,2.422,342,2.06,343,2.797,344,2.797,360,1.053,400,1.914,402,2.726,424,2.183,435,1.237,443,2.388,496,2.099,503,2.563,656,2.183,1028,3.334,1043,2.422,1276,3.244,1421,3.244,1422,3.244,1423,3.244,1424,3.244,1581,2.534,1598,2.874,1638,2.227,1639,2.273,1652,2.874,1835,3.139,1852,3.139,1855,5.242,1856,5.063,1896,2.566,1897,3.358,1898,2.227,1899,3.486,1900,5.242,1901,3.486,1902,4.128,1903,4.935,1904,5.441,1905,4.934,1906,3.486,1907,4.416,1908,2.726,1909,2.956,1910,3.486,1911,2.797,1912,3.139,1913,4.265,1914,4.128]],["title/classes/InitialDataset.html",[63,0.168,1757,3.505]],["body/classes/InitialDataset.html",[3,0.069,4,0.069,5,0.069,20,0.355,27,0.786,33,0.006,36,0.625,40,0.507,53,0.168,62,0.113,63,0.236,73,1.072,91,0.005,92,0.005,134,1.253,146,1.395,212,1.626,284,1.857,360,1.204,361,2.705,372,3.762,378,2.389,435,1.529,457,3.157,458,2.595,459,2.698,461,3.349,467,3.286,468,3.458,469,3.458,1104,5.458,1757,6.72,1958,7.351,1959,6.042,1960,6.766,1961,5.566,1962,6.042,1963,6.766]],["title/modules/InitialDatasetsModule.html",[165,1.57,198,3.336]],["body/modules/InitialDatasetsModule.html",[3,0.068,4,0.068,5,0.068,33,0.006,39,0.997,53,0.186,56,1.204,62,0.084,63,0.231,91,0.005,92,0.005,96,3.8,165,2.862,167,2.921,168,2.921,169,3.056,170,3.056,171,2.987,172,4.063,176,3.754,177,2.921,178,2.74,181,3.287,198,6.714,211,3.564,212,1.586,236,5.082,237,4.805,458,2.08,1104,4.376,1502,4.574,1544,5.43,1573,7.29,1757,4.805,1962,7.241,1964,5.895,1965,5.895,1966,5.895,1967,6.6,1968,5.895,1969,5.895,1970,6.6]],["title/injectables/InitialDatasetsService.html",[0,0.716,1573,3.505]],["body/injectables/InitialDatasetsService.html",[0,1.137,2,1.774,3,0.062,4,0.062,5,0.062,20,0.316,21,1.782,22,2.584,25,2.22,27,0.717,33,0.006,36,0.777,38,1.99,39,1.271,40,0.48,41,1.007,47,1.809,48,2.57,53,0.186,56,1.096,62,0.077,63,0.21,64,2.141,73,0.953,84,1.626,91,0.005,92,0.005,212,1.444,236,4.629,237,6.445,294,2.065,364,2.221,435,1.358,444,3.676,490,2.481,516,3.157,517,2.721,1103,7.81,1104,5.87,1573,5.568,1622,3.986,1757,4.377,1961,4.946,1968,5.369,1969,5.369,1971,6.012,1972,5.568,1973,6.012,1974,6.012,1975,7.648,1976,6.012,1977,6.012,1978,6.292,1979,6.012,1980,6.012,1981,6.012,1982,6.012,1983,6.012,1984,6.012]],["title/classes/Instrument.html",[63,0.168,883,2.338]],["body/classes/Instrument.html",[3,0.046,4,0.046,5,0.046,12,2.375,20,0.236,27,0.848,30,1.662,33,0.006,36,0.766,39,1.44,40,0.551,43,3.308,53,0.16,62,0.093,63,0.157,73,0.713,84,1.339,91,0.004,92,0.004,119,2.363,134,0.833,146,1.71,152,0.886,212,1.081,284,2.048,285,2.369,295,4.013,360,0.922,361,2.217,372,2.503,374,2.659,378,2.815,382,3.454,401,3.138,435,1.017,436,2.241,457,3.297,458,1.986,459,1.795,460,2.528,461,2.564,463,2.667,464,4.044,465,2.581,467,2.185,468,2.3,469,2.3,486,3.243,728,4.28,849,4.013,883,4.502,944,5.628,1022,4.587,1045,4.738,1111,6.494,1112,6.494,1344,4.587,1353,2.761,1435,4.852,1838,3.119,1930,2.133,1985,4.019,1986,4.5,1987,3.702,1988,4.5,1989,6.302,1990,5.628,1991,5.628,1992,6.302,1993,4.5,1994,4.5,1995,4.178,1996,4.5,1997,4.5,1998,3.465,1999,4.019,2000,5.628,2001,7.878,2002,4.019,2003,4.5,2004,4.5]],["title/controllers/InstrumentsController.html",[138,2.179,2005,3.96]],["body/controllers/InstrumentsController.html",[3,0.035,4,0.035,5,0.035,12,2.191,20,0.177,21,1.188,22,2.6,27,0.796,33,0.006,36,0.717,38,1.837,39,1.31,40,0.495,41,0.929,46,2.066,47,2.051,48,2.592,53,0.184,56,0.614,62,0.043,63,0.118,70,0.946,73,1.088,77,1.784,84,1.765,91,0.003,92,0.003,101,1.768,119,1.01,126,2.477,138,1.524,140,1.398,142,1.768,146,1.601,151,1.873,152,0.663,283,3.023,285,1.961,294,2.359,348,3.382,353,3.382,361,1.555,364,2.868,378,1.993,486,2.685,490,1.816,491,2.477,492,2.418,502,1.768,505,3.899,506,1.768,517,1.524,519,1.636,525,1.636,575,3.928,586,2.678,595,2.066,596,3.248,603,3.13,605,3.713,606,3.535,623,2.452,656,1.343,685,1.49,686,1.458,816,2.54,883,4.635,905,1.932,908,4.485,914,1.996,951,2.786,1045,2.607,1108,5.871,1120,3.008,1243,5,1348,3.248,1581,2.362,1600,3.325,1614,1.768,1679,3.382,1680,2.233,1681,3.713,1825,2.77,1826,3.008,1827,3.008,1972,3.713,1998,2.593,2005,4.196,2006,3.368,2007,5.498,2008,3.008,2009,4.945,2010,5.101,2011,3.368,2012,3.368,2013,2.77,2014,3.921,2015,4.482,2016,3.13,2017,3.368,2018,3.368,2019,2.77,2020,3.368,2021,3.368,2022,5.101,2023,5.101,2024,3.928,2025,4.196,2026,3.008,2027,3.928,2028,3.008,2029,3.928,2030,3.368,2031,2.452,2032,2.77,2033,3.368,2034,2.452,2035,6.396,2036,3.368,2037,3.368,2038,4.082,2039,2.233,2040,4.482,2041,4.741,2042,2.452,2043,4.482,2044,3.008,2045,4.196,2046,4.482,2047,1.996,2048,2.145,2049,2.145,2050,2.145,2051,2.066,2052,2.145,2053,2.77,2054,3.368,2055,4.555,2056,4.555,2057,4.555,2058,3.368,2059,4.945,2060,5.148,2061,3.368,2062,5.101,2063,3.368,2064,5.101,2065,4.555,2066,3.928,2067,3.713,2068,4.196,2069,6.157,2070,2.77,2071,3.368,2072,2.77,2073,3.368,2074,3.368,2075,3.008,2076,2.77,2077,3.368,2078,3.368,2079,3.368,2080,3.368,2081,3.368,2082,2.77,2083,3.008,2084,3.368,2085,3.368,2086,2.77,2087,2.334,2088,3.368,2089,3.368,2090,2.77,2091,2.452,2092,3.368]],["title/modules/InstrumentsModule.html",[165,1.57,199,3.505]],["body/modules/InstrumentsModule.html",[3,0.063,4,0.063,5,0.063,33,0.006,39,0.926,43,3.216,53,0.191,56,1.117,62,0.078,63,0.214,73,0.971,84,1.302,91,0.005,92,0.005,96,3.674,140,3.214,165,2.767,167,2.711,168,2.711,169,2.836,170,2.836,171,2.772,172,2.836,176,3.583,177,2.711,178,2.543,181,3.051,199,7.022,211,3.308,212,1.472,274,3.63,361,2.36,438,2.711,458,2.44,480,4.245,482,4.245,483,3.281,484,3.759,486,3.026,487,5.364,665,4.347,685,2.711,686,2.653,883,2.975,1157,3.901,1554,5.471,2002,6.912,2005,6.98,2043,6.835,2044,5.471,2053,5.039,2093,5.471,2094,5.471,2095,6.126,2096,6.126,2097,6.126]],["title/injectables/InstrumentsService.html",[0,0.716,2043,3.505]],["body/injectables/InstrumentsService.html",[0,0.967,2,1.389,3,0.048,4,0.048,5,0.048,20,0.247,21,1.515,22,2.686,25,1.888,33,0.006,36,0.805,38,2.063,39,1.317,40,0.498,41,1.043,47,1.995,48,2.716,53,0.185,56,0.859,62,0.06,63,0.165,64,1.677,73,1.443,77,1.647,84,1.792,91,0.004,92,0.004,212,1.132,284,0.986,294,2.234,435,1.064,444,3.336,490,1.919,491,3.159,492,3.532,502,3.415,503,3.439,505,3.858,506,2.473,511,3.428,516,2.473,517,2.131,519,2.287,525,2.287,537,2.701,586,3.415,883,2.287,951,3.371,1108,6.138,1512,4.142,1514,2.999,1581,3.72,1614,2.473,1618,3.123,1634,4.312,1635,4.142,1636,6.129,1637,4.142,1638,1.916,1639,1.955,1640,2.89,1641,3.123,1643,3.264,1644,2.999,1645,2.999,1646,2.999,1658,4.206,1998,3.626,2007,5.808,2008,5.808,2035,7.012,2043,4.735,2045,5.35,2053,3.874,2098,4.71,2099,4.71,2100,4.71,2101,6.504,2102,4.71,2103,4.71,2104,4.71,2105,4.71,2106,4.71,2107,4.71,2108,4.71,2109,4.71,2110,4.71,2111,4.71,2112,6.504,2113,4.71,2114,4.71,2115,4.71]],["title/interfaces/JWTUser.html",[520,2.397,1896,1.311]],["body/interfaces/JWTUser.html",[3,0.071,4,0.071,5,0.071,20,0.363,27,0.865,33,0.006,40,0.544,41,0.998,62,0.088,91,0.005,92,0.005,315,3.636,342,3.499,360,1.22,361,2.834,520,4.152,521,3.843,790,5.51,1896,1.881,1898,2.811,2116,6.91,2117,7.648]],["title/classes/Job.html",[63,0.168,885,3.066]],["body/classes/Job.html",[3,0.035,4,0.035,5,0.076,12,2.302,20,0.182,27,0.812,30,2.069,33,0.006,36,0.806,38,1.231,40,0.557,41,0.623,53,0.152,62,0.08,63,0.121,65,3.758,70,1.462,73,0.548,84,1.106,91,0.003,92,0.003,119,1.876,126,2.527,134,0.64,146,1.766,152,0.681,212,0.831,284,1.642,285,2.532,342,1.958,360,0.761,361,1.907,364,2.757,368,1.639,370,1.679,374,1.167,378,2.662,380,3.191,382,2.669,397,3.626,415,4.124,423,3.477,424,2.775,425,2.303,433,2.893,434,2.466,435,1.413,436,3.115,437,1.767,457,3.348,458,1.64,459,1.379,460,2.661,461,2.117,463,2.049,464,2.893,465,1.983,467,1.679,468,1.767,469,1.767,484,3.192,486,2.721,496,1.326,573,3.606,656,2.075,728,4.052,885,6.147,1030,4.432,1045,2.659,1046,2.466,1048,4.27,1071,4.498,1076,4.006,1077,5.138,1124,5.587,1125,5.587,1126,5.587,1127,5.587,1128,5.146,1129,4.817,1162,4.823,1163,4.823,1164,4.823,1165,4.823,1166,4.823,1167,4.335,1190,4.656,1196,3.788,1260,3.606,1349,3.788,1434,4.28,1435,4.006,1621,2.662,1691,4.28,1704,6.039,1737,4.554,1928,5.359,1930,1.639,2016,4.27,2118,3.088,2119,3.088,2120,3.458,2121,7.478,2122,3.458,2123,3.458,2124,4.647,2125,4.006,2126,5.203,2127,6.256,2128,4.28,2129,5.203,2130,3.458,2131,3.458,2132,4.647,2133,5.203,2134,3.458,2135,3.458,2136,6.96,2137,5.203,2138,3.458,2139,3.458,2140,3.458,2141,5.203,2142,5.203,2143,5.203,2144,3.458,2145,3.458,2146,4.647,2147,3.458,2148,3.458,2149,3.458,2150,3.458,2151,3.458,2152,4.647,2153,3.458,2154,2.662,2155,2.662,2156,3.458,2157,2.844,2158,4.28,2159,3.088,2160,3.458,2161,3.088,2162,3.088,2163,3.458,2164,3.458]],["title/controllers/JobsController.html",[138,2.179,2165,3.96]],["body/controllers/JobsController.html",[3,0.02,4,0.02,5,0.034,12,1.325,20,0.103,21,0.769,22,2.567,25,0.568,27,0.774,30,0.87,33,0.006,34,1.61,36,0.712,38,1.779,39,1.164,40,0.501,41,0.9,46,2.625,47,1.823,48,2.325,53,0.174,56,0.357,62,0.025,63,0.068,64,1.788,70,1.202,73,1.409,77,2.694,84,1.554,91,0.002,92,0.002,119,0.587,126,2.078,138,0.886,140,0.813,142,1.028,146,1.334,151,1.088,152,0.385,155,2.188,156,1.425,157,1.356,161,0.886,178,1.37,218,1.356,231,1.16,242,0.493,245,2.802,246,2.541,267,1.507,268,1.507,283,1.16,284,1.354,285,1.222,294,2.223,323,1.564,324,1.356,346,1.266,354,1.835,361,1.304,363,1.643,364,2.701,378,0.958,380,2.474,382,1.266,407,1.835,425,1.893,435,0.442,438,1.893,441,2.712,443,2.255,484,1.201,486,3.012,490,1.482,491,1.603,492,1.564,496,3.121,502,1.028,503,0.697,505,3.236,515,0.951,517,0.886,519,0.951,555,1.425,559,2.188,562,1.782,586,1.733,595,1.201,596,2.102,603,2.025,606,2.287,616,1.356,651,4.205,656,2.58,685,0.866,686,0.848,727,2.541,731,3.294,816,3.028,885,5.816,905,1.123,908,3.598,914,1.16,924,5.15,951,1.936,1022,1.425,1041,1.201,1048,2.025,1058,1.088,1071,2.881,1121,5.924,1129,1.507,1174,1.201,1537,2.625,1566,2.965,1567,2.837,1581,1.981,1597,1.356,1598,1.733,1600,3.283,1614,1.028,1621,1.507,1652,1.733,1665,1.748,1668,3.481,1679,2.188,1680,1.298,1721,3.381,1737,5.15,1747,1.356,1748,1.748,1759,1.61,1799,2.637,1804,1.507,1838,2.287,1872,2.947,1877,2.541,1893,1.425,1909,1.057,1911,1.686,2009,3.872,2013,1.61,2014,2.102,2015,2.402,2016,3.082,2019,1.61,2029,2.541,2031,1.425,2032,1.61,2034,1.425,2038,2.837,2039,2.188,2041,4.982,2042,1.425,2046,2.402,2047,1.16,2048,1.246,2049,1.246,2050,1.246,2051,1.201,2052,1.246,2059,3.872,2060,4.032,2066,2.541,2067,2.402,2068,5.002,2070,1.61,2072,1.61,2082,1.61,2086,1.61,2087,1.356,2090,1.61,2091,1.425,2154,1.507,2155,1.507,2157,1.61,2158,1.61,2159,3.821,2165,2.715,2166,1.957,2167,3.3,2168,3.3,2169,3.3,2170,5.023,2171,3.3,2172,3.3,2173,1.957,2174,6.88,2175,3.3,2176,1.957,2177,6.47,2178,2.541,2179,2.541,2180,2.947,2181,3.3,2182,3.3,2183,3.3,2184,3.3,2185,3.3,2186,3.3,2187,3.3,2188,1.957,2189,1.957,2190,1.957,2191,1.957,2192,1.957,2193,1.957,2194,1.61,2195,1.957,2196,1.748,2197,1.957,2198,1.748,2199,1.957,2200,1.957,2201,1.957,2202,1.957,2203,5.233,2204,1.748,2205,1.957,2206,3.3,2207,1.957,2208,3.3,2209,3.114,2210,1.748,2211,2.715,2212,1.61,2213,1.748,2214,3.3,2215,2.965,2216,1.957,2217,1.957,2218,1.957,2219,1.957,2220,1.957,2221,1.748,2222,1.957,2223,1.957,2224,1.957,2225,1.957,2226,5.023,2227,3.294,2228,5.023,2229,1.957,2230,2.715,2231,1.957,2232,1.957,2233,1.957,2234,3.3,2235,5.023,2236,1.957,2237,1.957,2238,3.3,2239,5.008,2240,1.957,2241,3.3,2242,1.957,2243,1.957,2244,3.3,2245,1.957,2246,1.957,2247,4.278,2248,1.957,2249,1.957,2250,1.957,2251,1.425,2252,1.957,2253,1.748,2254,1.957,2255,5.608,2256,1.957,2257,1.957,2258,1.957,2259,1.957,2260,1.957,2261,1.957,2262,1.957,2263,1.957,2264,1.957,2265,1.957,2266,4.278,2267,1.957,2268,1.957,2269,1.957,2270,1.748,2271,1.957,2272,1.957,2273,1.957,2274,1.957,2275,1.957,2276,1.957,2277,1.957,2278,3.3,2279,1.507,2280,3.3,2281,1.957,2282,1.957,2283,1.957,2284,1.957,2285,1.957,2286,1.957,2287,1.957,2288,1.957,2289,1.957,2290,1.957,2291,4.485,2292,1.957,2293,1.957,2294,1.748,2295,1.748,2296,1.748,2297,1.61,2298,1.957,2299,1.957,2300,3.656,2301,1.748,2302,1.957,2303,1.748,2304,2.947,2305,2.947,2306,1.748,2307,1.957,2308,1.748,2309,1.748,2310,1.957,2311,1.61,2312,1.957,2313,1.507,2314,5.608,2315,1.957,2316,1.957,2317,1.748,2318,1.748,2319,1.507,2320,1.957]],["title/modules/JobsModule.html",[165,1.57,200,3.505]],["body/modules/JobsModule.html",[3,0.059,4,0.059,5,0.059,33,0.006,39,0.876,53,0.199,56,1.057,62,0.074,63,0.203,91,0.004,92,0.004,96,3.58,115,2.407,140,3.102,165,2.696,167,2.565,168,2.565,169,2.684,170,2.684,171,2.623,172,2.684,176,3.459,177,2.565,178,2.407,181,3.721,195,6.413,197,5.308,200,7.28,202,6.136,203,6.136,211,3.13,212,1.393,216,4.584,458,1.827,665,4.285,685,2.565,686,2.51,885,3.692,1502,4.017,1546,5.177,1551,5.177,2162,6.673,2165,6.801,2209,6.737,2210,5.177,2212,4.769,2321,5.177,2322,5.177,2323,5.797,2324,5.797,2325,5.797,2326,4.017,2327,5.797,2328,5.797]],["title/injectables/JobsService.html",[0,0.716,2209,3.505]],["body/injectables/JobsService.html",[0,0.485,2,0.57,3,0.02,4,0.02,5,0.02,20,0.101,21,0.76,22,2.609,25,0.947,27,0.776,30,1.593,33,0.006,36,0.76,38,1.887,39,1.205,40,0.487,41,0.955,47,1.853,48,2.387,53,0.173,55,0.987,56,0.352,62,0.025,63,0.067,64,2.665,73,1.513,77,2.947,81,1.145,84,1.495,91,0.002,92,0.002,111,1.145,112,2.733,115,0.802,126,0.938,127,3.451,146,0.673,161,1.477,177,0.855,178,0.802,212,0.464,245,1.413,267,1.487,268,1.487,284,0.887,285,0.932,294,1.456,342,1.874,346,1.625,348,1.281,353,1.281,354,2.356,360,0.477,363,2.771,364,2.23,380,2.616,382,2.135,397,1.413,398,1.108,420,1.185,435,0.436,438,1.444,443,1.083,444,2.068,453,0.987,486,2.514,490,0.963,491,2.058,492,1.547,502,1.014,503,2.789,505,3.313,506,1.713,511,1.406,516,1.014,517,0.874,519,0.938,525,0.938,537,1.872,555,1.406,586,1.713,651,2.225,731,1.487,816,0.962,849,1.23,882,1.339,885,4.767,891,5.047,892,1.725,922,1.487,924,1.406,951,2.254,996,4.681,1043,1.444,1048,2.002,1051,1.406,1058,1.074,1121,4.052,1128,3.485,1129,2.513,1209,3.263,1210,3.263,1215,3.263,1216,3.263,1402,2.165,1512,2.078,1514,1.23,1537,3.945,1549,4.263,1550,1.725,1566,2.936,1567,2.809,1581,3.129,1597,1.339,1598,2.615,1600,1.762,1601,1.406,1612,2.376,1613,2.376,1614,1.014,1615,2.513,1616,1.406,1618,1.281,1621,1.487,1625,1.406,1626,1.281,1627,1.589,1635,1.23,1637,1.23,1638,0.786,1639,0.802,1640,1.185,1641,2.164,1644,1.23,1645,1.23,1646,1.23,1649,1.406,1651,1.406,1652,1.713,1653,1.487,1654,1.487,1668,4.185,1679,1.281,1721,1.815,1737,2.376,1759,4.097,1799,2.615,1838,2.261,1893,1.406,1925,1.725,1928,3.263,1995,1.281,2016,1.185,2154,6.415,2155,1.487,2157,2.684,2158,3.485,2161,3.784,2174,5.393,2178,2.513,2179,1.487,2203,5.203,2209,4.396,2211,2.684,2212,1.589,2230,2.684,2239,5.393,2291,1.725,2317,1.725,2318,2.914,2329,1.932,2330,5.566,2331,4.237,2332,4.237,2333,3.263,2334,3.263,2335,4.237,2336,3.263,2337,3.263,2338,4.237,2339,3.263,2340,1.932,2341,4.98,2342,7.978,2343,6.995,2344,1.932,2345,3.263,2346,1.932,2347,1.932,2348,1.932,2349,1.932,2350,1.932,2351,3.263,2352,1.932,2353,3.263,2354,1.932,2355,1.932,2356,1.932,2357,1.932,2358,3.263,2359,1.932,2360,1.932,2361,3.263,2362,1.932,2363,1.932,2364,1.932,2365,3.263,2366,1.932,2367,1.932,2368,2.914,2369,1.589,2370,1.932,2371,1.725,2372,2.684,2373,1.932,2374,1.932,2375,4.237,2376,1.932,2377,1.932,2378,1.932,2379,1.725,2380,4.237,2381,1.932,2382,1.932,2383,1.932,2384,1.487,2385,1.932,2386,1.932,2387,1.932,2388,1.932,2389,1.932,2390,1.932,2391,1.932,2392,1.932,2393,3.263,2394,1.932,2395,1.932,2396,3.784,2397,2.914,2398,3.263,2399,3.263,2400,1.932,2401,3.263,2402,3.263,2403,4.447,2404,1.932,2405,2.914,2406,1.932,2407,4.237,2408,1.932,2409,3.263,2410,1.932,2411,1.932,2412,1.725,2413,1.932,2414,3.263,2415,1.932,2416,1.932,2417,1.932,2418,4.237,2419,1.725,2420,1.932,2421,3.263,2422,1.932,2423,1.589,2424,1.932,2425,1.932,2426,1.932,2427,2.684,2428,1.932,2429,1.932,2430,7.277,2431,1.932,2432,1.932,2433,1.725,2434,1.932,2435,1.725,2436,1.932,2437,1.725,2438,1.932,2439,1.725,2440,1.932,2441,4.237,2442,4.237,2443,3.263,2444,3.263,2445,1.487,2446,1.725,2447,1.932,2448,1.932,2449,1.932,2450,1.932,2451,1.932,2452,3.263,2453,1.932,2454,1.589,2455,1.932,2456,1.932,2457,1.932,2458,1.932,2459,1.725,2460,1.932,2461,1.932,2462,1.932,2463,1.932,2464,1.932,2465,1.932,2466,3.263,2467,3.263,2468,3.263,2469,1.589,2470,1.725,2471,1.932,2472,1.932,2473,1.932,2474,1.932,2475,1.725,2476,1.932,2477,1.932,2478,1.932,2479,1.932,2480,1.932,2481,2.914,2482,1.932,2483,3.263,2484,3.263,2485,4.237,2486,1.932,2487,1.932,2488,1.932,2489,1.932,2490,1.932,2491,1.932,2492,1.725,2493,1.932,2494,1.932,2495,1.932,2496,1.932,2497,1.932]],["title/injectables/JwtAuthGuard.html",[0,0.716,223,3.505]],["body/injectables/JwtAuthGuard.html",[0,1.108,2,1.704,3,0.089,4,0.059,5,0.059,18,1.65,20,0.303,21,1.737,25,1.677,33,0.006,36,0.762,38,1.953,39,1.247,40,0.471,41,0.988,47,1.764,53,0.168,56,1.053,62,0.074,63,0.202,70,1.623,71,3.423,73,1.308,84,1.754,91,0.004,92,0.004,101,3.033,155,4.943,161,2.614,221,7.119,222,3.119,223,5.427,242,2.272,294,1.984,328,3.033,483,2.449,496,2.859,639,6.009,671,3.313,747,6.132,816,2.876,1399,4.939,1402,4.457,1815,4.003,1816,4.003,1817,4.205,1818,4.003,1837,3.313,2128,4.752,2498,7.789,2499,5.159,2500,6.657,2501,8.254,2502,4.752,2503,5.776,2504,6.657,2505,5.776,2506,5.776,2507,5.776,2508,6.132,2509,4.448,2510,5.776,2511,5.776,2512,7.455,2513,4.752,2514,5.159,2515,5.159,2516,4.752]],["title/injectables/JwtStrategy.html",[0,0.716,666,3.707]],["body/injectables/JwtStrategy.html",[0,1.065,2,1.604,3,0.056,4,0.056,5,0.056,18,1.553,20,0.286,21,1.67,22,2.217,25,2.08,27,0.463,33,0.006,36,0.662,38,1.695,39,1.083,40,0.409,41,0.858,47,1.286,53,0.192,56,0.991,62,0.069,63,0.19,64,2.854,71,3.222,73,1.27,74,2.46,77,2.506,84,1.156,91,0.004,92,0.004,109,3.462,111,3.222,112,4.115,115,2.257,242,1.368,285,1.553,294,1.868,315,2.126,328,2.212,342,2.046,361,1.657,520,3.568,522,2.854,559,4.751,612,3.462,622,5.555,636,3.462,666,5.518,671,3.118,678,4.868,679,3.605,696,4.472,702,3.605,770,3.958,780,3.768,789,3.958,790,3.222,877,2.936,901,3.985,1721,3.023,2117,7.481,2517,5.437,2518,6.148,2519,5.437,2520,6.4,2521,5.437,2522,5.437,2523,4.856,2524,5.437,2525,5.437,2526,5.437,2527,5.437,2528,5.437,2529,6.594,2530,5.437,2531,8.016,2532,4.856,2533,5.437,2534,5.437,2535,4.856,2536,5.437,2537,5.437,2538,5.437,2539,5.437,2540,5.437,2541,5.437,2542,5.437,2543,5.437]],["title/injectables/LdapAuthGuard.html",[0,0.716,609,3.96]],["body/injectables/LdapAuthGuard.html",[0,1.305,2,2.224,3,0.077,4,0.077,5,0.077,18,2.153,33,0.006,53,0.179,56,1.374,62,0.096,63,0.263,91,0.005,92,0.005,609,7.221,671,4.323,2509,5.804,2544,7.537,2545,7.537]],["title/injectables/LdapStrategy.html",[0,0.716,667,3.707]],["body/injectables/LdapStrategy.html",[0,0.82,2,1.104,3,0.038,4,0.038,5,0.038,7,1.356,8,2.08,16,1.463,18,1.068,19,4.644,20,0.197,21,1.286,22,1.813,25,1.602,27,0.813,30,2.13,32,1.553,33,0.006,34,3.078,36,0.606,38,1.551,39,0.99,40,0.413,41,0.785,47,1.305,48,1.602,50,4.789,53,0.188,54,2.217,56,0.682,58,2.383,62,0.048,63,0.131,64,2.334,73,1.475,74,2.967,77,2.997,79,2.421,84,0.795,91,0.003,92,0.003,109,4.175,111,2.217,112,3.654,115,1.553,161,1.693,242,2.322,294,1.896,315,3.157,317,2.02,342,2.904,354,3.068,364,2.421,389,4.249,397,2.389,435,0.845,484,2.295,490,1.104,503,1.965,556,7.05,559,4.347,581,2.295,612,2.383,636,2.383,667,4.249,671,2.146,678,4.384,679,2.481,742,4.954,769,4.017,770,2.724,771,3.659,772,3.27,773,2.724,774,3.824,775,2.881,776,2.593,779,4.914,780,3.824,781,4.44,782,2.217,783,2.724,789,2.724,790,3.27,808,2.724,809,4.249,810,2.881,812,3.078,813,2.881,815,3.078,816,2.748,819,2.881,820,2.593,821,2.481,823,3.078,824,4.798,825,2.881,826,4.539,832,4.539,834,4.539,835,4.249,856,3.078,857,3.078,860,3.078,861,3.078,863,3.078,864,3.078,901,3.068,951,1.693,967,4.017,1415,4.249,1679,3.659,2067,2.724,2445,2.881,2520,3.341,2532,3.341,2546,3.741,2547,5.518,2548,3.741,2549,5.518,2550,3.741,2551,3.741,2552,3.341,2553,3.741,2554,3.741,2555,4.539,2556,5.518,2557,8.074,2558,8.074,2559,5.854,2560,3.741,2561,5.518,2562,3.741,2563,4.249,2564,6.556,2565,3.078,2566,5.518,2567,5.518,2568,2.593,2569,3.741,2570,3.741,2571,3.741,2572,3.078,2573,3.341,2574,3.078,2575,3.741,2576,5.518]],["title/classes/LifecycleClass.html",[63,0.168,2577,3.96]],["body/classes/LifecycleClass.html",[3,0.025,4,0.025,5,0.025,12,2.485,20,0.427,27,0.759,33,0.006,36,0.799,40,0.551,41,1.135,43,2.111,53,0.103,62,0.081,63,0.087,65,2.171,73,0.802,84,0.855,91,0.002,92,0.002,119,2.245,134,0.46,146,1.783,152,0.49,212,0.597,231,3,245,2.959,284,1.83,285,2.865,294,1.998,328,1.636,354,3.234,360,0.588,364,1.87,374,2.883,378,2.884,380,3.768,382,3.65,400,2.034,407,2.236,409,2.972,419,2.236,423,3.912,424,0.991,435,0.562,437,3.827,438,1.779,454,2.055,457,3.354,458,1.267,459,0.991,460,2.636,461,1.636,573,2.787,587,3.308,651,2.111,656,2.725,728,3.729,752,1.914,756,4.811,885,2.561,891,1.525,952,2.467,1030,2.561,1048,5.306,1049,4.926,1050,4.785,1051,1.81,1076,3.096,1091,2.927,1185,2.666,1425,3.308,1446,3.096,1489,2.22,1661,3.096,1721,2.236,1885,3.591,2016,2.467,2024,4.478,2066,3.096,2067,2.927,2076,3.308,2146,5.194,2178,3.898,2179,3.898,2180,3.591,2433,4.521,2435,4.521,2437,4.521,2439,4.521,2454,3.308,2459,2.22,2577,4.165,2578,2.22,2579,5.063,2580,5.063,2581,5.063,2582,5.063,2583,5.063,2584,5.063,2585,4.521,2586,5.063,2587,7.488,2588,2.486,2589,2.486,2590,7.488,2591,4.021,2592,4.021,2593,4.021,2594,4.021,2595,4.021,2596,3.591,2597,2.486,2598,4.021,2599,3.591,2600,2.486,2601,4.021,2602,3.591,2603,5.621,2604,2.486,2605,4.021,2606,2.486,2607,3.591,2608,4.021,2609,2.486,2610,2.486,2611,4.021,2612,4.021,2613,2.486,2614,2.486,2615,4.021,2616,2.486,2617,2.486,2618,2.486,2619,2.486,2620,4.021,2621,4.021,2622,5.194,2623,4.021,2624,4.021,2625,4.021,2626,3.591,2627,3.591,2628,4.021,2629,2.486,2630,2.486,2631,3.591,2632,4.021,2633,4.021,2634,4.165,2635,2.486,2636,2.486,2637,2.486,2638,2.486,2639,4.021,2640,2.486,2641,2.486,2642,3.591,2643,2.486,2644,2.486,2645,2.486,2646,4.021,2647,4.021,2648,3.591,2649,2.486,2650,2.486,2651,2.22,2652,2.22,2653,2.486,2654,4.021,2655,2.486,2656,4.021,2657,4.021,2658,2.486,2659,2.486,2660,2.486,2661,2.486,2662,2.486]],["title/injectables/LocalAuthGuard.html",[0,0.716,598,3.707]],["body/injectables/LocalAuthGuard.html",[0,1.303,2,2.218,3,0.077,4,0.077,5,0.077,18,2.148,33,0.006,53,0.179,56,1.371,62,0.096,63,0.263,91,0.005,92,0.005,598,6.75,671,4.313,2499,6.716,2509,5.79,2663,6.716,2664,7.52]],["title/injectables/LocalStrategy.html",[0,0.716,668,3.707]],["body/injectables/LocalStrategy.html",[0,0.985,2,1.427,3,0.05,4,0.05,5,0.05,7,1.754,8,2.689,16,1.891,18,1.381,19,5.005,20,0.254,21,1.543,22,2.089,25,1.923,27,0.792,33,0.006,36,0.612,38,1.567,39,1.001,40,0.378,41,0.793,47,1.144,48,1.923,50,4.66,53,0.193,54,2.866,56,0.882,58,3.08,62,0.062,63,0.169,64,3.03,71,2.866,73,1.452,74,2.997,77,3.074,79,2.79,84,1.606,91,0.004,92,0.004,112,2.997,161,2.188,242,2.045,294,2.276,315,2.954,317,4.388,342,1.82,361,1.474,559,5.009,600,5.209,601,3.521,612,3.08,636,3.08,668,5.1,671,2.774,678,4.725,679,3.207,742,4.064,770,3.521,779,3.08,780,3.351,781,4.064,782,2.866,789,3.521,808,3.521,809,3.724,816,3.298,824,3.207,825,3.724,877,4.079,901,3.683,967,3.521,1168,2.967,1415,3.724,1736,3.978,1747,3.351,2067,3.521,2508,5.449,2518,5.967,2523,4.319,2529,5.449,2563,3.724,2573,4.319,2574,3.978,2665,4.836,2666,4.319,2667,4.836,2668,4.836,2669,4.836,2670,4.836,2671,4.822,2672,3.978,2673,4.836,2674,4.319,2675,4.836,2676,4.836,2677,4.836,2678,4.836,2679,6.624,2680,4.836,2681,4.836,2682,4.836,2683,4.836,2684,4.836]],["title/classes/Logbook.html",[63,0.168,887,3.192]],["body/classes/Logbook.html",[3,0.064,4,0.064,5,0.064,20,0.331,27,0.767,33,0.006,36,0.793,39,1.298,40,0.529,53,0.183,62,0.109,63,0.22,73,0.997,91,0.005,92,0.005,134,1.165,146,1.771,152,1.239,212,1.512,245,3.72,308,3.609,360,1.152,374,2.124,435,1.422,457,3.295,458,2.481,459,2.509,460,2.744,461,3.202,887,5.695,1190,4.377,1191,5.219,1203,4.581,1930,2.983,2685,5.62,2686,7.671,2687,8.59,2688,6.293,2689,6.293,2690,7.871,2691,6.293,2692,6.293,2693,5.62,2694,6.293,2695,5.62,2696,6.293,2697,6.293,2698,6.293,2699,6.293,2700,6.293]],["title/controllers/LogbooksController.html",[138,2.179,2701,3.96]],["body/controllers/LogbooksController.html",[3,0.059,4,0.059,5,0.059,20,0.305,21,1.743,22,2.289,27,0.789,33,0.006,36,0.691,38,1.374,39,1.25,40,0.332,41,0.695,46,3.563,47,1.77,48,2.171,53,0.196,56,1.059,62,0.074,63,0.203,70,1.632,84,1.59,91,0.004,92,0.004,101,3.049,138,2.628,140,2.411,142,3.049,146,1.542,151,3.229,152,1.143,491,4.244,595,3.563,603,4.59,685,2.57,686,2.515,887,5.487,905,3.331,908,4.602,1574,5.735,1600,4.719,2009,4.764,2039,3.851,2040,4.228,2047,3.441,2048,3.698,2049,3.698,2050,3.698,2051,3.563,2052,3.698,2059,4.764,2060,4.96,2300,5.446,2701,6.154,2702,5.807,2703,5.186,2704,7.39,2705,5.807,2706,5.807,2707,5.186,2708,5.807,2709,5.807,2710,5.186,2711,4.777,2712,4.777,2713,5.807,2714,5.807,2715,5.807,2716,5.807,2717,7.481,2718,5.807,2719,5.807,2720,5.807,2721,5.807,2722,5.807]],["title/modules/LogbooksModule.html",[165,1.57,201,3.336]],["body/modules/LogbooksModule.html",[3,0.062,4,0.062,5,0.062,22,1.675,33,0.006,53,0.194,56,1.105,59,4.198,62,0.077,63,0.212,91,0.005,92,0.005,96,3.655,112,4.017,115,2.515,140,3.191,165,2.752,167,2.681,168,2.681,169,2.804,170,2.804,171,2.741,172,3.908,176,3.558,177,2.681,178,2.515,181,4.203,201,6.826,204,6.207,216,5.179,274,3.589,303,3.18,665,4.334,685,2.681,686,2.623,1574,6.862,2701,6.943,2710,5.409,2723,5.409,2724,6.057,2725,5.409,2726,5.409,2727,6.057,2728,6.057,2729,5.409,2730,5.409,2731,5.409,2732,4.983,2733,5.409,2734,5.409,2735,5.409]],["title/injectables/LogbooksService.html",[0,0.716,1574,3.336]],["body/injectables/LogbooksService.html",[0,0.698,2,0.892,3,0.031,4,0.031,5,0.031,20,0.159,21,1.094,22,2.41,25,1.363,27,0.781,29,3.11,33,0.006,35,6.387,36,0.761,38,1.536,39,1.296,40,0.425,41,0.777,47,1.536,48,2.33,53,0.158,55,1.546,56,0.552,59,2.096,60,5.783,61,1.588,62,0.039,63,0.106,64,3.179,70,1.32,73,1.442,77,2.715,81,3.413,84,1.917,85,2.701,91,0.003,92,0.003,111,1.793,112,3.367,115,1.256,161,2.126,245,3.222,294,2.415,300,3.864,315,3.138,317,4.549,348,4.305,353,4.305,354,3.61,356,3.864,360,0.687,382,1.16,400,2.27,491,3.153,525,1.469,544,4.192,569,4.726,581,2.882,736,4.737,769,4.726,816,3.501,887,5.322,1153,3.115,1574,3.255,1600,3.506,1638,2.86,1639,2.919,1640,1.856,1668,3.991,1721,4.463,1785,5.143,1786,2.701,1799,2.466,2227,2.329,2230,2.488,2427,3.864,2686,5.143,2703,6.645,2704,4.195,2707,4.195,2711,2.488,2736,3.025,2737,5.759,2738,5.759,2739,4.698,2740,3.025,2741,3.025,2742,4.698,2743,3.025,2744,3.025,2745,3.025,2746,3.025,2747,3.025,2748,3.025,2749,2.701,2750,3.025,2751,6.493,2752,5.759,2753,3.025,2754,6.493,2755,3.025,2756,7.764,2757,3.025,2758,3.025,2759,3.025,2760,5.798,2761,5.798,2762,3.025,2763,3.025,2764,5.759,2765,4.698,2766,5.759,2767,3.025,2768,4.737,2769,5.759,2770,5.759,2771,4.698,2772,4.698,2773,4.698,2774,3.025,2775,3.025,2776,4.698,2777,3.025,2778,3.025,2779,3.025,2780,4.698,2781,3.025,2782,5.143,2783,5.759,2784,7.03,2785,3.025,2786,3.025,2787,3.025,2788,7.44,2789,3.025,2790,3.025,2791,3.025,2792,3.025,2793,3.025,2794,3.025,2795,2.701,2796,4.698,2797,5.759,2798,3.025,2799,3.025,2800,3.025,2801,3.025,2802,4.698,2803,4.195,2804,3.025,2805,5.759,2806,3.025,2807,3.025,2808,3.025,2809,3.025,2810,2.701,2811,3.025,2812,3.025,2813,3.025,2814,3.025,2815,3.025,2816,3.025,2817,3.025]],["title/injectables/MailService.html",[0,0.716,996,3.505]],["body/injectables/MailService.html",[0,1.114,2,1.716,3,0.06,4,0.06,5,0.06,20,0.306,21,1.745,22,2.291,25,1.689,27,0.849,33,0.006,36,0.692,38,1.772,39,1.132,40,0.428,41,0.896,47,1.376,53,0.153,55,2.973,56,1.061,62,0.074,63,0.203,70,1.635,77,2.034,91,0.004,92,0.004,101,3.054,161,4.32,255,4.48,256,4.786,342,2.818,348,3.857,353,3.857,354,3.235,382,2.231,397,2.519,996,5.452,2343,8.081,2403,8.081,2795,5.196,2818,5.818,2819,8.282,2820,5.818,2821,9.263,2822,5.818,2823,5.818,2824,9.049,2825,9.049,2826,5.818,2827,5.818,2828,5.818,2829,5.818,2830,5.818,2831,7.489,2832,5.818]],["title/injectables/MainDatasetsPublicInterceptor.html",[0,0.716,2833,3.96]],["body/injectables/MainDatasetsPublicInterceptor.html",[0,1.24,2,1.741,3,0.06,4,0.06,5,0.06,20,0.31,21,1.761,33,0.006,36,0.545,38,1.396,39,0.892,40,0.337,41,0.706,47,1.396,53,0.154,56,1.076,61,3.099,62,0.096,63,0.264,73,1.44,84,1.607,91,0.004,92,0.004,284,1.745,310,3.583,483,3.727,496,2.899,965,4.336,1395,4.336,1398,4.942,1399,4.772,1400,5.386,1402,3.017,1403,4.942,1404,5.211,1837,4.336,1841,5.012,2833,6.218,2834,6.751,2835,5.271,2836,5.903,2837,6.751,2838,5.271,2839,7.447,2840,6.751,2841,5.271,2842,5.271,2843,5.271,2844,5.271,2845,4.856,2846,5.271,2847,7.447,2848,6.86,2849,5.271,2850,5.271]],["title/classes/MeasurementPeriodClass.html",[63,0.168,1247,3.707]],["body/classes/MeasurementPeriodClass.html",[3,0.08,4,0.039,5,0.039,10,4.849,12,2.419,14,2.724,18,1.602,20,0.453,27,0.816,30,1.929,32,1.588,33,0.006,36,0.797,40,0.544,51,3.31,53,0.149,62,0.085,63,0.134,65,3.949,73,0.606,91,0.003,92,0.003,134,0.708,146,1.778,152,0.753,212,0.919,242,1.412,284,1.955,307,2.008,360,0.972,368,3.148,369,3.029,370,3.225,371,2.945,374,2.911,378,2.441,398,3.217,400,1.961,404,2.267,409,1.955,423,4.012,424,3.245,425,2.482,426,4.067,427,4.067,428,4.195,429,3.324,430,4.823,431,2.347,432,2.008,433,2.127,434,3.691,435,1.267,436,1.905,437,1.955,438,1.693,439,2.267,440,2.066,441,3.029,442,2.194,443,1.269,444,1.588,445,2.127,446,2.008,447,2.194,448,2.267,449,2.267,450,3.324,451,3.324,452,2.347,453,2.866,454,2.866,455,2.347,456,2.347,457,2.987,458,1.768,459,1.525,460,2.374,461,2.282,883,3.782,952,3.441,1030,4.658,1046,2.659,1077,5.292,1150,6.641,1152,5.463,1153,4.403,1154,5.463,1155,5.009,1156,6.695,1157,3.572,1158,4.614,1161,5.009,1162,5.068,1163,5.068,1164,5.068,1165,5.068,1166,5.068,1167,5.068,1168,4.487,1169,5.324,1170,4.849,1171,5.324,1172,5.324,1173,5.068,1174,4.487,1175,5.324,1178,5.009,1179,4.319,1182,4.083,1184,3.416,1185,3.719,1186,3.416,1247,5.631,1447,5.009,2851,6.954,2852,3.416,2853,3.825,2854,3.825,2855,3.825,2856,3.825,2857,3.825,2858,3.825,2859,3.825,2860,3.416,2861,3.416,2862,3.825]],["title/classes/Message.html",[63,0.168,245,2.085]],["body/classes/Message.html",[3,0.061,4,0.061,5,0.061,20,0.313,27,0.794,30,2.006,33,0.006,36,0.861,40,0.564,53,0.171,62,0.107,63,0.208,73,0.944,87,6.449,91,0.004,92,0.004,134,1.103,146,1.921,212,1.431,245,3.821,360,1.112,372,3.313,435,1.346,457,3.768,458,2.397,459,2.375,461,3.093,1028,2.929,1624,5.041,2693,5.32,2810,7.479,2863,5.32,2864,8.375,2865,8.375,2866,8.375,2867,6.889,2868,7.479,2869,5.957,2870,5.957,2871,5.957,2872,5.957,2873,5.957,2874,5.32,2875,5.957,2876,5.957,2877,5.32,2878,5.957,2879,5.957]],["title/classes/MessageContent.html",[63,0.168,2867,3.96]],["body/classes/MessageContent.html",[3,0.092,4,0.065,5,0.065,20,0.333,27,0.818,30,2.086,33,0.006,36,0.834,40,0.541,41,1.08,53,0.129,62,0.11,63,0.222,73,1.005,91,0.005,92,0.005,134,1.174,146,1.861,212,1.524,360,1.157,457,3.724,458,2.493,459,2.529,461,2.58,641,5.974,1624,5.245,2038,5.716,2867,7.091,2868,5.664,2874,5.664,2880,8.294,2881,5.664,2882,8.62,2883,6.342,2884,6.342,2885,6.342,2886,6.342,2887,5.664,2888,6.342,2889,6.342]],["title/injectables/MultiUTCTimeInterceptor.html",[0,0.716,2890,4.3]],["body/injectables/MultiUTCTimeInterceptor.html",[0,1.127,2,1.748,3,0.061,4,0.061,5,0.061,20,0.311,21,1.765,25,1.719,33,0.006,36,0.813,38,1.793,39,1.145,40,0.477,41,0.907,47,1.402,48,2.199,53,0.17,56,1.08,61,3.11,62,0.075,63,0.207,73,1.201,84,1.259,91,0.004,92,0.004,310,2.808,360,1.108,483,3.541,562,3.199,1173,6.306,1395,4.791,1398,3.511,1399,4.623,1400,5.218,1402,3.872,1403,4.49,1404,4.95,1776,6.78,1834,4.873,1835,4.346,1837,3.398,1841,3.928,2890,6.766,2891,9.1,2892,5.291,2893,8.45,2894,9.1,2895,7.577,2896,7.577,2897,5.924,2898,5.291,2899,5.924,2900,8.354,2901,5.924,2902,5.291,2903,7.577,2904,7.577,2905,5.924]],["title/injectables/OidcAuthGuard.html",[0,0.716,613,3.96]],["body/injectables/OidcAuthGuard.html",[0,1.186,2,1.897,3,0.066,4,0.066,5,0.066,18,1.836,20,0.338,21,1.859,25,1.866,27,0.68,30,2.288,33,0.006,36,0.737,38,1.887,39,1.205,40,0.456,41,0.955,47,1.521,53,0.162,56,1.173,62,0.082,63,0.225,71,3.81,73,1.264,84,1.367,91,0.005,92,0.005,101,3.376,496,3.06,613,6.563,671,3.688,914,3.81,922,4.951,1399,4.762,1402,3.286,1837,3.688,2500,7.125,2504,7.125,2509,4.951,2906,6.43,2907,6.43,2908,6.43,2909,8.674,2910,6.43,2911,6.43,2912,6.43,2913,6.43,2914,6.43,2915,6.43,2916,8.674,2917,8.674]],["title/injectables/OidcStrategy.html",[0,0.716,681,3.707]],["body/injectables/OidcStrategy.html",[0,0.758,2,0.993,3,0.035,4,0.035,5,0.035,7,1.221,8,1.873,16,1.317,18,0.962,19,4.485,20,0.177,21,1.188,22,1.9,25,1.48,27,0.708,32,2.118,33,0.006,36,0.717,38,1.625,39,1.115,40,0.461,41,0.822,47,1.457,48,1.48,50,3.939,53,0.188,54,1.996,55,1.721,56,0.614,58,2.145,62,0.065,63,0.178,64,2.445,70,0.946,71,1.996,73,1.47,74,3.339,77,2.82,84,1.46,91,0.003,92,0.003,96,1.458,101,1.768,109,2.145,112,3.848,115,1.398,218,2.334,242,2.14,285,1.457,294,2.115,315,2.407,317,1.819,342,2.317,360,0.746,364,1.244,382,1.292,389,2.593,397,2.209,435,0.761,440,1.819,490,0.993,503,1.816,514,2.145,559,3.382,581,2.066,600,4.601,601,2.452,612,2.145,615,4.759,616,2.334,631,6.191,636,2.145,671,1.932,678,4.234,679,2.233,680,2.593,681,3.928,692,6.268,722,2.77,723,3.713,732,2.77,742,2.066,754,4.196,758,2.77,759,2.77,760,2.77,761,2.77,765,3.008,766,2.77,769,3.713,770,2.452,771,3.382,772,3.023,773,2.452,774,3.535,775,2.593,776,2.334,777,7.418,778,6.59,779,5.136,780,2.334,781,4.527,782,1.996,783,2.452,784,3.008,785,3.008,786,3.008,787,3.008,788,3.008,789,2.452,790,4.373,791,3.008,792,3.008,793,3.008,794,3.008,795,3.008,796,3.008,797,3.008,798,3.008,799,4.555,800,6.59,801,3.008,802,3.008,803,4.196,804,4.196,805,5.065,806,2.77,807,3.008,808,2.452,809,2.593,810,2.593,811,3.008,812,2.77,813,2.593,814,5.498,815,2.77,816,2.54,817,4.555,818,3.008,819,2.593,820,2.334,821,2.233,822,4.555,823,2.77,824,2.233,825,2.593,826,4.196,827,4.555,828,3.008,829,3.008,830,4.555,831,3.008,832,2.77,833,3.008,834,2.77,835,2.593,836,4.555,837,4.555,838,2.593,839,3.008,840,3.008,841,3.008,842,3.008,843,3.008,844,4.555,845,3.008,846,2.77,847,4.555,848,3.008,849,2.145,850,2.593,851,3.008,852,3.008,853,3.008,854,3.008,855,2.452,856,2.77,857,2.77,858,3.008,859,4.555,860,2.77,861,2.77,862,5.498,863,2.77,864,2.77,865,3.008,2666,3.008,2918,5.101,2919,5.101,2920,5.101,2921,3.368,2922,3.368,2923,3.368,2924,3.368]],["title/classes/OrigDatablock.html",[63,0.168,889,3.066]],["body/classes/OrigDatablock.html",[3,0.035,4,0.035,5,0.071,7,1.866,12,2.433,14,2.499,16,2.9,17,2.868,18,1.469,20,0.363,27,0.839,30,1.822,32,1.414,33,0.006,36,0.827,40,0.55,41,0.827,51,3.664,53,0.151,62,0.079,63,0.119,65,2.778,73,0.54,79,1.9,91,0.003,92,0.003,119,2.072,134,0.631,146,1.846,152,0.671,212,0.818,242,1.295,284,2.017,285,2.227,307,1.789,308,3.556,323,2.439,346,1.973,359,4.785,360,0.907,361,1.89,363,3.087,367,2.382,368,2.939,369,2.778,370,3.011,371,2.701,372,1.894,374,3.022,378,2.796,380,2.81,382,2.844,397,1.475,398,2.951,399,2.951,400,2.727,401,2.562,402,2.562,403,3.049,404,3.674,405,3.277,406,2.09,407,1.894,408,2.17,409,2.63,410,2.17,411,2.259,412,2.17,413,2.17,414,2.259,415,2.019,416,2.17,417,2.09,418,2.17,419,1.894,420,2.09,421,2.17,422,2.259,423,3.461,424,2.052,425,2.277,426,3.841,427,3.841,428,3.962,429,3.049,430,3.962,431,2.09,432,1.789,433,1.894,434,1.615,435,0.77,436,2.562,437,1.741,438,1.508,439,2.019,440,1.84,441,2.778,442,1.954,443,1.13,444,1.414,445,1.894,446,1.789,447,1.954,448,2.019,449,2.019,450,3.049,451,3.049,452,2.09,453,2.63,454,2.63,455,2.09,456,2.09,457,2.991,458,2.177,459,1.358,460,2.377,461,1.386,462,2.259,463,2.019,464,3.448,465,1.954,467,1.654,468,1.741,469,1.741,486,2.012,879,2.778,889,4.399,927,2.48,1028,2.727,1040,4.774,1041,4.238,1043,3.282,1045,1.741,1055,3.566,1058,2.861,1061,4.297,1066,3.962,1069,3.746,1070,3.746,1071,2.951,1190,2.861,1191,3.412,1192,4.233,1202,3.042,1203,2.48,1204,2.802,1248,3.962,1455,4.233,1474,4.595,1475,4.595,1476,4.595,1477,4.595,1478,3.042,1481,3.042,1483,3.042,1492,3.042,1930,1.615,2925,3.042,2926,3.407,2927,3.407,2928,5.145,2929,3.407,2930,3.407,2931,3.407,2932,3.407,2933,2.623,2934,3.042,2935,3.407,2936,3.407]],["title/controllers/OrigDatablocksController.html",[138,2.179,2937,3.96]],["body/controllers/OrigDatablocksController.html",[3,0.017,4,0.017,5,0.017,12,2.468,20,0.088,21,0.671,22,2.504,25,0.484,27,0.78,33,0.006,36,0.655,38,1.837,39,1.242,40,0.543,41,0.849,46,4.581,47,1.895,48,2.411,53,0.165,56,0.304,62,0.021,63,0.133,64,1.025,70,0.809,73,1.251,77,2.402,79,0.616,84,1.678,91,0.002,92,0.002,119,0.5,126,3.07,138,0.755,140,0.693,142,0.876,146,1.416,151,0.928,152,0.329,155,1.91,156,1.215,157,1.157,283,0.989,284,1.526,285,1.962,294,2.055,295,2.879,323,1.365,324,3.868,328,0.679,346,0.64,361,1.158,363,1.434,364,3.244,367,0.773,378,2.291,380,2.691,397,1.247,425,1.275,443,2.693,446,2.374,453,3.231,483,0.707,486,1.486,490,1.505,491,1.399,502,0.876,505,2.258,517,0.755,519,0.81,525,0.81,555,2.097,559,1.107,575,5.289,586,1.512,595,1.024,596,2.42,597,1.285,603,1.767,604,3.719,605,4.355,606,4.145,623,4.063,651,1.995,656,2.226,685,0.739,686,0.723,716,2.369,728,3.148,756,1.512,816,0.831,879,4.486,889,6.027,905,0.957,908,3.82,914,2.679,924,2.097,951,1.719,952,3.424,1019,0.693,1034,0.928,1041,1.024,1043,1.275,1051,2.097,1058,1.602,1066,6.521,1071,1.652,1082,1.652,1101,4.915,1102,2.218,1174,2.774,1196,4.816,1250,4.868,1288,1.285,1348,3.554,1349,4.602,1388,3.719,1537,2.331,1566,2.633,1567,2.519,1581,1.759,1586,2.097,1591,2.097,1597,1.157,1600,3.572,1614,0.876,1622,1.107,1638,2.572,1639,2.625,1652,1.512,1680,1.91,1681,2.097,1688,3.719,1721,3.326,1736,4.197,1799,3.319,1809,3.291,1815,1.996,1816,1.996,1817,1.215,1818,1.996,1819,1.285,1878,5.646,1880,4.038,1884,2.572,1893,1.215,1908,3.148,1911,3.511,1930,2.143,1942,1.285,1972,2.097,1978,1.373,1991,4.038,1995,1.91,2009,4.213,2014,1.063,2015,1.215,2016,2.774,2024,3.481,2025,2.369,2026,1.49,2027,5.289,2028,1.49,2029,3.481,2031,1.215,2034,1.215,2038,2.998,2039,1.107,2042,1.215,2046,4.063,2047,0.989,2048,1.063,2049,1.063,2050,1.063,2051,1.024,2052,1.063,2055,2.572,2056,2.572,2059,4.213,2060,4.386,2070,1.373,2072,1.373,2076,1.373,2083,1.49,2087,1.157,2091,1.215,2196,1.49,2198,1.49,2215,2.633,2251,2.097,2253,1.49,2300,4.063,2303,1.49,2304,5.646,2305,4.038,2306,2.572,2308,1.49,2309,2.572,2313,1.285,2319,1.285,2396,1.49,2469,1.373,2513,1.373,2596,2.572,2622,4.984,2933,1.285,2937,2.369,2938,1.669,2939,3.8,2940,3.8,2941,3.8,2942,2.88,2943,1.49,2944,1.669,2945,3.719,2946,2.369,2947,2.572,2948,1.669,2949,1.669,2950,2.572,2951,2.88,2952,2.88,2953,1.669,2954,1.669,2955,4.606,2956,1.669,2957,1.669,2958,5.581,2959,3.393,2960,2.572,2961,1.669,2962,1.669,2963,1.669,2964,1.669,2965,1.669,2966,1.669,2967,4.038,2968,4.038,2969,3.719,2970,3.719,2971,4.521,2972,4.521,2973,4.521,2974,3.719,2975,2.88,2976,4.521,2977,4.521,2978,1.669,2979,1.669,2980,1.669,2981,1.669,2982,1.669,2983,1.669,2984,4.521,2985,4.557,2986,1.669,2987,1.669,2988,4.038,2989,4.521,2990,1.669,2991,3.8,2992,1.669,2993,2.88,2994,1.669,2995,5.093,2996,1.669,2997,1.669,2998,1.669,2999,1.669,3000,2.88,3001,1.669,3002,1.669,3003,1.49,3004,4.038,3005,1.373,3006,1.49,3007,2.88,3008,1.669,3009,1.215,3010,1.669,3011,1.669,3012,1.285,3013,1.669,3014,1.669,3015,1.669,3016,2.88,3017,2.88,3018,1.669,3019,2.88,3020,1.669,3021,1.669,3022,1.669,3023,3.8,3024,2.88,3025,1.669,3026,2.88,3027,2.88,3028,1.669,3029,1.49,3030,1.49,3031,1.669,3032,1.669,3033,1.669,3034,1.669,3035,2.88,3036,1.669,3037,1.669,3038,1.669,3039,1.669,3040,1.669,3041,1.669,3042,1.669,3043,1.669,3044,1.669,3045,1.669,3046,1.669,3047,1.669,3048,1.669,3049,1.669,3050,2.88,3051,1.669,3052,3.8,3053,1.373,3054,1.669,3055,1.49,3056,1.669,3057,2.88,3058,1.49,3059,1.669]],["title/modules/OrigDatablocksModule.html",[165,1.57,202,3.192]],["body/modules/OrigDatablocksModule.html",[3,0.064,4,0.064,5,0.064,33,0.006,39,0.943,53,0.195,56,1.139,62,0.079,63,0.218,91,0.005,92,0.005,96,3.707,140,3.252,165,2.791,167,2.763,168,2.763,169,2.891,170,2.891,171,2.826,172,3.963,176,3.627,177,2.763,178,2.593,181,3.109,197,4.493,202,6.476,211,3.372,212,1.5,458,1.968,665,4.368,685,2.763,686,2.704,889,3.976,1502,4.327,1540,6.032,2215,6.89,2326,4.327,2934,6.996,2937,7.041,3003,5.576,3005,5.136,3060,5.576,3061,5.576,3062,5.576,3063,6.244,3064,6.244,3065,6.244]],["title/injectables/OrigDatablocksService.html",[0,0.716,2215,3.336]],["body/injectables/OrigDatablocksService.html",[0,0.783,2,1.037,3,0.036,4,0.036,5,0.036,20,0.185,21,1.227,22,2.684,25,1.529,27,0.538,33,0.006,36,0.795,38,2.036,39,1.3,40,0.491,41,1.03,47,1.991,48,2.712,53,0.184,56,0.641,62,0.045,63,0.123,64,1.875,73,1.481,77,1.229,84,1.788,91,0.003,92,0.003,161,1.59,212,0.844,222,1.897,283,2.082,284,0.735,294,1.809,303,1.845,315,2.744,361,1.606,363,2.623,380,2.854,435,0.794,443,1.747,444,2.913,486,1.374,490,1.864,491,3.068,492,2.994,494,2.33,496,3.227,502,1.845,503,3.431,505,3.989,506,1.845,514,3.354,515,1.707,516,1.845,517,1.59,519,1.707,520,1.75,521,1.954,522,1.845,523,2.238,524,2.238,525,1.707,526,2.435,528,2.238,530,3.354,537,2.015,586,2.765,733,3.138,889,4.023,951,2.859,1041,2.156,1043,1.555,1101,5.468,1102,4.055,1512,3.354,1514,2.238,1518,3.492,1566,4.378,1567,4.188,1581,3.788,1597,2.435,1598,3.684,1600,2.844,1601,2.558,1613,3.834,1614,1.845,1615,4.055,1616,4.599,1618,2.33,1634,2.33,1635,2.238,1636,4.332,1637,4.023,1638,1.43,1639,1.459,1640,2.156,1641,3.492,1643,2.435,1644,2.238,1645,2.238,1646,2.238,1649,4.599,1651,2.558,1652,2.765,1653,2.706,1654,2.706,1721,1.954,1942,2.706,2215,3.65,2372,4.332,2384,2.706,2933,2.706,2943,3.138,2995,6.3,3005,2.891,3006,3.138,3066,3.514,3067,6.317,3068,3.514,3069,3.514,3070,5.267,3071,3.514,3072,3.514,3073,3.514,3074,7.017,3075,3.514,3076,3.514,3077,3.514,3078,3.514,3079,3.514,3080,3.514,3081,3.514,3082,3.514,3083,3.514,3084,7.89,3085,3.514,3086,3.514,3087,3.514,3088,3.514,3089,3.514,3090,3.514,3091,3.514,3092,3.514,3093,3.514,3094,3.514,3095,3.514,3096,3.514,3097,3.514,3098,3.514,3099,3.514,3100,3.514,3101,3.514,3102,3.514,3103,3.514,3104,3.514]],["title/classes/OwnableClass.html",[63,0.168,359,2.954]],["body/classes/OwnableClass.html",[3,0.044,4,0.044,5,0.044,7,2.785,12,2.416,16,3.582,17,3.685,18,1.729,20,0.443,27,0.839,30,2.026,32,1.765,33,0.006,36,0.802,40,0.539,41,1.01,51,3.476,53,0.144,62,0.054,63,0.149,79,2.604,91,0.004,92,0.004,119,1.815,134,0.787,146,1.79,152,0.837,212,1.022,242,1.524,284,1.858,285,2.194,307,2.232,323,3.641,346,2.704,359,3.715,360,1.031,367,3.264,368,3.342,369,3.269,370,3.424,371,3.179,374,2.931,378,2.52,382,1.631,397,1.841,398,4.406,399,4.406,400,3.301,401,4.043,402,3.825,403,4.552,404,4.811,405,4.892,406,3.715,407,3.367,408,3.856,409,3.603,410,2.708,412,3.856,413,2.708,415,3.588,416,3.856,417,3.715,418,3.856,419,3.367,420,3.715,421,2.708,423,3.685,424,2.414,425,2.679,426,4.272,427,4.272,428,4.406,429,3.588,430,4.98,431,2.609,432,2.232,433,2.365,434,2.016,435,0.961,436,2.117,437,2.173,438,1.882,439,2.52,440,2.296,441,3.269,442,2.439,443,1.411,444,1.765,445,2.365,446,2.232,447,2.439,448,2.52,449,2.52,450,3.588,451,3.588,452,2.609,453,3.094,454,3.094,455,2.609,456,2.609,457,2.946,460,2.342,3105,4.252,3106,4.252,3107,4.252,3108,4.252,3109,4.252,3110,4.252]],["title/classes/OwnableDto.html",[63,0.168,1001,2.954]],["body/classes/OwnableDto.html",[3,0.06,4,0.06,5,0.06,7,3.188,12,2.453,16,2.956,17,3.139,20,0.31,27,0.836,33,0.006,36,0.77,39,1.142,40,0.531,41,1.052,53,0.154,62,0.075,63,0.264,70,2.718,79,3.08,91,0.004,92,0.004,119,1.77,126,3.671,134,1.093,146,1.719,152,1.162,284,1.84,285,2.511,346,3.198,360,1.106,367,3.861,374,2.815,378,2.699,460,2.681,883,3.671,986,5.395,1001,4.638,1002,4.27,1010,3.759,1012,4.814,1013,3.759,1015,4.814,1016,3.914,1018,3.953,1019,2.451,1058,3.282,3111,5.903,3112,5.903,3113,5.903,3114,5.903]],["title/classes/PartialUpdateDatasetDto.html",[63,0.168,1591,3.505]],["body/classes/PartialUpdateDatasetDto.html",[3,0.076,4,0.076,5,0.076,18,2.483,33,0.006,53,0.177,62,0.111,63,0.304,91,0.005,92,0.005,134,1.373,152,1.46,490,2.188,1106,5.399,1579,7.153,1586,5.399,1591,6.33,1622,4.918,3009,5.399,3115,3.79,3116,6.623]],["title/classes/PartialUpdateDerivedDatasetDto.html",[63,0.168,1593,3.96]],["body/classes/PartialUpdateDerivedDatasetDto.html",[3,0.065,4,0.065,5,0.065,18,2.251,27,0.817,33,0.006,53,0.195,62,0.1,63,0.315,70,2.696,91,0.005,92,0.005,134,1.168,152,1.241,357,4.52,361,1.922,368,2.989,369,3.404,370,3.062,371,3.31,486,2.465,490,1.86,876,4.369,879,4.256,880,5.186,889,5.019,890,5.186,1018,4.696,1019,2.618,1034,3.506,1106,4.59,1205,5.186,1588,5.631,1593,6.483,1622,4.18,1623,5.225,1673,5.186,2251,4.59,2955,4.855,3009,4.59,3115,4.028,3117,7.469,3118,8.597,3119,4.855]],["title/classes/PartialUpdateRawDatasetDto.html",[63,0.168,1592,3.96]],["body/classes/PartialUpdateRawDatasetDto.html",[3,0.063,4,0.063,5,0.063,18,2.21,27,0.84,30,1.616,33,0.006,53,0.194,62,0.099,63,0.311,70,2.679,91,0.005,92,0.005,134,1.134,152,1.206,357,4.439,361,1.868,368,2.904,369,3.308,370,2.975,371,3.216,486,2.395,490,1.807,876,4.245,879,4.179,880,5.039,889,4.929,890,5.039,1018,4.768,1019,2.543,1034,3.407,1106,4.46,1205,5.039,1275,5.039,1587,5.471,1592,6.367,1622,4.062,1624,5.132,1673,5.039,2251,4.46,2955,4.717,3009,4.46,3115,3.955,3117,7.427,3119,4.717,3120,8.485,3121,6.126,3122,6.126,3123,6.126,3124,6.126]],["title/controllers/PoliciesController.html",[138,2.179,3125,3.96]],["body/controllers/PoliciesController.html",[3,0.03,4,0.03,5,0.03,12,1.206,20,0.153,21,1.065,22,2.586,25,0.848,27,0.755,29,4.403,30,2.022,33,0.006,36,0.753,38,1.929,39,1.26,40,0.5,41,0.976,46,2.805,47,1.929,48,2.507,53,0.188,56,0.533,62,0.037,63,0.102,64,1.628,70,0.821,73,1.292,79,1.079,84,1.861,91,0.003,92,0.003,138,1.322,140,1.213,142,1.534,146,1.58,151,1.624,152,0.575,242,1.151,245,1.265,283,1.731,284,0.611,285,1.306,294,1.004,328,1.188,346,1.12,354,1.624,361,1.717,364,3.012,378,1.327,432,1.534,435,0.66,447,1.675,490,1.349,491,2.735,492,2.167,496,3.313,503,1.628,505,2.82,515,1.419,517,1.322,519,2.22,520,2.805,521,1.624,522,1.534,525,1.419,562,2.469,586,2.4,595,1.792,596,3.587,597,2.249,603,2.805,656,1.165,665,2.608,685,1.293,686,1.265,731,2.249,816,1.455,870,1.937,891,5.118,905,1.675,908,4.411,914,1.731,942,5.03,949,4.083,951,2.549,965,1.675,1157,1.86,1174,1.792,1206,5.339,1549,3.734,1562,2.805,1581,3.862,1600,3.44,1614,1.534,1626,1.937,1680,1.937,1795,3.761,1799,3.345,1815,2.024,1816,2.024,1818,2.024,1819,2.249,1888,2.403,1944,2.249,1946,2.127,1947,2.249,2009,4.881,2013,2.403,2014,2.911,2015,3.328,2016,2.805,2019,2.403,2027,3.52,2031,2.127,2032,2.403,2034,2.127,2038,3.031,2039,1.937,2040,2.127,2041,3.52,2042,2.127,2046,3.328,2047,1.731,2048,1.86,2049,1.86,2050,1.86,2051,1.792,2052,1.86,2057,4.083,2059,4.881,2060,5.082,2068,3.761,2082,2.403,2086,2.403,2087,2.024,2090,2.403,2091,2.127,2194,2.403,2204,2.609,2279,2.249,2300,4.1,2311,2.403,2313,3.52,2319,2.249,2470,2.609,2970,2.403,3012,2.249,3030,2.609,3125,3.761,3126,2.921,3127,5.632,3128,5.632,3129,4.083,3130,2.609,3131,2.921,3132,2.921,3133,2.609,3134,2.921,3135,2.921,3136,7.664,3137,4.572,3138,2.921,3139,2.921,3140,2.921,3141,2.921,3142,2.921,3143,5.775,3144,2.921,3145,2.921,3146,6.916,3147,2.921,3148,2.921,3149,6.033,3150,2.921,3151,2.921,3152,2.609,3153,4.337,3154,2.403,3155,2.921,3156,2.921,3157,2.921,3158,2.921,3159,2.403,3160,2.249,3161,2.403,3162,2.921,3163,4.572,3164,4.572,3165,4.572,3166,2.249,3167,2.921,3168,2.609,3169,2.921,3170,4.572,3171,2.921,3172,4.572,3173,2.609,3174,4.572,3175,2.921,3176,2.609,3177,4.572,3178,2.921,3179,4.572,3180,2.921,3181,4.572,3182,2.921,3183,2.921,3184,2.921,3185,2.921,3186,2.921,3187,2.921,3188,2.921,3189,2.609,3190,2.921,3191,2.921,3192,2.921,3193,2.921,3194,2.921,3195,2.921,3196,2.921,3197,2.921,3198,2.921,3199,2.921,3200,2.921,3201,2.921]],["title/guards/PoliciesGuard.html",[2047,2.853,3202,4.3]],["body/guards/PoliciesGuard.html",[0,1.085,3,0.057,4,0.057,5,0.057,20,0.294,21,1.7,22,2.247,25,2.117,33,0.006,36,0.75,38,1.922,39,1.227,40,0.464,41,0.972,43,2.933,47,1.726,48,2.117,53,0.182,56,1.019,62,0.071,63,0.195,64,3.181,73,1.416,84,1.726,91,0.004,92,0.004,221,7.055,222,3.017,242,1.406,310,2.648,562,3.017,569,5.913,655,4.302,665,4.321,686,2.419,870,6.075,908,4.789,992,4.596,1399,4.521,1402,2.855,1837,3.204,1955,7.084,2047,4.323,2051,3.428,2502,4.596,2514,4.99,2516,4.596,3154,4.596,3176,4.99,3203,4.596,3204,5.587,3205,7.691,3206,7.295,3207,5.587,3208,6.515,3209,5.587,3210,7.295,3211,5.587,3212,8.123,3213,7.295,3214,5.587,3215,5.587,3216,5.587,3217,5.587,3218,5.587,3219,5.587,3220,4.99,3221,5.587,3222,5.587,3223,5.587]],["title/modules/PoliciesModule.html",[165,1.57,203,3.192]],["body/modules/PoliciesModule.html",[3,0.06,4,0.06,5,0.06,33,0.006,39,0.885,53,0.198,56,1.069,62,0.075,63,0.205,91,0.004,92,0.004,96,3.599,115,2.433,140,3.124,165,2.71,167,2.593,168,2.593,169,2.713,170,2.713,171,2.652,172,3.848,176,3.484,177,2.593,178,2.433,181,3.747,193,6.432,197,4.315,203,6.567,207,6.154,211,3.164,212,1.408,216,4.616,458,1.847,665,4.297,685,2.593,686,2.538,891,3.595,1502,4.061,1540,5.793,1549,6.535,1947,4.512,2326,4.061,3125,6.836,3152,5.233,3224,5.233,3225,5.86,3226,5.233,3227,5.233,3228,5.86,3229,5.86,3230,6.719,3231,5.86,3232,5.86,3233,5.86]],["title/injectables/PoliciesService.html",[0,0.716,1549,3.192]],["body/injectables/PoliciesService.html",[0,0.597,2,0.733,3,0.025,4,0.025,5,0.025,20,0.131,21,0.936,22,2.624,25,1.166,27,0.799,33,0.006,36,0.75,38,1.879,39,1.2,40,0.464,41,0.951,47,1.879,48,2.538,53,0.171,55,1.27,56,0.453,62,0.032,63,0.087,64,2.07,73,1.399,74,1.124,77,2.895,79,2.147,81,1.472,84,1.789,91,0.002,92,0.002,111,1.472,112,3.091,115,1.031,161,3.594,212,0.597,222,1.341,242,1.274,245,1.076,284,1.43,285,1.445,294,2.933,303,1.304,310,1.178,315,2.496,328,1.011,342,2.402,346,3.115,348,3.855,353,3.855,354,3.799,356,2.044,361,1.225,364,1.484,382,2.23,397,1.74,400,2.232,401,1.237,435,0.561,444,2.414,483,1.053,490,1.493,491,1.952,492,1.905,496,2.966,502,2.11,503,3.04,505,2.825,506,2.11,511,1.808,515,1.206,516,1.304,517,1.124,519,1.206,520,1.237,521,1.381,522,1.304,523,1.582,524,1.582,525,1.206,528,1.582,530,1.582,537,4.124,586,2.11,678,3.775,679,1.647,752,1.913,769,5.234,816,3.851,850,1.913,891,4.744,901,2.814,905,1.425,922,1.913,951,2.631,967,1.808,1077,2.466,1206,5.234,1209,1.913,1210,1.913,1211,2.044,1212,2.044,1213,2.044,1214,2.044,1215,1.913,1216,1.913,1217,5.619,1512,2.559,1514,1.582,1518,3.355,1549,5.127,1559,3.306,1562,4.191,1612,2.925,1626,1.647,1634,1.647,1635,1.582,1638,1.635,1639,1.668,1640,2.466,1643,1.722,1644,1.582,1645,1.582,1646,1.582,1721,2.235,1747,1.722,1764,6.1,1809,2.925,1815,1.722,1816,1.722,1817,1.808,1818,1.722,1819,1.913,1940,1.913,1944,4.476,1946,1.808,1947,1.913,1995,1.647,2066,1.913,2423,2.044,2481,2.219,2508,3.306,2515,2.219,2803,3.589,2946,2.044,2974,2.044,3129,3.589,3130,3.589,3133,2.219,3143,5.782,3153,3.094,3154,2.044,3160,1.913,3234,2.484,3235,5.06,3236,5.619,3237,5.06,3238,5.06,3239,2.484,3240,2.484,3241,5.192,3242,7.733,3243,2.484,3244,2.484,3245,2.484,3246,2.484,3247,2.484,3248,2.484,3249,2.484,3250,2.484,3251,4.019,3252,2.484,3253,5.701,3254,2.484,3255,2.484,3256,2.484,3257,6.831,3258,2.484,3259,2.484,3260,2.219,3261,2.484,3262,4.519,3263,2.219,3264,1.913,3265,2.484,3266,4.019,3267,2.484,3268,2.484,3269,2.484,3270,2.484,3271,2.484,3272,2.484,3273,2.484,3274,4.019,3275,4.019,3276,2.484,3277,3.589,3278,2.484,3279,2.484,3280,2.484,3281,2.484,3282,2.484,3283,4.019,3284,4.019,3285,4.019,3286,2.484,3287,2.484,3288,2.484,3289,2.484,3290,2.484,3291,2.484,3292,2.484,3293,2.484,3294,4.019,3295,2.484,3296,2.219,3297,4.019,3298,4.019,3299,2.484,3300,2.484,3301,2.484,3302,2.484,3303,2.484,3304,4.019,3305,2.484,3306,2.484,3307,5.06,3308,2.484,3309,2.484,3310,2.219,3311,1.808,3312,2.484,3313,2.219,3314,2.484]],["title/classes/Policy.html",[63,0.168,891,2.954]],["body/classes/Policy.html",[3,0.029,4,0.029,5,0.029,7,1.618,12,2.37,16,2.664,17,2.601,18,1.274,20,0.329,27,0.821,30,1.652,32,1.176,33,0.006,36,0.837,38,0.67,40,0.547,41,0.75,51,3.428,53,0.139,62,0.07,63,0.099,65,2.409,73,0.449,79,1.648,91,0.003,92,0.003,119,2.043,127,3.092,134,0.524,146,1.868,152,0.558,212,0.68,242,1.123,284,1.843,285,2.241,307,1.487,323,2.969,342,2.954,346,1.711,359,4.441,360,0.808,361,1.683,367,2.066,368,2.617,369,2.409,370,2.681,371,2.342,374,2.557,378,1.978,380,3.193,382,3.413,397,1.226,398,4.151,399,2.559,400,2.745,401,3.119,402,2.222,403,2.644,404,3.271,405,3.989,406,1.737,407,2.481,408,1.803,409,2.28,410,1.803,411,1.878,412,1.803,413,1.803,414,1.878,415,4.038,416,1.803,417,1.737,418,1.803,419,1.575,420,1.737,421,1.803,422,1.878,423,3.259,424,1.779,425,1.974,426,3.483,427,3.483,428,3.592,429,2.644,430,3.592,431,1.737,432,1.487,433,1.575,434,2.969,435,1.008,436,2.222,437,3.871,438,1.253,439,1.678,440,1.529,441,2.409,442,1.624,443,0.939,444,1.176,445,1.575,446,1.487,447,1.624,448,1.678,449,1.678,450,3.712,451,2.644,452,1.737,453,2.28,454,2.28,455,1.737,456,1.737,457,3.233,458,1.406,459,1.129,460,2.57,461,1.815,462,1.878,463,1.678,464,2.481,465,1.624,467,1.375,468,1.447,469,1.447,651,2.342,727,3.435,756,4.5,885,4.998,891,4.441,1028,2.997,1048,4.441,1091,4.56,1190,3.483,1209,4.25,1210,5.247,1211,4.541,1212,4.541,1213,4.541,1214,4.541,1215,4.25,1216,5.247,1217,4.541,1445,6.043,1559,5.954,1930,1.342,1946,2.061,1999,3.984,2121,7.212,2227,4.823,2412,5.594,2568,3.092,2603,3.67,2626,3.984,2627,3.984,2634,5.954,2648,5.594,3166,4.823,3230,2.529,3310,3.984,3311,3.248,3315,2.529,3316,2.329,3317,2.832,3318,6.263,3319,6.263,3320,2.832,3321,6.263,3322,6.263,3323,4.823,3324,2.832,3325,4.461,3326,2.832,3327,2.832,3328,4.461,3329,4.461,3330,2.832,3331,2.832,3332,3.984,3333,4.461,3334,2.832,3335,2.832,3336,4.461,3337,2.832,3338,2.832,3339,2.832,3340,2.832,3341,3.984,3342,4.461,3343,3.984,3344,6.263,3345,6.263,3346,6.263,3347,4.93,3348,4.461,3349,4.461,3350,2.832,3351,2.832,3352,2.832,3353,2.832,3354,2.832]],["title/classes/ProposalClass.html",[63,0.168,893,3.505]],["body/classes/ProposalClass.html",[3,0.026,4,0.026,5,0.026,7,1.488,12,2.518,14,1.994,16,2.53,17,2.451,18,1.172,20,0.363,27,0.857,30,1.557,32,1.059,33,0.006,36,0.84,39,1.142,40,0.564,41,1.101,51,3.289,53,0.141,62,0.066,63,0.089,68,3.161,69,2.184,73,0.404,79,1.516,91,0.002,92,0.002,119,1.545,134,0.472,136,2.733,142,2.155,146,1.874,152,0.502,212,0.613,242,1.033,284,1.964,285,2.773,307,1.339,323,1.946,332,5.239,334,2.864,336,4.238,338,4.238,340,4.238,342,2.735,343,2.633,344,2.633,346,1.574,357,1.463,359,4.242,360,0.754,361,1.57,367,1.901,368,2.442,369,2.217,370,2.502,371,2.155,372,1.418,374,3.047,378,2.88,382,0.978,397,1.105,398,2.354,399,2.354,400,2.801,401,2.044,402,2.044,403,2.433,404,3.053,405,2.614,406,1.565,407,1.418,408,1.624,409,2.098,410,1.624,411,1.691,412,1.624,413,1.624,414,1.691,415,1.512,416,1.624,417,1.565,418,1.624,419,1.418,420,1.565,421,1.624,422,1.691,423,3.861,424,1.637,425,1.817,426,3.283,427,3.283,428,3.386,429,2.433,430,3.386,431,1.565,432,1.339,433,1.418,434,1.209,435,0.927,436,2.044,437,1.304,438,1.129,439,1.512,440,1.377,441,2.217,442,1.463,443,0.846,444,1.059,445,1.418,446,1.339,447,1.463,448,1.512,449,1.512,450,2.433,451,2.433,452,1.565,453,2.098,454,3.533,455,1.565,456,1.565,457,3.296,458,1.294,459,1.017,460,2.583,461,1.67,462,1.691,467,3.143,468,1.304,469,1.304,471,2.098,486,2.308,876,1.768,883,1.994,893,3.75,952,2.519,1028,1.436,1045,3.017,1046,1.946,1082,2.354,1150,1.964,1179,3.161,1203,1.857,1233,3.75,1234,4.6,1235,3.75,1238,6.174,1243,4.298,1247,4.982,1248,3.161,1249,3.377,1250,3.161,1251,3.666,1254,6.174,1260,2.845,1261,3.666,1262,3.666,1263,3.666,1271,2.278,1274,2.098,1275,4.238,1276,3.053,1277,2.278,1278,2.278,1930,1.209,2861,3.666,3355,2.278,3356,2.551,3357,2.551,3358,2.551,3359,5.151,3360,2.551,3361,2.551,3362,2.551,3363,2.551,3364,2.551,3365,2.551,3366,2.551,3367,5.151,3368,2.551,3369,2.551,3370,2.551,3371,2.551,3372,2.551,3373,2.551,3374,2.551,3375,2.551,3376,2.551,3377,2.098,3378,2.278,3379,2.551,3380,2.551]],["title/modules/ProposalsModule.html",[165,1.57,204,3.192]],["body/modules/ProposalsModule.html",[3,0.059,4,0.059,5,0.059,33,0.006,39,0.868,43,3.017,53,0.194,56,1.048,62,0.073,63,0.201,69,3.149,73,0.911,84,1.221,91,0.004,92,0.004,96,3.565,140,3.085,165,2.685,167,2.543,168,2.543,169,2.66,170,2.66,171,2.6,172,3.812,176,3.44,177,2.543,178,2.386,181,3.699,192,5.665,197,4.261,204,6.479,211,3.103,212,1.38,252,6.517,274,3.405,361,2.265,438,2.543,458,2.342,480,3.982,482,3.982,483,3.149,484,3.525,487,5.148,665,4.275,685,2.543,686,2.488,893,4.183,1157,3.659,1540,5.72,1545,4.424,2326,3.982,3378,6.635,3381,5.131,3382,5.746,3383,5.131,3384,5.131,3385,5.746,3386,8.233,3387,5.746,3388,5.746,3389,5.131,3390,5.746,3391,5.746]],["title/injectables/ProposalsService.html",[0,0.716,252,3.192]],["body/injectables/ProposalsService.html",[0,0.861,2,1.18,3,0.041,4,0.041,5,0.041,20,0.21,21,1.35,22,2.697,25,1.682,33,0.006,36,0.807,38,2.066,39,1.319,40,0.499,41,1.045,47,2.017,48,2.732,53,0.188,56,0.729,62,0.051,63,0.14,64,2.063,69,2.456,73,1.432,77,1.399,84,1.812,91,0.003,92,0.003,161,1.81,212,0.961,222,2.16,249,5.771,251,4.766,252,3.842,284,0.837,294,1.991,303,2.1,315,2.921,349,3.572,435,0.904,443,1.922,444,3.101,490,1.709,491,3.309,492,3.229,494,2.652,496,3.349,502,2.1,503,3.325,505,3.999,506,2.1,514,3.69,515,1.943,516,2.1,517,1.81,519,1.943,520,1.992,521,2.224,522,2.1,523,2.547,524,2.547,525,1.943,526,2.772,528,2.547,530,3.69,537,3.323,586,3.042,893,2.912,951,3.083,1512,3.69,1514,2.547,1518,3.842,1566,4.721,1567,4.517,1581,3.948,1597,2.772,1598,3.922,1600,3.129,1601,2.912,1613,4.218,1614,2.1,1615,3.08,1616,4.218,1618,2.652,1626,2.652,1634,2.652,1635,2.547,1637,2.547,1638,1.627,1639,1.661,1640,2.454,1641,3.842,1643,2.772,1644,2.547,1645,2.547,1646,2.547,1649,2.912,1651,2.912,1652,3.042,1653,3.08,1654,3.08,1941,2.912,2372,4.766,2384,3.08,3377,3.29,3389,3.572,3392,4,3393,4,3394,4,3395,5.794,3396,5.794,3397,4,3398,4,3399,4,3400,4,3401,4,3402,4,3403,7.014,3404,4,3405,4,3406,4,3407,7.47,3408,4,3409,4,3410,4,3411,4,3412,4,3413,4,3414,4,3415,4]],["title/classes/PublishedData.html",[63,0.168,895,3.192]],["body/classes/PublishedData.html",[3,0.023,4,0.023,5,0.023,12,2.562,20,0.245,27,0.861,33,0.006,36,0.834,40,0.569,43,1.917,53,0.11,62,0.059,63,0.077,65,2.926,73,0.35,84,0.776,91,0.002,92,0.002,119,2.4,126,2.632,134,0.409,136,2.778,146,1.862,152,0.435,212,0.531,231,4.527,242,0.919,284,2.011,285,2.731,315,1.428,323,1.731,324,2.53,334,2.398,360,0.534,361,1.423,366,2.972,368,2.212,370,2.266,372,2.031,374,3.03,378,2.899,380,1.898,382,2.079,388,3.261,391,3.004,400,2.593,423,3.727,424,1.456,425,1.616,426,3.014,427,3.014,428,3.108,435,0.499,436,1.1,453,1.866,454,1.866,457,3.485,458,1.151,459,0.881,460,2.754,461,1.486,463,1.309,464,2.595,465,1.267,467,1.773,468,1.129,469,1.129,641,4.739,651,1.16,656,1.861,692,1.465,728,1.818,849,2.325,895,3.593,896,4.77,897,7.474,1028,3.094,1043,1.616,1045,1.866,1046,1.047,1048,1.356,1049,2.325,1071,1.267,1190,2.031,1282,4.458,1283,5.359,1284,5.266,1285,4.167,1286,4.238,1287,4.167,1288,3.593,1289,4.167,1290,3.839,1291,4.458,1292,3.839,1293,4.167,1294,3.094,1295,4.167,1296,4.167,1324,2.658,1623,1.465,1624,2.421,1661,2.812,1804,2.812,1918,1.407,1930,2.212,2000,3.261,2125,2.812,2221,3.261,2405,3.261,3323,2.812,3416,1.973,3417,2.21,3418,2.21,3419,2.21,3420,2.21,3421,2.21,3422,4.666,3423,2.21,3424,3.652,3425,2.21,3426,3.652,3427,2.21,3428,2.21,3429,3.261,3430,3.652,3431,2.21,3432,3.652,3433,2.21,3434,2.21,3435,5.42,3436,4.458,3437,2.21,3438,2.21,3439,2.21,3440,2.21,3441,3.652,3442,2.21,3443,3.652,3444,5.42,3445,2.21,3446,2.21,3447,2.21,3448,2.21,3449,2.21,3450,5.42,3451,3.652,3452,3.652,3453,2.21,3454,2.21,3455,2.21,3456,2.21,3457,3.652,3458,3.652,3459,2.21,3460,2.21,3461,2.21,3462,2.21,3463,3.652,3464,3.652,3465,3.652,3466,2.21,3467,2.21,3468,3.652,3469,3.652,3470,3.652,3471,3.261,3472,3.652,3473,3.652,3474,2.21,3475,2.21,3476,2.21,3477,2.21,3478,2.21,3479,3.261,3480,2.21,3481,2.21,3482,3.652,3483,3.652,3484,1.818,3485,2.21,3486,2.21,3487,2.21,3488,1.973,3489,2.21,3490,2.21]],["title/controllers/PublishedDataController.html",[138,2.179,3491,3.96]],["body/controllers/PublishedDataController.html",[3,0.017,4,0.017,5,0.017,12,2.02,14,1.416,15,2.398,20,0.089,21,0.679,22,2.436,25,0.491,27,0.77,29,2.465,33,0.006,35,3.159,36,0.615,38,1.575,39,1.157,40,0.471,41,0.797,43,0.889,46,1.789,47,1.775,48,2.301,53,0.174,56,0.309,59,1.173,60,4.233,61,0.889,62,0.022,63,0.059,64,2.145,69,1.935,70,1.581,73,1.438,77,2.678,84,1.685,87,3.963,91,0.003,92,0.002,112,1.738,115,0.703,119,0.508,136,1.35,138,0.766,140,0.703,142,1.531,146,1.372,151,0.941,152,0.333,155,3.026,156,1.232,157,1.173,161,1.738,231,4.766,232,5.03,252,2.546,283,2.705,284,1.077,285,1.721,294,1.932,295,1.857,305,2.398,315,2.012,317,2.779,325,2.398,328,1.186,332,2.661,334,1.29,343,1.963,344,1.963,348,4.22,353,4.22,354,3.539,357,1.672,361,0.516,363,0.843,364,3.189,378,1.847,380,2.094,390,1.303,400,3.08,423,0.703,435,0.382,443,1.514,476,2.796,483,0.717,486,2.602,490,1.133,491,1.865,492,1.382,502,0.889,503,1.367,505,3.243,517,0.766,519,0.822,525,0.822,542,3.755,555,2.122,569,4.845,586,1.531,595,1.038,596,4.053,603,1.789,605,2.122,606,2.02,623,1.232,632,5.684,641,2.02,656,1.531,685,0.749,686,0.733,745,1.303,747,4.627,816,2.563,881,1.078,882,1.173,895,5.528,896,3.627,898,1.078,905,0.971,908,3.35,914,1.728,951,1.738,965,0.971,1028,1.019,1082,1.672,1196,3.323,1279,4.386,1282,2.398,1284,1.303,1286,4.538,1290,2.398,1291,2.398,1292,1.392,1294,1.933,1327,1.392,1537,2.356,1562,3.158,1576,1.392,1600,2.465,1612,2.122,1637,1.078,1638,0.689,1639,0.703,1660,4.627,1680,1.933,1744,2.603,1747,1.173,1789,1.511,1791,1.511,1799,1.531,1804,1.303,1805,1.511,1815,2.02,1816,2.02,1817,1.232,1818,2.02,1893,1.232,1908,0.843,1911,3.079,1915,1.122,1918,1.078,1919,1.122,1920,3.026,1921,2.02,1922,1.173,2009,3.582,2014,3.582,2015,4.095,2016,3.451,2029,3.514,2031,1.232,2034,1.232,2038,3.729,2039,1.122,2040,1.232,2041,3.963,2042,1.232,2046,3.746,2047,1.003,2048,1.078,2049,1.078,2050,1.078,2051,1.038,2052,1.078,2059,3.582,2060,3.729,2087,2.02,2091,1.232,2125,1.303,2128,1.392,2194,1.392,2300,1.232,2311,1.392,2313,2.957,2319,1.303,2368,1.511,2369,1.392,2379,2.603,2469,1.392,2492,4.076,2513,1.392,2572,1.392,2585,1.511,2607,4.076,2749,1.511,2760,3.429,2761,1.511,2848,3.159,2959,1.511,2960,1.511,3004,2.603,3012,1.303,3029,1.511,3053,1.392,3055,1.511,3058,1.511,3189,1.511,3484,1.392,3491,2.398,3492,1.511,3493,2.915,3494,2.915,3495,3.84,3496,1.692,3497,1.692,3498,1.511,3499,1.692,3500,1.692,3501,1.692,3502,1.692,3503,1.692,3504,1.692,3505,1.692,3506,1.692,3507,1.692,3508,2.398,3509,1.692,3510,1.692,3511,1.692,3512,1.692,3513,1.692,3514,1.692,3515,1.692,3516,5.491,3517,1.692,3518,1.692,3519,1.692,3520,1.692,3521,2.796,3522,1.511,3523,2.398,3524,1.511,3525,1.511,3526,1.392,3527,1.692,3528,1.511,3529,1.692,3530,1.692,3531,1.692,3532,1.692,3533,1.692,3534,1.692,3535,1.692,3536,1.692,3537,2.915,3538,1.511,3539,1.692,3540,1.692,3541,2.915,3542,2.915,3543,1.692,3544,2.915,3545,1.692,3546,3.84,3547,2.915,3548,1.692,3549,1.692,3550,3.84,3551,1.692,3552,1.692,3553,1.692,3554,2.915,3555,2.915,3556,1.692,3557,1.692,3558,1.692,3559,1.692,3560,2.915,3561,1.692,3562,1.692,3563,1.692,3564,1.692,3565,1.692,3566,1.692,3567,1.692,3568,1.692,3569,1.692,3570,1.692,3571,1.692,3572,3.84,3573,2.915,3574,2.915,3575,5.146,3576,1.692,3577,1.692,3578,1.692,3579,1.692,3580,1.692,3581,2.915,3582,1.692,3583,1.692,3584,2.915,3585,2.603,3586,1.692,3587,1.511,3588,1.692,3589,5.146,3590,2.915,3591,1.692,3592,1.692,3593,4.564,3594,3.84,3595,6.364,3596,1.692,3597,1.692,3598,2.915,3599,1.692,3600,1.692,3601,2.915,3602,1.692,3603,1.692,3604,2.915,3605,2.915,3606,1.692,3607,1.692,3608,1.692,3609,1.692,3610,1.692,3611,1.692,3612,2.915,3613,2.915,3614,1.692,3615,1.511,3616,1.692,3617,1.692,3618,1.692,3619,4.564,3620,3.84,3621,3.84,3622,3.84,3623,3.84,3624,3.84,3625,4.564,3626,1.692,3627,2.915,3628,2.915,3629,2.915,3630,2.915,3631,2.603,3632,1.511,3633,1.692,3634,1.692,3635,1.692,3636,1.692,3637,1.692,3638,2.915,3639,1.692,3640,1.692,3641,1.692,3642,1.692,3643,1.511,3644,1.692,3645,1.692,3646,1.692,3647,1.692,3648,1.692,3649,1.692,3650,1.692]],["title/modules/PublishedDataModule.html",[165,1.57,205,3.505]],["body/modules/PublishedDataModule.html",[3,0.055,4,0.055,5,0.055,22,1.484,33,0.006,39,0.811,43,2.817,53,0.197,56,0.978,59,3.718,62,0.068,63,0.187,73,0.85,84,1.14,91,0.004,92,0.004,96,3.448,112,3.836,115,2.228,140,2.949,165,2.597,167,2.374,168,2.374,169,2.484,170,2.484,171,2.428,172,2.484,176,3.289,177,2.374,178,2.228,181,3.965,192,5.559,197,5.197,204,6.007,205,7.159,211,2.897,212,1.289,216,4.886,231,4.209,232,3.906,274,4.209,303,2.817,361,2.165,438,2.374,458,2.239,480,3.718,482,3.718,483,3.011,484,3.292,487,4.923,665,4.195,685,2.374,686,2.323,895,3.557,896,2.817,898,3.417,1157,3.417,1286,4.209,1545,4.131,1919,3.557,2326,3.718,2729,4.791,2730,4.791,2731,4.791,2732,4.413,2733,4.791,2734,4.791,2735,4.791,3488,6.344,3491,6.551,3521,6.596,3522,4.791,3651,4.791,3652,5.365,3653,4.791,3654,5.365,3655,5.365,3656,5.365,3657,5.365]],["title/injectables/PublishedDataService.html",[0,0.716,3521,3.505]],["body/injectables/PublishedDataService.html",[0,0.88,2,1.216,3,0.042,4,0.042,5,0.042,20,0.217,21,1.38,22,2.676,25,1.719,33,0.006,36,0.795,38,2.036,39,1.3,40,0.491,41,1.03,47,1.976,48,2.701,53,0.188,56,0.752,62,0.052,63,0.144,64,2.108,73,1.421,77,1.441,84,1.775,91,0.003,92,0.003,212,0.99,222,2.226,231,3.509,232,6.409,284,0.863,294,2.034,303,2.164,315,2.962,435,0.931,443,1.964,444,3.145,490,2.044,491,2.876,492,3.285,494,2.733,496,3.376,502,3.109,503,3.445,505,3.896,506,2.164,514,3.771,515,2.002,516,2.164,517,1.865,519,2.002,520,2.053,521,2.292,522,2.164,523,3.771,524,2.625,525,2.002,526,2.857,528,2.625,530,3.771,537,3.396,586,3.109,895,2.733,896,4.622,898,2.625,951,3.136,1279,6.263,1286,2.443,1512,3.771,1514,2.625,1518,3.926,1562,4.647,1576,4.871,1616,4.311,1618,2.733,1634,3.926,1635,2.625,1637,2.625,1638,1.677,1639,1.712,1640,2.529,1641,2.733,1644,2.625,1645,2.625,1646,2.625,1648,3.681,1650,3.681,1915,2.733,1918,2.625,1919,2.733,1920,5.022,3498,3.681,3516,6.625,3521,4.311,3523,4.871,3524,3.681,3525,3.681,3658,4.122,3659,4.122,3660,4.122,3661,5.921,3662,4.122,3663,4.122,3664,4.122,3665,4.122,3666,4.122,3667,4.122,3668,4.122,3669,4.122,3670,7.574,3671,4.122,3672,4.122,3673,4.122,3674,4.122,3675,4.122]],["title/classes/QueryableClass.html",[63,0.168,430,2.761]],["body/classes/QueryableClass.html",[3,0.05,4,0.05,5,0.05,12,2.42,20,0.398,27,0.816,30,2.42,32,2.759,33,0.006,36,0.752,40,0.547,53,0.135,62,0.062,63,0.17,91,0.004,92,0.004,134,0.9,146,1.678,152,0.957,212,1.167,242,2.049,284,1.92,307,3.488,360,1.191,368,4.041,369,4.089,370,4.14,371,3.976,374,2.748,378,2.555,404,3.937,409,3.396,423,4.067,424,3.246,425,3.603,426,5.102,427,5.102,428,5.262,429,3.937,430,3.811,432,3.488,433,3.695,434,3.149,435,1.839,436,3.309,437,3.396,438,2.94,439,3.937,440,3.588,441,4.396,442,3.811,443,2.204,444,2.759,445,3.695,446,3.488,447,3.811,448,3.937,449,3.937,450,4.824,451,3.937,453,4.16,454,4.16,457,3.27,460,2.599,1049,4.231,3676,4.858,3677,4.858,3678,4.858,3679,4.858,3680,4.858]],["title/injectables/RegisteredInterceptor.html",[0,0.716,3526,3.96]],["body/injectables/RegisteredInterceptor.html",[0,1.194,2,1.916,3,0.067,4,0.067,5,0.067,20,0.341,21,1.87,33,0.006,36,0.6,38,1.537,39,0.981,40,0.371,41,0.777,47,1.537,53,0.163,56,1.184,61,3.41,62,0.083,63,0.227,73,1.029,84,1.38,91,0.005,92,0.005,242,2.02,310,3.078,443,2.89,483,3.694,656,3.201,896,4.215,1395,4.604,1398,4.757,1399,4.779,1400,5.394,1402,3.319,1403,4.757,1404,5.163,1841,4.306,3484,6.604,3526,6.604,3681,6.495,3682,6.495,3683,6.495,3684,8.713,3685,6.495,3686,6.495,3687,6.495]],["title/classes/RelationshipClass.html",[63,0.168,3688,3.96]],["body/classes/RelationshipClass.html",[3,0.062,4,0.062,5,0.062,12,2.345,20,0.319,27,0.844,33,0.006,36,0.712,40,0.544,53,0.172,62,0.108,63,0.212,73,0.964,91,0.005,92,0.005,134,1.126,146,1.588,152,1.197,212,1.461,284,2.016,323,2.882,360,1.127,374,2.6,378,2.795,380,3.44,435,1.374,457,3.243,458,2.428,459,2.425,460,2.578,461,3.134,486,3.306,1046,3.651,1065,4.906,1323,8.191,1324,6.471,1327,6.337,2599,5.43,3688,6.955,3689,5.43,3690,6.08,3691,6.08,3692,6.08,3693,5.43,3694,6.08,3695,6.08]],["title/classes/Role.html",[63,0.168,877,2.6]],["body/classes/Role.html",[3,0.057,4,0.057,5,0.057,12,2.416,20,0.293,27,0.806,33,0.006,36,0.795,39,1.349,40,0.556,53,0.165,62,0.103,63,0.195,73,0.884,91,0.004,92,0.004,134,1.033,146,1.673,152,1.098,212,1.34,284,1.699,360,1.066,361,2.474,368,2.644,370,2.709,374,2.74,423,4.134,425,4.053,433,4.786,434,4.079,435,1.834,436,2.777,454,3.724,457,3.301,458,2.297,459,2.224,460,2.624,461,2.965,467,2.709,468,2.85,469,2.85,877,5.167,1045,3.724,1681,6.667,3696,4.981,3697,5.577,3698,7.287,3699,5.577,3700,5.577,3701,5.577,3702,5.577,3703,4.588,3704,4.981,3705,5.577]],["title/guards/RolesGuard.html",[3202,4.3,3706,4.3]],["body/guards/RolesGuard.html",[0,1.183,3,0.066,4,0.066,5,0.066,20,0.336,21,1.854,25,1.859,33,0.006,36,0.735,38,1.883,39,1.202,40,0.455,41,0.952,47,1.515,53,0.184,56,1.168,62,0.082,63,0.224,73,1.261,84,1.691,91,0.005,92,0.005,101,3.363,221,7.31,222,3.458,242,1.612,284,1.341,310,3.036,756,4.178,877,3.458,1399,4.755,1402,3.273,1837,3.673,2502,5.268,2516,5.268,3203,5.268,3205,8.089,3208,7.107,3706,7.107,3707,6.405,3708,6.405,3709,6.405,3710,6.405,3711,6.405,3712,6.405,3713,7.959,3714,6.405,3715,6.405,3716,6.405,3717,6.405]],["title/injectables/RolesService.html",[0,0.716,2518,3.192]],["body/injectables/RolesService.html",[0,0.801,2,1.069,3,0.037,4,0.037,5,0.037,20,0.19,21,1.256,22,2.753,25,1.564,33,0.006,36,0.838,38,2.12,39,1.398,40,0.512,41,1.072,47,2.12,48,2.785,53,0.168,55,1.852,56,0.661,62,0.046,63,0.127,64,1.919,73,1.375,74,2.439,77,3.172,81,2.148,84,1.928,91,0.003,92,0.003,212,0.871,242,1.356,284,1.128,285,1.539,294,1.851,310,1.718,361,1.105,435,0.819,444,3.432,490,1.898,492,2.555,503,3.417,505,3.908,506,2.829,516,1.903,517,2.439,855,3.923,877,4.112,1330,6.799,1376,2.403,1379,6.9,1380,4.15,1747,2.511,2419,3.236,2518,4.724,2671,5.187,2672,2.981,2674,3.236,3236,6.565,3703,2.981,3718,3.624,3719,5.746,3720,6.434,3721,6.434,3722,4.813,3723,6.434,3724,7.125,3725,7.615,3726,3.624,3727,6.434,3728,3.624,3729,5.389,3730,5.389,3731,3.624,3732,3.624,3733,3.624,3734,5.389,3735,3.624,3736,3.624,3737,3.624,3738,3.624,3739,3.624,3740,3.624,3741,5.389,3742,3.624,3743,3.624,3744,3.624,3745,3.624,3746,5.389,3747,3.624,3748,3.624,3749,3.624,3750,4.813,3751,3.236,3752,2.981,3753,3.624,3754,3.624,3755,3.236,3756,2.981,3757,3.624,3758,3.624,3759,3.624,3760,3.624,3761,6.434,3762,3.236,3763,3.624,3764,3.624,3765,3.624,3766,3.624,3767,3.624,3768,5.389,3769,5.389,3770,3.624,3771,3.624,3772,3.624,3773,3.624,3774,3.624,3775,3.624,3776,3.624,3777,3.624,3778,5.389,3779,3.624,3780,3.624,3781,3.624]],["title/classes/SampleClass.html",[63,0.168,899,3.336]],["body/classes/SampleClass.html",[3,0.031,4,0.031,5,0.031,7,1.712,12,2.515,16,2.757,17,2.705,18,1.652,20,0.342,27,0.837,30,1.968,32,1.264,33,0.006,36,0.817,40,0.553,41,1.044,51,3.522,53,0.159,62,0.083,63,0.165,73,0.483,79,1.744,91,0.003,92,0.003,119,1.954,134,0.564,146,1.822,152,0.6,212,0.732,242,1.188,284,1.936,285,2.723,295,3.007,307,1.599,308,2.708,323,2.238,346,1.811,357,3.317,359,4.577,360,0.846,361,1.763,365,3.834,367,2.186,368,2.741,369,2.549,370,2.808,371,2.479,372,1.693,374,2.945,378,2.796,382,3.391,386,5.723,397,2.504,398,2.708,399,2.708,400,2.813,401,2.351,402,2.351,403,2.798,404,3.427,405,3.007,406,1.868,407,1.693,408,1.939,409,2.955,410,1.939,411,2.019,412,1.939,413,1.939,414,2.019,415,1.804,416,1.939,417,1.868,418,1.939,419,1.693,420,1.868,421,1.939,422,2.019,423,3.34,424,1.883,425,2.089,426,4.149,427,3.623,428,3.737,429,2.798,430,3.737,431,1.868,432,1.599,433,1.693,434,1.443,435,1.067,436,2.351,437,2.955,438,1.347,439,1.804,440,1.644,441,2.549,442,1.746,443,1.01,444,2.401,445,1.693,446,1.599,447,1.746,448,1.804,449,1.804,450,2.798,451,3.427,452,1.868,453,2.413,454,2.413,455,1.868,456,1.868,457,2.985,458,1.488,459,1.214,460,2.573,461,1.921,462,2.019,463,1.804,464,3.216,465,1.746,467,1.479,468,1.556,469,1.556,651,2.479,728,3.715,756,3.917,876,2.11,881,3.683,882,2.11,899,4.515,965,3.317,1045,3.33,1046,2.238,1049,1.939,1082,2.708,1190,2.626,1191,3.131,1197,5.133,1260,3.272,1324,3.437,1336,4.453,1339,3.636,1340,3.636,1344,3.437,1345,3.437,1348,3.007,1349,3.437,1350,3.884,1353,1.868,1930,1.443,1987,2.505,2014,3.007,3119,3.636,3160,3.636,3782,2.505,3783,3.045,3784,4.217,3785,3.045,3786,2.719,3787,3.045,3788,3.045,3789,3.045,3790,3.045,3791,2.344,3792,2.505,3793,2.719,3794,2.719,3795,2.719,3796,2.719,3797,2.505,3798,2.719,3799,2.719]],["title/classes/SampleWithAttachmentsAndDatasets.html",[63,0.168,3792,3.96]],["body/classes/SampleWithAttachmentsAndDatasets.html",[3,0.03,4,0.03,5,0.03,7,1.647,12,2.517,16,2.694,17,2.634,18,1.6,20,0.333,27,0.833,30,1.928,32,1.203,33,0.006,36,0.826,40,0.553,41,1.08,51,3.956,53,0.156,62,0.081,63,0.159,73,0.459,79,1.678,91,0.003,92,0.003,119,1.902,134,0.537,146,1.843,152,0.571,212,0.696,242,1.143,284,1.944,285,2.726,295,2.893,307,1.521,308,2.605,323,2.153,346,1.742,357,3.951,359,4.227,360,0.82,361,1.708,365,3.715,367,2.103,368,2.656,369,2.453,370,2.721,371,2.385,372,1.611,374,2.987,378,2.797,382,3.353,386,5.878,397,2.426,398,2.605,399,2.605,400,2.766,401,2.262,402,2.262,403,2.692,404,3.32,405,2.893,406,1.778,407,1.611,408,1.845,409,2.863,410,1.845,411,1.921,412,1.845,413,1.845,414,1.921,415,1.717,416,1.845,417,1.778,418,1.845,419,1.611,420,1.778,421,1.845,422,1.921,423,3.285,424,1.811,425,2.01,426,4.064,427,3.527,428,3.638,429,2.692,430,3.638,431,1.778,432,1.521,433,1.611,434,1.374,435,1.026,436,2.262,437,2.863,438,1.282,439,1.717,440,1.565,441,2.453,442,1.662,443,0.961,444,2.326,445,1.611,446,1.521,447,1.662,448,1.717,449,1.717,450,2.692,451,3.32,452,1.778,453,2.322,454,2.322,455,1.778,456,1.778,457,2.931,458,1.432,459,1.156,460,2.537,461,1.848,462,1.921,463,1.717,464,3.116,465,1.662,467,1.407,468,1.481,469,1.481,651,3.617,728,3.639,756,3.837,876,2.008,881,4.387,882,2.008,899,5.767,965,3.214,1045,3.242,1046,2.153,1049,1.845,1082,3.638,1190,2.526,1191,3.012,1197,5.015,1260,3.148,1324,4.618,1336,4.314,1339,3.498,1340,3.498,1344,3.307,1345,3.307,1348,2.893,1349,3.307,1350,3.737,1353,1.778,1930,1.374,1987,2.384,2014,2.893,3119,5.305,3160,3.498,3782,2.384,3784,4.057,3786,2.588,3791,2.231,3792,3.737,3793,2.588,3794,2.588,3795,2.588,3796,2.588,3797,2.384,3798,2.588,3799,2.588,3800,2.898,3801,2.898,3802,2.898,3803,2.898,3804,2.898,3805,2.898,3806,2.898,3807,2.898]],["title/modules/SamplesModule.html",[165,1.57,206,3.505]],["body/modules/SamplesModule.html",[3,0.059,4,0.059,5,0.059,33,0.006,39,0.87,43,3.022,53,0.196,56,1.05,62,0.073,63,0.201,73,0.912,84,1.223,91,0.004,92,0.004,96,3.568,115,2.39,140,3.088,165,2.687,167,2.547,168,2.547,169,2.665,170,2.665,171,2.605,172,2.665,176,3.444,177,2.547,178,2.39,181,3.704,192,5.667,197,5.298,206,7.157,211,3.108,212,1.383,216,4.563,274,3.411,361,2.267,365,4.931,438,2.547,458,2.344,480,3.989,482,3.989,483,3.153,484,3.531,487,5.154,665,4.277,685,2.547,686,2.492,899,3.989,1157,3.666,1545,4.432,2326,3.989,3797,6.118,3808,5.14,3809,5.14,3810,5.756,3811,7.112,3812,5.756,3813,8.24,3814,5.756,3815,5.756,3816,5.14,3817,5.756,3818,5.756]],["title/injectables/SamplesService.html",[0,0.716,3811,3.707]],["body/injectables/SamplesService.html",[0,0.762,2,1,3,0.035,4,0.035,5,0.035,20,0.178,21,1.194,22,2.642,25,1.487,27,0.289,33,0.006,36,0.769,38,1.969,39,1.257,40,0.475,41,0.996,47,1.912,48,2.595,53,0.186,56,0.618,62,0.043,63,0.118,64,2.2,73,1.461,77,1.185,84,1.769,91,0.003,92,0.003,112,3.657,115,1.407,119,1.537,161,1.534,212,0.814,222,1.83,284,0.709,294,2.123,303,1.779,315,2.694,328,1.379,386,2.349,435,0.766,443,1.124,444,2.861,490,1.512,491,3.001,492,2.429,496,3.192,502,1.779,503,3.282,505,3.77,506,2.691,511,2.467,514,3.264,515,1.646,516,1.779,517,1.534,519,1.646,520,1.688,521,1.885,522,1.779,523,2.158,524,2.158,525,1.646,526,2.349,528,2.158,530,3.264,537,2.939,586,2.691,745,3.946,899,2.349,951,2.797,1333,5.697,1336,2.609,1512,3.264,1514,2.158,1518,3.398,1567,4.098,1569,6.608,1581,4.02,1600,2.767,1601,2.467,1606,3.026,1613,3.731,1614,1.779,1617,4.577,1618,2.247,1626,2.247,1634,2.247,1635,2.158,1637,3.264,1638,2.514,1639,2.566,1640,3.792,1641,3.398,1643,2.349,1644,2.158,1645,2.158,1646,2.158,1649,2.467,1651,2.467,1692,3.026,1693,3.026,1702,6.951,1704,3.946,1706,3.026,1707,3.026,1708,6.153,1709,4.577,1710,3.026,1711,6.153,1713,4.577,1714,3.026,1715,3.026,1716,3.731,1717,3.026,1718,5.519,1719,3.026,1720,3.026,1721,1.885,1722,3.026,1723,3.026,1724,3.026,1725,3.026,1726,3.026,1930,2.93,1956,2.788,2384,2.609,2969,2.788,3791,2.609,3811,3.946,3816,3.026,3819,3.389,3820,3.389,3821,3.389,3822,5.125,3823,5.125,3824,3.389,3825,3.389,3826,3.389,3827,3.389,3828,3.389,3829,3.389,3830,6.649,3831,3.389,3832,3.389,3833,4.577,3834,3.389,3835,3.026,3836,3.389,3837,3.389,3838,3.389,3839,6.18,3840,3.389,3841,3.389,3842,3.389,3843,3.389,3844,3.389,3845,3.389,3846,3.389,3847,3.389,3848,3.389,3849,3.389,3850,3.389,3851,3.389,3852,5.125,3853,3.389,3854,3.389,3855,3.389,3856,3.389]],["title/injectables/SubDatasetsPublicInterceptor.html",[0,0.716,2845,3.96]],["body/injectables/SubDatasetsPublicInterceptor.html",[0,1.24,2,1.741,3,0.06,4,0.06,5,0.06,20,0.31,21,1.761,33,0.006,36,0.545,38,1.396,39,0.892,40,0.337,41,0.706,47,1.396,53,0.154,56,1.076,61,3.099,62,0.096,63,0.264,73,1.44,84,1.607,91,0.004,92,0.004,284,1.745,310,3.583,483,3.727,496,2.899,965,4.336,1395,4.336,1398,4.942,1399,4.772,1400,5.386,1402,3.017,1403,4.942,1404,5.211,1837,4.336,1841,5.012,2833,4.856,2834,6.751,2835,5.271,2837,6.751,2838,5.271,2839,7.447,2840,6.751,2841,5.271,2842,5.271,2843,5.271,2844,5.271,2845,6.218,2846,5.271,2847,7.447,2848,6.86,2849,5.271,2850,5.271,3857,5.903]],["title/classes/TechniqueClass.html",[63,0.168,3858,3.96]],["body/classes/TechniqueClass.html",[3,0.062,4,0.062,5,0.062,12,2.345,20,0.319,27,0.844,33,0.006,36,0.712,39,1.386,40,0.544,53,0.172,62,0.108,63,0.212,73,0.964,91,0.005,92,0.005,134,1.126,146,1.588,152,1.197,212,1.461,284,2.05,360,1.127,374,2.6,378,2.795,383,6.337,419,4.284,435,1.374,457,3.243,458,2.428,459,2.425,460,2.578,461,3.134,464,3.381,486,3.306,1046,3.651,1065,4.906,1358,7.551,3858,6.955,3859,5.43,3860,6.08,3861,6.08,3862,6.08,3863,6.08,3864,5.43,3865,6.08,3866,6.08]],["title/injectables/UTCTimeInterceptor.html",[0,0.716,3867,4.3]],["body/injectables/UTCTimeInterceptor.html",[0,1.155,2,1.817,3,0.063,4,0.063,5,0.063,20,0.324,21,1.81,25,1.788,33,0.006,36,0.786,38,1.838,39,1.174,40,0.486,41,0.93,47,1.458,48,2.255,53,0.173,56,1.123,61,3.235,62,0.078,63,0.215,73,1.231,84,1.309,91,0.005,92,0.005,310,2.92,360,1.136,483,3.606,562,3.327,1395,4.879,1398,3.651,1399,4.69,1400,5.293,1402,3.97,1403,4.603,1404,5.041,1735,6.39,1776,5.981,1834,5.068,1835,4.879,1837,3.534,1838,5.383,1841,4.085,2892,5.502,2893,8.224,2898,6.937,2902,5.502,3867,6.937,3868,8.932,3869,7.768,3870,6.161,3871,6.161,3872,6.161]],["title/classes/UpdateAttachmentDto.html",[63,0.168,512,3.96]],["body/classes/UpdateAttachmentDto.html",[3,0.063,4,0.063,5,0.063,18,1.756,20,0.323,27,0.822,33,0.006,36,0.825,40,0.51,41,1.155,53,0.182,62,0.078,63,0.297,69,3.603,70,2.788,91,0.005,92,0.005,134,1.139,146,1.84,152,1.211,360,1.135,363,4.233,364,3.139,365,5.636,490,1.814,500,4.735,512,6.382,518,5.492,1000,5.492,1018,4.362,1019,2.553,1034,3.42,3115,3.143,3117,7.086,3873,9.203,3874,7.972,3875,6.149,3876,6.149,3877,6.149,3878,6.149,3879,6.149]],["title/classes/UpdateDatablockDto.html",[63,0.168,1515,3.96]],["body/classes/UpdateDatablockDto.html",[3,0.077,4,0.077,5,0.077,18,2.148,33,0.006,53,0.179,62,0.096,63,0.263,91,0.005,92,0.005,134,1.393,152,1.481,490,2.218,1036,5.474,1038,6.716,1095,6.186,1515,7.211,3115,3.843,3880,7.52,3881,7.52]],["title/classes/UpdateDatasetDto.html",[63,0.168,1586,3.505]],["body/classes/UpdateDatasetDto.html",[3,0.05,4,0.05,5,0.064,7,1.398,10,2.557,12,2.509,14,1.873,16,0.923,17,0.98,18,1.396,20,0.124,27,0.826,30,0.623,33,0.006,36,0.876,39,1.008,40,0.545,41,1.173,51,4.292,53,0.079,62,0.049,63,0.135,65,3.602,70,2.793,79,1.424,91,0.002,92,0.002,119,2.399,126,3.24,127,1.636,134,0.437,146,1.949,152,0.465,242,0.97,258,2.144,278,1.942,284,1.674,285,2.637,295,1.504,322,2.109,342,1.451,346,1.479,360,0.564,367,1.785,374,3.192,378,2.744,380,3.32,382,3.185,397,2.116,400,2.174,401,1.176,409,1.207,415,1.399,419,1.313,423,1.601,424,0.942,425,1.045,434,1.119,437,1.207,454,1.207,486,1.911,490,0.697,573,1.636,656,0.942,728,1.92,756,2.024,879,1.275,883,1.147,932,1.942,952,2.366,965,2.212,966,3.172,969,3.172,970,2.969,986,1.449,1001,2.998,1010,1.504,1011,1.566,1012,1.504,1013,1.504,1014,1.566,1015,1.504,1016,1.566,1017,1.636,1028,2.904,1030,1.504,1042,2.969,1043,2.497,1044,3.558,1046,1.119,1047,4.02,1063,2.807,1065,1.504,1069,4.107,1071,3.826,1077,2.998,1106,1.719,1152,4.02,1162,1.636,1163,1.636,1164,1.636,1165,1.636,1166,1.636,1167,1.636,1168,1.449,1169,1.719,1170,1.566,1171,1.719,1172,1.719,1173,1.636,1174,2.366,1175,1.719,1176,1.942,1185,2.557,1190,2.718,1191,2.557,1192,1.942,1197,4.526,1243,1.719,1284,1.818,1288,2.969,1339,1.818,1340,1.818,1344,3.558,1353,1.449,1445,2.969,1446,2.969,1451,1.818,1579,7.778,1586,2.807,1591,1.719,1622,1.566,1623,1.566,1624,1.566,1668,1.636,1721,3.914,1739,2.109,1762,2.109,1852,1.354,1928,2.969,1930,1.119,2132,2.109,2152,2.109,2251,1.719,2296,2.109,2397,4.364,2475,2.109,2568,2.672,2577,3.172,2602,2.109,2603,1.942,2634,1.942,2946,1.942,2947,2.109,2955,1.818,3009,1.719,3115,1.207,3116,2.109,3166,1.818,3241,3.443,3323,1.818,3341,2.109,3347,2.109,3587,3.443,3688,1.942,3858,1.942,3882,3.856,3883,3.856,3884,3.856,3885,3.856,3886,3.558,3887,3.856,3888,3.856,3889,4.887,3890,3.856,3891,3.856,3892,3.856,3893,2.361,3894,2.361,3895,2.361,3896,2.361,3897,2.361,3898,2.361,3899,2.361,3900,5.642,3901,2.361,3902,2.109,3903,5.642,3904,5.038,3905,2.361,3906,2.361,3907,2.361,3908,2.109,3909,2.361,3910,2.109,3911,2.361,3912,2.361,3913,2.361,3914,2.361,3915,2.361,3916,2.361,3917,2.361,3918,2.361,3919,2.361,3920,2.361,3921,2.361,3922,2.361,3923,2.361,3924,2.361,3925,3.856,3926,2.109,3927,2.361,3928,2.109,3929,2.361,3930,3.856,3931,2.361,3932,2.361,3933,2.109,3934,2.361,3935,3.856,3936,2.361,3937,2.361,3938,2.361,3939,2.361,3940,2.361,3941,2.361,3942,2.361,3943,2.361,3944,2.361,3945,2.361,3946,2.361,3947,2.361,3948,2.109,3949,2.361,3950,2.361,3951,4.887,3952,2.361,3953,2.361,3954,2.361,3955,4.887,3956,2.361,3957,2.361,3958,2.361,3959,2.361,3960,2.361,3961,2.361,3962,2.361,3963,2.361,3964,1.818,3965,2.361,3966,2.361,3967,3.856,3968,2.361,3969,2.361,3970,2.361,3971,2.361,3972,2.361,3973,2.361,3974,2.361,3975,2.361,3976,2.361,3977,2.361,3978,2.361,3979,2.361,3980,2.361,3981,2.361,3982,2.109,3983,2.361,3984,2.361,3985,2.361,3986,2.361,3987,2.361,3988,2.361,3989,2.361,3990,2.361,3991,2.361,3992,2.361,3993,2.361,3994,2.361,3995,2.361,3996,2.361,3997,2.361,3998,2.361,3999,2.361,4000,2.361,4001,2.361,4002,2.361,4003,2.361,4004,2.361]],["title/classes/UpdateInstrumentDto.html",[63,0.168,2035,3.707]],["body/classes/UpdateInstrumentDto.html",[3,0.077,4,0.077,5,0.077,18,2.148,33,0.006,53,0.179,62,0.096,63,0.263,91,0.005,92,0.005,134,1.393,152,1.481,490,2.218,1108,5.474,1110,6.716,2035,6.75,2045,6.186,3115,3.843,4005,7.52,4006,7.52]],["title/classes/UpdateJobDto.html",[63,0.168,2203,3.707]],["body/classes/UpdateJobDto.html",[3,0.077,4,0.077,5,0.077,18,2.148,33,0.006,53,0.179,62,0.096,63,0.263,91,0.005,92,0.005,134,1.393,152,1.481,490,2.218,1121,5.474,1123,6.716,2203,6.75,2211,6.186,3115,3.843,4007,7.52,4008,7.52]],["title/classes/UpdateOrigDatablockDto.html",[63,0.168,2995,3.707]],["body/classes/UpdateOrigDatablockDto.html",[3,0.077,4,0.077,5,0.077,18,2.138,33,0.006,53,0.178,62,0.095,63,0.262,91,0.005,92,0.005,134,1.386,152,1.474,490,2.208,1101,6.059,1102,5.764,1187,6.685,2995,6.732,3115,4.468,4009,7.485]],["title/classes/UpdatePolicyDto.html",[63,0.168,3143,3.505]],["body/classes/UpdatePolicyDto.html",[3,0.077,4,0.077,5,0.077,18,2.148,33,0.006,53,0.179,62,0.096,63,0.263,91,0.005,92,0.005,134,1.393,152,1.481,490,2.218,1206,5.474,1208,6.186,3115,3.843,3143,6.382,3153,5.79,4010,6.716,4011,7.52]],["title/classes/UpdateProposalDto.html",[63,0.168,3403,3.96]],["body/classes/UpdateProposalDto.html",[3,0.071,4,0.071,5,0.071,18,1.99,20,0.366,27,0.714,33,0.006,36,0.644,40,0.398,53,0.19,62,0.089,63,0.314,69,3.81,70,2.526,91,0.005,92,0.005,134,1.291,146,1.437,152,1.372,249,5.074,251,5.733,360,1.226,490,2.056,1018,3.973,1019,2.894,1034,3.876,1232,6.224,3115,3.562,3117,6.453,3403,6.894,3874,6.224,4012,8.381,4013,6.97,4014,6.97]],["title/classes/UpdatePublishedDataDto.html",[63,0.168,3516,3.707]],["body/classes/UpdatePublishedDataDto.html",[3,0.076,4,0.076,5,0.076,18,2.123,33,0.006,53,0.177,62,0.095,63,0.26,91,0.005,92,0.005,134,1.377,152,1.464,231,5.16,490,2.193,896,3.903,1279,6.339,1281,6.639,3115,4.45,3516,6.705,3523,6.115,4015,7.434]],["title/classes/UpdateSampleDto.html",[63,0.168,3830,3.96]],["body/classes/UpdateSampleDto.html",[3,0.077,4,0.077,5,0.077,18,2.148,33,0.006,53,0.179,62,0.096,63,0.263,91,0.005,92,0.005,134,1.393,152,1.481,490,2.218,1333,5.79,1335,6.716,3115,3.843,3830,7.211,3833,6.716,4016,7.52,4017,7.52]],["title/classes/UpdateUserIdentityDto.html",[63,0.168,4018,3.96]],["body/classes/UpdateUserIdentityDto.html",[3,0.077,4,0.077,5,0.077,18,2.138,33,0.006,53,0.178,62,0.095,63,0.262,91,0.005,92,0.005,134,1.386,152,1.474,242,2.2,490,2.208,771,4.963,773,5.449,1369,6.685,3115,3.825,4018,7.192,4019,6.685,4020,7.485]],["title/classes/UpdateUserSettingsDto.html",[63,0.168,4021,3.707]],["body/classes/UpdateUserSettingsDto.html",[3,0.077,4,0.077,5,0.077,18,2.138,33,0.006,53,0.178,62,0.095,63,0.262,91,0.005,92,0.005,134,1.386,152,1.474,242,2.2,490,2.208,1382,5.187,1383,6.685,1406,5.764,3115,3.825,4019,6.685,4021,6.732,4022,7.485]],["title/classes/UpdateWherePolicyDto.html",[63,0.168,3149,3.96]],["body/classes/UpdateWherePolicyDto.html",[3,0.069,4,0.069,5,0.069,20,0.354,27,0.699,33,0.006,36,0.758,40,0.527,53,0.18,62,0.086,63,0.309,70,2.701,91,0.005,92,0.005,134,1.248,146,1.693,360,1.201,400,3.097,951,3.049,1002,3.987,1018,4.198,1019,2.797,1034,3.747,1119,6.322,1140,5.188,1208,5.542,1226,6.017,3143,6.711,3149,6.754,3153,5.188,3253,7.909,4010,7.909,4023,6.738,4024,6.738]],["title/classes/User.html",[63,0.168,242,1.212]],["body/classes/User.html",[3,0.053,4,0.053,5,0.053,20,0.273,27,0.841,33,0.006,36,0.872,40,0.553,41,0.833,53,0.171,62,0.1,63,0.182,73,0.824,91,0.004,92,0.004,134,0.963,146,1.891,152,1.024,212,1.25,242,2.196,284,1.92,285,2.723,315,3.066,317,4.234,342,2.951,360,1.018,361,2.39,364,2.896,378,2.662,435,1.572,457,3.574,458,2.193,459,2.074,460,2.841,467,2.526,468,2.658,469,2.658,756,3.653,776,3.604,790,4.647,903,5.719,904,3.786,1045,3.556,3316,5.724,4025,4.645,4026,7.841,4027,7.841,4028,5.201,4029,5.201,4030,8.727,4031,5.201,4032,5.201,4033,5.201,4034,6.958,4035,5.201,4036,5.201,4037,5.201,4038,6.45,4039,5.201,4040,4.645,4041,4.645,4042,5.201]],["title/controllers/UserIdentitiesController.html",[138,2.179,4043,3.96]],["body/controllers/UserIdentitiesController.html",[3,0.041,4,0.041,5,0.07,20,0.212,21,1.361,22,2.295,25,1.174,27,0.707,29,4.819,30,2.189,33,0.006,36,0.54,38,1.382,39,0.883,40,0.334,41,0.699,46,4.886,47,1.382,48,2.179,53,0.187,56,0.738,62,0.051,63,0.141,64,2.08,73,1.414,74,1.83,77,2.398,84,1.457,91,0.003,92,0.003,138,1.83,140,1.679,142,2.124,146,1.204,151,2.249,152,0.796,185,3.35,242,2.334,283,3.462,284,0.847,285,1.155,294,2.736,432,3.067,470,4.805,492,3.25,496,3.281,505,4.174,515,1.964,520,3.414,521,2.249,522,2.124,562,3.154,583,4.498,587,4.805,595,2.482,603,3.584,665,3.174,685,1.79,686,1.752,742,2.482,816,2.909,824,5.502,870,3.873,901,3.813,902,2.803,905,2.32,908,3.248,1376,2.682,1600,3.154,1612,4.252,1807,4.805,2009,2.576,2047,2.397,2048,2.576,2049,3.72,2050,2.576,2051,2.482,2052,2.576,2059,3.72,2075,3.612,2279,3.115,2301,5.217,2454,4.805,2563,3.115,2968,5.217,3159,4.805,3161,4.805,3173,5.217,3264,4.498,3538,5.217,3908,5.217,4043,4.805,4044,6.123,4045,4.045,4046,4.045,4047,6.856,4048,4.045,4049,8.298,4050,4.045,4051,4.045,4052,4.045,4053,4.045,4054,4.045,4055,3.612,4056,4.991,4057,3.612,4058,3.115,4059,4.045,4060,4.045,4061,4.045,4062,6.123,4063,6.123,4064,5.841,4065,5.841,4066,5.841,4067,5.841,4068,7.509,4069,7.509,4070,5.217,4071,3.612,4072,3.612,4073,4.045,4074,4.045,4075,5.841,4076,5.841,4077,3.612,4078,3.612,4079,3.612,4080,4.045]],["title/injectables/UserIdentitiesService.html",[0,0.716,4056,3.505]],["body/injectables/UserIdentitiesService.html",[0,1.199,2,1.931,3,0.067,4,0.067,5,0.067,20,0.344,21,1.88,22,2.419,25,2.342,33,0.006,36,0.745,38,1.909,39,1.219,40,0.461,41,0.966,47,1.549,48,2.342,53,0.186,56,1.194,62,0.083,63,0.229,64,2.331,84,1.391,91,0.005,92,0.005,212,1.573,435,1.479,444,3.79,492,4.145,503,3.25,505,3.57,506,3.437,516,3.437,901,3.641,902,4.537,1376,4.341,4044,7.809,4056,5.873,4081,6.547,4082,6.547,4083,6.547,4084,7.205,4085,6.547,4086,5.041,4087,5.847,4088,6.547]],["title/classes/UserIdentity.html",[63,0.168,901,2.677]],["body/classes/UserIdentity.html",[3,0.055,4,0.055,5,0.055,20,0.28,27,0.798,30,1.865,33,0.006,36,0.866,40,0.561,53,0.172,62,0.101,63,0.186,73,0.845,74,3.592,91,0.004,92,0.004,119,1.598,134,0.987,146,1.931,212,1.28,242,1.998,284,1.116,308,4.056,360,1.035,368,2.526,370,2.588,372,4.893,423,3.89,425,3.741,435,1.793,436,2.654,457,3.728,458,2.229,459,2.125,461,2.877,467,2.588,468,2.724,469,2.724,581,4.87,728,3.522,779,5.055,781,5.398,782,5.62,783,3.88,790,4.704,820,5.501,821,5.263,901,4.701,1681,6.155,4086,4.104,4089,4.76,4090,5.33,4091,5.33,4092,5.33,4093,5.33,4094,5.33,4095,5.33,4096,5.33,4097,5.33,4098,4.384,4099,4.76,4100,5.33]],["title/interfaces/UserPayload.html",[50,2.761,1896,1.311]],["body/interfaces/UserPayload.html",[3,0.07,4,0.07,5,0.07,20,0.359,27,0.857,30,2.351,33,0.006,40,0.542,41,1.178,50,4.751,62,0.087,74,4.192,91,0.005,92,0.005,109,5.9,315,3.623,342,3.486,360,1.212,806,7.621,1896,1.861,1898,2.782,4101,6.837]],["title/classes/UserProfile.html",[63,0.168,781,2.954]],["body/classes/UserProfile.html",[3,0.059,4,0.059,5,0.059,20,0.303,27,0.842,30,1.966,33,0.006,36,0.869,40,0.555,41,1.141,53,0.152,62,0.105,63,0.202,73,0.915,79,3.049,91,0.004,92,0.004,119,2.235,134,1.07,146,1.939,212,1.388,315,3.227,342,3.106,360,1.091,364,3.049,372,4.146,435,1.305,457,3.791,458,2.35,459,2.303,461,3.033,728,2.876,781,5.064,782,5.649,2555,6.79,2565,6.79,2568,5.72,4102,5.159,4103,5.776,4104,5.776,4105,5.776,4106,5.776,4107,5.776,4108,5.776,4109,5.776,4110,5.159,4111,5.776,4112,5.776]],["title/classes/UserRole.html",[63,0.168,2671,3.505]],["body/classes/UserRole.html",[3,0.066,4,0.066,5,0.066,20,0.34,27,0.775,33,0.006,36,0.741,40,0.534,53,0.177,62,0.111,63,0.226,73,1.027,74,3.939,91,0.005,92,0.005,119,2.404,134,1.2,146,1.653,152,1.276,212,1.557,242,2.018,308,5.217,360,1.173,435,1.811,457,3.339,458,2.527,459,2.585,460,2.654,467,3.148,782,5.159,877,4.329,1380,6.703,2671,6.621,3316,6.595,3752,5.332,4040,5.788,4098,6.595,4113,5.788,4114,6.482,4115,6.482,4116,5.788,4117,6.482]],["title/classes/UserSettings.html",[63,0.168,903,3.066]],["body/classes/UserSettings.html",[3,0.05,4,0.05,5,0.05,12,2.329,20,0.258,27,0.783,30,1.765,33,0.006,36,0.816,40,0.558,41,0.801,53,0.167,62,0.097,63,0.172,73,0.778,74,3.445,91,0.004,92,0.004,119,2.566,134,0.909,146,1.686,152,0.967,212,1.18,242,1.684,284,1.712,308,3.838,360,0.979,361,2.321,364,2.812,374,2.76,378,2.373,380,2.723,382,3.68,401,4.397,435,1.72,457,3.282,458,2.109,459,1.958,460,2.608,461,2.723,467,2.384,468,2.509,469,2.509,651,3.514,728,3.332,782,5.355,903,4.849,950,7.302,1028,3.43,1190,3.721,1384,7.039,1385,6.8,1386,6.8,1388,7.565,1737,4.872,2119,4.384,3436,5.505,4038,4.039,4098,4.039,4118,4.384,4119,4.91,4120,8.83,4121,4.91,4122,4.91,4123,8.177,4124,6.692,4125,4.91,4126,4.91,4127,4.91,4128,4.91,4129,4.039,4130,4.91,4131,4.91,4132,4.91]],["title/controllers/UsersController.html",[138,2.179,4133,3.96]],["body/controllers/UsersController.html",[3,0.021,4,0.021,5,0.021,12,2.068,17,1.434,20,0.109,21,0.804,22,2.631,25,0.6,27,0.788,30,1.173,32,0.858,33,0.006,36,0.739,38,1.891,39,1.208,40,0.494,41,0.957,47,1.891,48,2.572,53,0.184,56,0.377,62,0.026,63,0.072,64,1.584,73,1.051,77,2.796,84,1.729,91,0.002,92,0.002,138,0.935,140,0.858,142,1.085,143,2.659,146,1.616,151,1.149,152,0.407,155,2.95,156,1.504,157,1.432,161,1.563,178,2.401,223,1.504,225,2.84,242,2.388,294,2.794,328,0.84,360,0.505,364,3.504,401,2.215,490,1.844,496,3.798,515,1.003,517,2.013,519,1.003,520,2.879,522,1.085,540,1.591,544,3.238,546,2.84,551,1.845,553,2.514,562,4.459,563,1.845,564,1.845,570,1.699,571,1.845,572,4.642,573,3.602,574,1.845,575,2.659,576,5.582,577,1.845,595,1.268,596,1.316,597,1.591,598,1.591,600,2.636,603,2.119,604,3.659,605,3.784,606,3.602,607,2.659,619,1.845,620,1.845,621,1.845,622,2.393,623,3.238,639,5.921,653,1.845,656,1.774,657,1.845,658,1.845,659,1.845,660,1.845,665,2.06,675,1.37,678,2.336,685,0.914,686,0.895,698,2.393,702,5.197,816,1.029,849,3.31,870,4.792,881,2.199,882,1.432,901,1.149,902,1.432,903,1.316,904,1.504,905,3.316,908,4.148,914,1.224,1021,5.355,1022,4.209,1024,2.84,1190,1.149,1196,4.55,1376,2.289,1377,4.452,1382,4.82,1392,1.699,1406,2.659,1407,1.699,1660,1.699,1680,1.37,1766,3.084,1972,3.238,2009,4.602,2038,3.446,2039,1.37,2040,1.504,2047,1.224,2048,1.316,2049,4.429,2050,1.316,2051,1.268,2052,1.316,2059,4.602,2060,2.289,2087,5.008,2279,1.591,2498,1.845,2663,1.845,2768,1.699,2945,5.721,2950,4.642,3012,1.591,3053,1.699,4021,6.359,4055,1.845,4058,1.591,4062,4.642,4063,4.642,4070,3.084,4071,1.845,4077,1.845,4078,1.845,4079,1.845,4133,2.84,4134,2.066,4135,4.449,4136,4.449,4137,4.449,4138,4.449,4139,4.449,4140,3.453,4141,4.449,4142,4.449,4143,4.449,4144,2.066,4145,2.066,4146,2.066,4147,2.066,4148,3.973,4149,5.782,4150,2.066,4151,2.066,4152,4.642,4153,2.066,4154,4.449,4155,3.084,4156,3.453,4157,2.066,4158,2.066,4159,2.066,4160,2.066,4161,2.066,4162,2.066,4163,2.066,4164,2.066,4165,2.066,4166,2.066,4167,2.066,4168,2.066,4169,2.066,4170,2.066,4171,2.066,4172,2.066,4173,2.066,4174,4.642,4175,2.066,4176,2.066,4177,2.066,4178,2.066,4179,2.066,4180,2.066,4181,2.066,4182,2.066,4183,2.066,4184,2.066,4185,2.066,4186,2.066,4187,2.066,4188,3.084,4189,1.845,4190,2.066,4191,2.066,4192,1.845,4193,2.066,4194,2.066,4195,2.066,4196,2.066,4197,4.449,4198,2.066,4199,2.066,4200,2.066,4201,2.066,4202,3.453,4203,2.066,4204,2.066,4205,2.066,4206,2.066,4207,2.066,4208,6.955,4209,5.198,4210,5.198,4211,3.453,4212,2.066,4213,2.066,4214,2.066,4215,2.066,4216,2.066,4217,2.066,4218,2.066,4219,2.066,4220,2.066,4221,2.066,4222,3.453,4223,3.453,4224,2.066,4225,4.449,4226,4.449,4227,3.453,4228,2.066,4229,2.066,4230,2.066,4231,2.066,4232,2.066,4233,2.066,4234,4.449,4235,2.066,4236,2.066,4237,2.066,4238,2.066,4239,2.066,4240,2.066]],["title/injectables/UsersLogbooksInterceptor.html",[0,0.716,2712,3.96]],["body/injectables/UsersLogbooksInterceptor.html",[0,1.103,2,1.692,3,0.059,4,0.059,5,0.059,20,0.301,21,1.729,22,2.275,25,1.665,33,0.006,36,0.685,38,1.756,39,1.121,40,0.424,41,0.888,47,1.357,48,2.154,53,0.183,56,1.046,61,3.011,62,0.073,63,0.2,68,4.416,70,1.612,73,1.428,77,2.006,84,1.748,91,0.004,92,0.004,101,3.011,109,4.726,161,2.595,252,6.119,310,2.719,328,2.333,346,2.2,483,3.487,877,3.097,878,5.122,887,5.454,1395,4.718,1398,3.399,1399,4.567,1400,5.155,1402,3.792,1403,4.397,1404,3.399,1408,4.718,1846,5.122,2711,4.718,2712,6.104,3528,5.122,4241,8.226,4242,5.735,4243,5.735,4244,5.735,4245,5.735,4246,7.421,4247,5.735,4248,8.226,4249,5.735,4250,5.735,4251,5.735,4252,5.735,4253,5.735,4254,5.735,4255,5.735,4256,7.421,4257,5.735,4258,5.735,4259,5.735,4260,5.735]],["title/modules/UsersModule.html",[165,1.57,207,3.192]],["body/modules/UsersModule.html",[3,0.05,4,0.05,5,0.05,6,3.245,7,2.421,8,2.722,13,3.117,22,1.354,33,0.006,39,1.291,53,0.2,56,0.893,62,0.062,63,0.171,91,0.004,92,0.004,96,3.292,112,3.695,115,2.032,140,2.773,165,2.479,167,2.166,168,2.166,169,2.266,170,2.266,171,2.215,172,3.52,176,3.092,177,2.166,178,2.032,181,3.326,207,6.501,211,2.643,212,1.176,216,4.664,242,1.913,274,2.901,303,2.57,458,2.694,600,5.228,665,4.084,674,4.371,675,3.245,678,5.036,683,5.964,684,4.371,685,2.166,686,2.12,694,4.371,695,3.769,696,4.026,697,4.371,698,3.392,699,4.371,877,2.643,901,2.722,902,3.392,903,3.117,904,3.563,1376,5.04,1407,4.026,1502,3.392,2518,6.359,2535,4.371,2671,3.563,2672,4.026,3704,5.964,3751,4.371,4038,5.494,4041,5.964,4043,6.253,4056,6.422,4057,4.371,4058,3.769,4099,5.964,4116,5.964,4133,6.253,4192,4.371,4261,4.371,4262,4.371,4263,4.371,4264,4.895,4265,4.895,4266,4.371,4267,4.895,4268,4.895,4269,4.895,4270,4.895,4271,4.895]],["title/injectables/UsersService.html",[0,0.716,678,2.528]],["body/injectables/UsersService.html",[0,0.491,2,0.578,3,0.02,4,0.02,5,0.02,6,1.299,7,1.198,8,1.09,16,1.292,17,2.087,19,3.6,20,0.103,21,0.77,22,2.677,25,0.959,27,0.796,30,0.517,33,0.006,36,0.781,38,1.978,39,1.278,40,0.478,41,1.001,47,1.978,48,2.684,50,2.456,53,0.179,54,1.161,55,1.001,56,0.357,62,0.025,63,0.068,64,2.305,73,1.494,74,4.024,77,2.887,79,1.581,81,1.161,84,1.877,91,0.003,92,0.002,109,2.104,111,1.161,112,2.753,115,0.814,119,1.284,161,2.539,212,0.471,242,2.049,284,0.896,285,1.223,294,2.224,300,1.612,310,0.929,315,2.379,317,1.784,342,1.892,354,1.09,361,0.597,364,1.856,382,0.752,397,1.43,400,0.685,407,1.09,432,1.029,435,0.443,444,3.038,490,0.974,492,2.383,494,2.19,503,2.421,505,1.895,506,1.029,516,1.029,517,2.753,519,1.604,520,2.795,522,1.029,537,3.713,581,1.202,622,2.967,636,1.248,675,1.299,678,2.248,695,1.509,698,1.358,702,2.839,707,5.781,719,1.612,735,2.95,736,3.522,737,1.75,742,2.027,771,4.509,773,2.405,774,5.341,775,1.509,776,1.358,779,1.248,781,1.202,790,1.161,803,1.612,804,1.612,805,1.612,808,1.427,810,1.509,813,1.509,819,3.87,820,1.358,821,1.299,824,1.299,835,1.509,877,3.285,901,2.381,902,1.358,903,1.248,904,1.427,967,1.427,1021,3.297,1024,5.005,1057,2.405,1168,3.084,1249,1.612,1330,2.543,1362,2.95,1376,2.19,1377,3.87,1379,2.543,1380,1.509,1382,4.712,1406,2.543,1415,1.509,1679,1.299,1721,1.09,1754,1.75,1972,2.405,1978,2.717,2117,1.612,2369,2.717,2445,1.509,2518,4.292,2529,5.005,2555,1.612,2559,4.489,2563,2.543,2565,1.612,2568,1.358,2574,1.612,2945,1.612,3220,1.75,3236,5.005,3260,1.75,3313,1.75,3719,1.75,3722,3.824,3750,2.95,3755,1.75,3756,1.612,3762,2.95,3928,1.75,4018,5.325,4021,5.236,4058,1.509,4084,3.824,4086,1.509,4087,1.75,4129,1.612,4152,4.489,4155,1.75,4174,1.75,4188,1.75,4189,1.75,4266,1.75,4272,1.96,4273,4.282,4274,3.303,4275,3.303,4276,3.303,4277,3.303,4278,4.282,4279,3.303,4280,4.282,4281,4.282,4282,4.282,4283,1.96,4284,3.303,4285,1.96,4286,1.96,4287,1.96,4288,1.96,4289,1.96,4290,1.96,4291,1.96,4292,1.96,4293,1.96,4294,1.96,4295,3.303,4296,1.96,4297,3.303,4298,1.96,4299,3.303,4300,1.96,4301,5.026,4302,1.96,4303,3.303,4304,1.96,4305,1.96,4306,1.96,4307,1.96,4308,1.96,4309,1.96,4310,3.303,4311,1.96,4312,1.96,4313,1.96,4314,3.303,4315,1.96,4316,3.303,4317,1.96,4318,1.96,4319,1.96,4320,4.282,4321,1.96,4322,1.96,4323,1.75,4324,1.96,4325,1.96,4326,1.96,4327,1.96,4328,1.96,4329,1.96,4330,1.96,4331,3.303,4332,1.96,4333,1.96,4334,1.96,4335,3.303,4336,1.96,4337,1.96,4338,1.96,4339,1.96,4340,1.96,4341,1.96,4342,1.96,4343,1.96,4344,3.303,4345,3.303,4346,1.96,4347,3.303,4348,1.96,4349,1.96,4350,1.96,4351,1.96,4352,1.96,4353,1.96,4354,3.303,4355,1.96,4356,1.96,4357,3.303,4358,1.96,4359,1.96,4360,1.96,4361,1.96,4362,1.96,4363,1.96,4364,3.303,4365,3.303,4366,1.96,4367,3.303,4368,1.96,4369,3.303,4370,3.303,4371,3.303,4372,1.96,4373,1.96,4374,1.96,4375,1.96,4376,1.96,4377,1.96,4378,1.96,4379,1.96,4380,5.026,4381,1.96,4382,1.96,4383,1.96,4384,1.96,4385,1.96,4386,3.303,4387,1.96,4388,1.96,4389,1.96,4390,3.303,4391,1.96,4392,1.96,4393,1.96,4394,5.612,4395,3.303,4396,3.303,4397,6.084,4398,3.303,4399,1.96,4400,1.96,4401,6.474,4402,1.96,4403,1.96,4404,1.96,4405,1.96,4406,1.96]],["title/dependencies.html",[168,2.566,3964,3.084]],["body/dependencies.html",[15,4.927,21,1.396,33,0.006,56,1.092,57,5.349,59,4.151,61,3.145,63,0.267,64,2.133,91,0.004,92,0.004,115,2.487,152,1.179,168,2.651,212,1.439,222,3.234,242,1.508,243,5.349,244,5.349,245,2.594,246,4.612,255,4.612,256,4.927,267,4.612,268,4.612,332,4.151,435,1.353,445,3.331,465,3.436,515,4.078,583,4.612,671,3.436,675,3.972,692,3.972,702,3.972,703,4.927,719,4.927,723,4.361,780,6.127,875,5.349,1019,2.487,1034,3.331,1168,3.675,1353,3.675,1809,4.361,1845,5.349,2371,5.349,2552,5.349,4407,5.99,4408,5.99,4409,5.99,4410,5.99,4411,7.63,4412,8.841,4413,5.99,4414,5.99,4415,8.397,4416,5.99,4417,5.99,4418,5.99,4419,5.99,4420,5.99,4421,5.99,4422,5.99,4423,5.99,4424,5.99,4425,5.99,4426,5.99,4427,5.99,4428,5.99,4429,5.99,4430,5.99,4431,5.99,4432,5.99,4433,5.99,4434,5.99,4435,5.99,4436,5.99,4437,5.349,4438,5.99,4439,5.99,4440,5.99,4441,5.99,4442,5.99,4443,7.63,4444,5.99,4445,5.99]],["title/miscellaneous/enumerations.html",[4446,2.775,4447,5.179]],["body/miscellaneous/enumerations.html",[20,0.277,33,0.006,91,0.004,92,0.004,143,5.41,397,4.445,399,4.03,407,4.392,490,2.073,877,3.794,905,4.03,914,4.164,951,3.179,965,3.027,1048,4.846,1345,5.115,1620,6.275,1623,4.659,1624,4.659,1716,5.115,1900,4.311,1930,3.33,2016,4.846,2154,5.41,2178,4.064,2179,4.064,2213,6.275,2446,6.275,3756,5.78,3835,6.275,4446,3.657,4447,4.713,4448,5.278,4449,7.026,4450,8.77,4451,5.278,4452,5.278,4453,5.278,4454,7.026,4455,5.278,4456,7.026,4457,5.278,4458,7.026,4459,7.026,4460,7.026,4461,7.026,4462,7.026,4463,5.278,4464,5.278,4465,5.278,4466,5.278,4467,5.278,4468,5.278,4469,5.278,4470,5.278,4471,5.278,4472,5.278,4473,5.278,4474,5.278,4475,5.278,4476,5.278,4477,5.278,4478,5.278,4479,5.278,4480,5.278,4481,5.278,4482,5.278,4483,5.278,4484,5.278,4485,5.278,4486,5.278,4487,5.278,4488,5.278,4489,5.278,4490,5.278,4491,5.278,4492,7.026,4493,7.026,4494,5.278,4495,5.278,4496,7.026,4497,7.026,4498,7.026,4499,7.026]],["title/miscellaneous/functions.html",[4446,2.775,4500,5.179]],["body/miscellaneous/functions.html",[20,0.392,27,0.636,33,0.006,38,1.767,39,1.128,40,0.427,41,0.894,47,1.767,91,0.005,92,0.005,171,4.187,232,5.436,895,6.135,896,3.921,3492,7.797,3585,6.669,4446,5.175,4500,6.669,4501,7.468,4502,8.731,4503,6.669,4504,7.468]],["title/index.html",[20,0.21,1182,2.915,4505,3.576]],["body/index.html",[3,0.025,5,0.079,10,3.321,13,4.74,14,3.838,16,2.477,17,2.63,21,0.57,27,0.822,33,0.002,36,0.226,38,0.939,39,0.37,41,1.166,46,1.501,63,0.139,84,0.844,91,0.002,92,0.002,94,2.185,126,2.432,127,2.751,142,2.084,218,3.471,231,1.45,242,1.594,245,2.169,246,3.856,255,5.223,275,4.472,278,2.013,281,2.185,283,2.352,286,6.058,301,1.781,305,4.74,307,2.629,313,2.185,315,1.552,317,2.143,320,6.381,321,6.058,323,1.16,324,1.696,325,6.122,342,1.494,347,5.657,361,0.746,364,1.466,378,2.16,382,1.522,386,1.696,391,2.013,397,2.937,399,1.403,400,2.015,401,1.977,403,1.45,409,2.028,417,1.501,425,1.757,434,2.374,437,2.028,438,2.216,440,1.321,441,2.143,443,0.812,445,1.361,446,3.326,458,0.771,461,0.995,470,3.265,483,1.037,486,1.552,490,1.477,496,0.938,505,1.083,515,1.188,542,2.013,544,2.89,553,3.646,554,5.146,556,5.21,558,3.545,573,1.696,581,2.435,583,1.884,596,1.558,631,4.195,639,4.611,641,4.951,651,1.285,692,1.622,695,3.856,702,2.632,703,3.265,716,2.013,723,1.781,727,3.056,728,1.218,752,1.884,779,1.558,821,1.622,824,1.622,838,1.884,846,2.013,849,4.74,850,3.056,855,1.781,887,4.737,952,1.501,1019,1.016,1022,2.89,1027,3.545,1028,2.215,1029,2.185,1044,3.646,1091,1.781,1096,2.185,1154,5.21,1156,3.265,1158,3.265,1168,2.435,1174,2.435,1182,1.781,1185,5.1,1243,1.781,1250,3.056,1286,2.352,1348,3.189,1353,2.435,1451,3.856,1638,1.615,1661,1.884,1668,1.696,1679,1.622,1688,3.265,1691,2.013,1740,3.545,1807,2.013,1809,1.781,1838,4.701,1856,1.45,1866,3.545,1877,3.056,1879,6.058,1881,2.185,1908,1.977,1914,1.403,1990,2.185,1995,5.712,2014,4.034,2024,1.884,2025,3.265,2027,5.923,2065,2.185,2124,3.545,2227,1.884,2270,2.185,2295,3.545,2297,2.013,2423,7.6,2427,2.013,2445,3.056,2568,1.696,2572,2.013,2631,2.185,2642,6.058,2652,2.185,2732,2.013,2768,2.013,2969,3.265,2970,5.21,2974,3.265,2985,3.545,2988,5.146,3159,2.013,3166,1.884,3168,2.185,3262,2.185,3263,2.185,3264,6.226,3277,2.185,3296,3.545,3311,1.781,3323,4.437,3332,4.472,3429,2.185,3436,3.265,3471,4.472,3479,2.185,3508,2.013,3615,2.185,3631,6.058,3632,2.185,3886,3.646,3902,2.185,3904,3.545,3926,2.185,3933,2.185,3948,3.545,3964,1.884,3982,3.545,4072,4.472,4148,2.185,4323,3.545,4506,3.969,4507,5.008,4508,2.447,4509,2.447,4510,2.447,4511,2.447,4512,5.008,4513,2.447,4514,2.447,4515,2.447,4516,3.969,4517,2.447,4518,2.447,4519,2.447,4520,2.447,4521,2.447,4522,2.447,4523,3.969,4524,3.969,4525,3.969,4526,3.969,4527,3.969,4528,8.506,4529,3.969,4530,4.472,4531,3.969,4532,7.145,4533,3.969,4534,5.008,4535,5.008,4536,3.969,4537,3.265,4538,5.008,4539,3.969,4540,2.447,4541,2.447,4542,2.447,4543,3.969,4544,2.447,4545,2.447,4546,3.969,4547,2.447,4548,6.783,4549,5.762,4550,2.447,4551,2.447,4552,2.447,4553,2.447,4554,3.969,4555,2.447,4556,2.447,4557,3.969,4558,3.969,4559,5.008,4560,3.969,4561,2.447,4562,2.447,4563,2.447,4564,3.969,4565,3.969,4566,3.969,4567,2.447,4568,2.447,4569,2.447,4570,3.969,4571,2.447,4572,2.447,4573,2.447,4574,3.969,4575,5.008,4576,2.185,4577,5.008,4578,3.969,4579,5.008,4580,2.447,4581,2.447,4582,2.447,4583,2.447,4584,2.447,4585,2.447,4586,2.447,4587,2.447,4588,2.447,4589,2.447,4590,2.447,4591,2.447,4592,2.447,4593,3.969,4594,2.447,4595,2.447,4596,2.447,4597,3.969,4598,3.969,4599,2.447,4600,2.447,4601,5.762,4602,3.969,4603,2.447,4604,2.447,4605,2.447,4606,3.969,4607,3.969,4608,2.447,4609,2.447,4610,2.447,4611,2.447,4612,2.447,4613,2.447,4614,2.447,4615,2.447,4616,2.447,4617,2.447,4618,2.447,4619,2.447,4620,2.447,4621,2.447,4622,2.447,4623,2.447,4624,3.969,4625,2.447,4626,2.447,4627,2.447,4628,5.008,4629,2.447,4630,2.447,4631,2.447,4632,2.447,4633,2.447,4634,2.447,4635,2.447,4636,2.447,4637,2.447,4638,2.447,4639,2.447,4640,2.447,4641,3.969,4642,2.447,4643,2.447,4644,2.447,4645,2.447,4646,3.969,4647,2.447,4648,2.447,4649,2.447,4650,2.447,4651,2.447,4652,2.447,4653,2.447,4654,2.447,4655,2.447,4656,2.447,4657,2.447,4658,2.447,4659,2.447,4660,2.447,4661,3.969,4662,3.969,4663,2.447,4664,2.447,4665,2.447,4666,5.008,4667,2.447,4668,2.447,4669,2.447,4670,2.447,4671,2.447,4672,3.969,4673,2.447,4674,2.447,4675,2.447,4676,2.447,4677,3.969,4678,2.447,4679,2.447,4680,2.447,4681,2.447,4682,2.447,4683,2.447,4684,3.969,4685,2.447,4686,2.447,4687,2.447,4688,2.447,4689,2.447,4690,2.447,4691,2.447,4692,2.447,4693,2.447,4694,2.447,4695,2.447,4696,2.447,4697,2.447,4698,2.447,4699,2.447,4700,2.447,4701,2.447,4702,3.969,4703,2.447,4704,2.447,4705,2.447,4706,2.447,4707,2.447,4708,2.447,4709,2.447,4710,2.447,4711,2.447,4712,2.447,4713,2.447,4714,2.447,4715,2.447,4716,2.447,4717,2.447,4718,2.447,4719,2.447,4720,2.447,4721,2.447,4722,2.447,4723,2.447,4724,2.447,4725,2.447,4726,2.447,4727,2.447,4728,2.447,4729,2.447]],["title/license.html",[1182,2.915,3886,2.915,4505,3.576]],["body/license.html",[4,0.079,14,2.936,33,0.005,39,0.913,91,0.005,92,0.005,126,3.728,178,2.51,302,4.973,400,2.114,406,3.709,446,3.174,515,2.936,838,4.655,849,5.371,932,6.937,1170,5.089,1348,5.371,1439,4.973,1623,4.009,1867,5.399,1877,6.494,1995,4.009,2125,4.655,2294,5.399,2297,4.973,2782,5.399,2967,7.531,3311,4.401,3343,5.399,3508,4.973,3886,4.401,3910,5.399,4530,5.399,4730,5.399,4731,5.399,4732,9.357,4733,6.046,4734,6.046,4735,6.046,4736,6.046,4737,6.046,4738,7.676,4739,6.046,4740,6.046,4741,6.046,4742,6.046,4743,7.676,4744,6.046,4745,7.676,4746,7.676,4747,7.676,4748,6.046,4749,6.046,4750,6.046,4751,7.676,4752,8.433,4753,6.046,4754,6.046,4755,6.046,4756,8.433,4757,6.046,4758,7.676,4759,7.676,4760,7.676,4761,6.046,4762,6.046,4763,6.046,4764,6.046,4765,6.046,4766,6.046,4767,6.046,4768,6.046,4769,6.046,4770,6.046,4771,6.046,4772,6.046,4773,6.046,4774,6.046,4775,6.046,4776,6.046,4777,6.046,4778,6.046,4779,6.046,4780,6.046,4781,6.046,4782,6.046,4783,7.676,4784,6.046,4785,6.046,4786,6.046,4787,6.046,4788,6.046,4789,6.046,4790,6.046,4791,6.046,4792,6.046,4793,6.046,4794,6.046,4795,6.046]],["title/modules.html",[167,2.922]],["body/modules.html",[33,0.005,91,0.005,92,0.005,166,4.737,167,2.88,189,5.011,192,3.993,193,4.51,194,4.737,195,4.51,196,4.51,197,3.732,198,4.51,199,4.737,200,4.737,201,4.51,202,4.315,203,4.315,204,4.315,205,4.737,206,4.737,207,4.315,3161,8.358,4796,10.161,4797,10.161,4798,10.161]],["title/overview.html",[4537,5.432]],["body/overview.html",[2,1.04,33,0.006,91,0.003,92,0.003,96,1.527,134,0.653,140,1.464,153,5.962,165,1.15,166,5.751,167,1.56,168,1.56,169,1.632,170,1.632,171,1.595,172,1.632,173,3.148,174,3.148,175,3.148,176,2.444,177,1.56,178,1.464,189,7.669,190,3.148,191,3.148,192,5.381,193,6.522,194,5.751,195,5.676,196,5.676,197,5.458,198,5.676,199,5.962,200,6.757,201,6.078,202,5.815,203,6.046,204,5.98,205,6.638,206,6.482,207,6.24,252,5.431,473,3.148,474,3.148,475,3.148,476,5.962,600,4.991,661,3.148,663,3.148,664,3.148,665,4.383,666,4.873,667,4.873,668,4.873,678,4.3,988,3.148,989,3.148,993,3.148,994,3.148,995,3.148,996,5.962,1427,2.9,1495,3.148,1496,3.148,1497,3.148,1498,6.307,1533,3.148,1534,3.148,1536,3.148,1537,5.025,1549,5.431,1573,5.962,1574,5.676,1898,1.434,1964,3.148,1965,3.148,1966,3.148,2043,4.608,2093,3.148,2094,3.148,2209,4.608,2215,5.676,2321,3.148,2322,3.148,2518,5.431,2723,3.148,2725,3.148,2726,3.148,3060,3.148,3061,3.148,3062,3.148,3203,2.9,3224,3.148,3226,3.148,3227,3.148,3381,3.148,3383,3.148,3384,3.148,3521,4.608,3651,3.148,3653,3.148,3808,3.148,3809,3.148,3811,4.873,4056,4.608,4261,3.148,4262,3.148,4263,3.148,4537,2.9,4799,3.525,4800,3.525,4801,3.525,4802,3.525,4803,3.525]],["title/properties.html",[360,0.848,3964,3.084]],["body/properties.html",[12,2.021,33,0.006,91,0.005,92,0.005,360,1.121,483,3.248,1044,5.578,1995,5.08,3264,5.9,3311,5.578,3643,6.843,3886,5.578,4437,6.843,4730,6.843,4731,6.843]],["title/miscellaneous/typealiases.html",[4446,2.775,4804,5.799]],["body/miscellaneous/typealiases.html",[20,0.301,27,0.488,33,0.005,40,0.327,43,3.006,91,0.004,92,0.004,358,5.113,466,6.097,615,5.137,685,2.534,776,5.137,782,5.151,866,7.34,870,3.796,874,5.113,896,3.006,897,4.71,907,6.619,908,4.122,1104,3.796,1420,5.113,1450,6.619,1470,5.113,1491,6.097,1627,6.097,1865,5.113,1875,6.619,1918,4.72,1946,5.396,1948,4.71,1949,5.113,1950,7.34,1954,7.34,1955,6.097,1958,5.113,1959,6.619,1961,6.097,1985,5.113,1998,5.707,2118,5.113,2155,5.707,2578,5.113,2651,6.619,2685,5.113,2695,6.619,2851,5.113,2852,6.619,2860,6.619,2863,5.113,2877,6.619,2880,5.113,2881,6.619,2887,6.619,2925,5.113,2933,5.707,3315,5.113,3355,5.113,3377,6.097,3416,6.619,3689,5.113,3693,6.619,3696,5.113,3703,6.097,3752,6.097,3782,4.71,3791,5.707,3859,5.113,3864,6.619,4025,5.113,4086,5.707,4089,6.619,4102,6.619,4110,6.619,4113,6.619,4118,6.619,4129,6.097,4446,3.968,4503,5.113,4576,5.113,4805,5.725,4806,7.412,4807,5.725,4808,5.725,4809,5.725,4810,5.725,4811,5.725,4812,5.725,4813,5.725,4814,5.725,4815,5.725,4816,5.725,4817,5.725,4818,5.725,4819,5.725,4820,5.725,4821,5.725,4822,5.725,4823,7.412,4824,5.725,4825,5.725,4826,5.725,4827,5.725,4828,5.725,4829,5.725,4830,8.693,4831,5.725]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Attachment.html":{},"modules/AttachmentsModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateInitialDatasetDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"modules/DatablocksModule.html":{},"injectables/DatablocksService.html":{},"classes/DatasetListDto.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"classes/HistoryClass.html":{},"injectables/HistoryInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IDatasetList.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/ISampleFields.html":{},"interfaces/IScientificFilter.html":{},"classes/InitialDataset.html":{},"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"injectables/InstrumentsService.html":{},"interfaces/JWTUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapAuthGuard.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Logbook.html":{},"controllers/LogbooksController.html":{},"modules/LogbooksModule.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"modules/PoliciesModule.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"classes/QueryableClass.html":{},"injectables/RegisteredInterceptor.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"classes/TechniqueClass.html":{},"injectables/UTCTimeInterceptor.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatablockDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateInstrumentDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateOrigDatablockDto.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdatePublishedDataDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUserIdentityDto.html":{},"classes/UpdateUserSettingsDto.html":{},"classes/UpdateWherePolicyDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"classes/UserIdentity.html":{},"interfaces/UserPayload.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":1721,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LogbooksService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/SamplesService.html":{},"classes/UpdateDatasetDto.html":{},"injectables/UsersService.html":{}}}],["0.1.13",{"_index":4441,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":4421,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":4420,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":4436,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":2427,"title":{},"body":{"injectables/JobsService.html":{},"injectables/LogbooksService.html":{},"index.html":{}}}],["1.0",{"_index":841,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["1.0.0",{"_index":4439,"title":{},"body":{"dependencies.html":{}}}],["1.17.3",{"_index":4424,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":4418,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":4410,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":4415,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":4414,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":3273,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["100y",{"_index":4403,"title":{},"body":{"injectables/UsersService.html":{}}}],["11.4.0",{"_index":4430,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":4800,"title":{},"body":{"overview.html":{}}}],["16",{"_index":3469,"title":{},"body":{"classes/PublishedData.html":{}}}],["16.0.3",{"_index":4423,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":4799,"title":{},"body":{"overview.html":{}}}],["1].origin_server_ts",{"_index":2776,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["1h",{"_index":4395,"title":{},"body":{"injectables/UsersService.html":{}}}],["2",{"_index":1427,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{},"overview.html":{}}}],["2.0.1",{"_index":4413,"title":{},"body":{"dependencies.html":{}}}],["20.500.12345",{"_index":1876,"title":{},"body":{"classes/HistoryClass.html":{}}}],["20.500.12345/'})@prop({type",{"_index":1868,"title":{},"body":{"classes/HistoryClass.html":{}}}],["200",{"_index":575,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InstrumentsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/UsersController.html":{}}}],["201",{"_index":2950,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"controllers/UsersController.html":{}}}],["2020",{"_index":4725,"title":{},"body":{"index.html":{}}}],["2022",{"_index":4734,"title":{},"body":{"license.html":{}}}],["2023/06/15",{"_index":4509,"title":{},"body":{"index.html":{}}}],["22",{"_index":843,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["24",{"_index":4803,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1388,"title":{},"body":{"classes/CreateUserSettingsDto.html":{},"controllers/OrigDatablocksController.html":{},"classes/UserSettings.html":{}}}],["3",{"_index":3311,"title":{},"body":{"injectables/PoliciesService.html":{},"classes/Policy.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["3.0.0",{"_index":4411,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":4438,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":4428,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":4432,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":4654,"title":{},"body":{"index.html":{}}}],["3339",{"_index":1167,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Job.html":{},"classes/MeasurementPeriodClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["3339.'})@prop({type",{"_index":2138,"title":{},"body":{"classes/Job.html":{}}}],["3600",{"_index":4614,"title":{},"body":{"index.html":{}}}],["4",{"_index":1729,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["4.0.0",{"_index":4437,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["4.17.21",{"_index":4426,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":4425,"title":{},"body":{"dependencies.html":{}}}],["42",{"_index":4801,"title":{},"body":{"overview.html":{}}}],["5",{"_index":4608,"title":{},"body":{"index.html":{}}}],["5.0.0",{"_index":4443,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":4419,"title":{},"body":{"dependencies.html":{}}}],["5.1.8",{"_index":4435,"title":{},"body":{"dependencies.html":{}}}],["5.6",{"_index":1163,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Job.html":{},"classes/MeasurementPeriodClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["5000",{"_index":4610,"title":{},"body":{"index.html":{}}}],["6.3.2",{"_index":4409,"title":{},"body":{"dependencies.html":{}}}],["6.7.8",{"_index":4434,"title":{},"body":{"dependencies.html":{}}}],["64",{"_index":3472,"title":{},"body":{"classes/PublishedData.html":{}}}],["676548",{"_index":4728,"title":{},"body":{"index.html":{}}}],["7",{"_index":3310,"title":{},"body":{"injectables/PoliciesService.html":{},"classes/Policy.html":{}}}],["7.1.7",{"_index":4417,"title":{},"body":{"dependencies.html":{}}}],["7.18.6",{"_index":4408,"title":{},"body":{"dependencies.html":{}}}],["7.4.3",{"_index":4431,"title":{},"body":{"dependencies.html":{}}}],["7.5.7",{"_index":4444,"title":{},"body":{"dependencies.html":{}}}],["78",{"_index":4802,"title":{},"body":{"overview.html":{}}}],["7ff95309f650",{"_index":4700,"title":{},"body":{"index.html":{}}}],["8",{"_index":2492,"title":{},"body":{"injectables/JobsService.html":{},"controllers/PublishedDataController.html":{}}}],["8\\ndoi",{"_index":3607,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["9.0.0",{"_index":4412,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":361,"title":{},"body":{"classes/Attachment.html":{},"modules/AttachmentsModule.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateInitialDatasetDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/Datablock.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{},"interfaces/IDatasetFields.html":{},"classes/InitialDataset.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"interfaces/JWTUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"modules/SamplesModule.html":{},"classes/User.html":{},"classes/UserSettings.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["a.content.body",{"_index":2814,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["a.messages[a.messages.length",{"_index":2775,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["a.origin_server_ts",{"_index":2808,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["a.sender.replace",{"_index":2811,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["a[k",{"_index":4354,"title":{},"body":{"injectables/UsersService.html":{}}}],["a[k].concat(b[k",{"_index":4355,"title":{},"body":{"injectables/UsersService.html":{}}}],["aa1jiw3kv3mqlgfwhrre3godkh6xreawro",{"_index":4626,"title":{},"body":{"index.html":{}}}],["ability",{"_index":870,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/IPolicyHandler.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{},"miscellaneous/typealiases.html":{}}}],["ability.can(action",{"_index":4202,"title":{},"body":{"controllers/UsersController.html":{}}}],["ability.can(action.create",{"_index":3012,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{}}}],["ability.can(action.delete",{"_index":2319,"title":{},"body":{"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{}}}],["ability.can(action.instrumentcreate",{"_index":2061,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["ability.can(action.instrumentdelete",{"_index":2089,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["ability.can(action.instrumentread",{"_index":2069,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["ability.can(action.instrumentupdate",{"_index":2085,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["ability.can(action.listall",{"_index":3178,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["ability.can(action.listown",{"_index":3180,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["ability.can(action.read",{"_index":2300,"title":{},"body":{"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{}}}],["ability.can(action.update",{"_index":2313,"title":{},"body":{"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{}}}],["ability.can(action.usercreateany",{"_index":4215,"title":{},"body":{"controllers/UsersController.html":{}}}],["ability.can(action.usercreatejwt",{"_index":4237,"title":{},"body":{"controllers/UsersController.html":{}}}],["ability.can(action.usercreateown",{"_index":4214,"title":{},"body":{"controllers/UsersController.html":{}}}],["ability.can(action.userdeleteany",{"_index":4230,"title":{},"body":{"controllers/UsersController.html":{}}}],["ability.can(action.userdeleteown",{"_index":4229,"title":{},"body":{"controllers/UsersController.html":{}}}],["ability.can(action.userreadany",{"_index":4063,"title":{},"body":{"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["ability.can(action.userreadown",{"_index":4062,"title":{},"body":{"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["ability.can(action.userupdateany",{"_index":4223,"title":{},"body":{"controllers/UsersController.html":{}}}],["ability.can(action.userupdateown",{"_index":4222,"title":{},"body":{"controllers/UsersController.html":{}}}],["ability.factory",{"_index":686,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/DatasetsModule.html":{},"interfaces/IPolicyHandler.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/LogbooksController.html":{},"modules/LogbooksModule.html":{},"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["ability.factory.ts",{"_index":866,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["ability.factory.ts:51",{"_index":869,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["abilitybuilder",{"_index":871,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["abilityclass",{"_index":872,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["above",{"_index":4745,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":3977,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["abstract",{"_index":136,"title":{},"body":{"classes/AccessGroupService.html":{},"modules/AppModule.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/IScientificFilter.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{}}}],["abstract.'})@isoptional()@isstring",{"_index":1236,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["abstract.'})@prop({type",{"_index":3357,"title":{},"body":{"classes/ProposalClass.html":{}}}],["acc",{"_index":2255,"title":{},"body":{"controllers/JobsController.html":{}}}],["acc.add(file.path",{"_index":2261,"title":{},"body":{"controllers/JobsController.html":{}}}],["acc.push",{"_index":2273,"title":{},"body":{"controllers/JobsController.html":{}}}],["acc[dataset.pid",{"_index":2262,"title":{},"body":{"controllers/JobsController.html":{}}}],["accepts",{"_index":4680,"title":{},"body":{"index.html":{}}}],["access",{"_index":16,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/Attachment.html":{},"modules/AuthModule.html":{},"classes/BuildOpenIdClient.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/Datablock.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["access_group_service_api_url",{"_index":4599,"title":{},"body":{"index.html":{}}}],["access_groups_service_token",{"_index":4592,"title":{},"body":{"index.html":{}}}],["access_groups_static_values",{"_index":4588,"title":{},"body":{"index.html":{}}}],["access_token",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessgroupfromgraphqlapiservice",{"_index":1,"title":{"injectables/AccessGroupFromGraphQLApiService.html":{}},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["accessgroupfrommultipleprovidersservice",{"_index":93,"title":{"injectables/AccessGroupFromMultipleProvidersService.html":{}},"body":{"injectables/AccessGroupFromMultipleProvidersService.html":{}}}],["accessgroupfrompayloadservice",{"_index":107,"title":{"injectables/AccessGroupFromPayloadService.html":{}},"body":{"injectables/AccessGroupFromPayloadService.html":{}}}],["accessgroupfromstaticvaluesservice",{"_index":123,"title":{"injectables/AccessGroupFromStaticValuesService.html":{}},"body":{"injectables/AccessGroupFromStaticValuesService.html":{}}}],["accessgroupproperty",{"_index":806,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{},"interfaces/UserPayload.html":{}}}],["accessgroupprovider",{"_index":102,"title":{},"body":{"injectables/AccessGroupFromMultipleProvidersService.html":{}}}],["accessgroupprovider.getaccessgroups(userpayload",{"_index":105,"title":{},"body":{"injectables/AccessGroupFromMultipleProvidersService.html":{}}}],["accessgroupproviders",{"_index":99,"title":{},"body":{"injectables/AccessGroupFromMultipleProvidersService.html":{}}}],["accessgroups",{"_index":79,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"modules/AppModule.html":{},"classes/Attachment.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/Datablock.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"classes/UserProfile.html":{},"injectables/UsersService.html":{}}}],["accessgroups.e2e",{"_index":4384,"title":{},"body":{"injectables/UsersService.html":{}}}],["accessgroups.join",{"_index":83,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromPayloadService.html":{}}}],["accessgroups.push(\"globalaccess",{"_index":4340,"title":{},"body":{"injectables/UsersService.html":{}}}],["accessgroups.push(...accessgroupsfromprovider",{"_index":106,"title":{},"body":{"injectables/AccessGroupFromMultipleProvidersService.html":{}}}],["accessgroups.push(role",{"_index":4337,"title":{},"body":{"injectables/UsersService.html":{}}}],["accessgroupservice",{"_index":19,"title":{"classes/AccessGroupService.html":{}},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"modules/AuthModule.html":{},"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"injectables/UsersService.html":{}}}],["accessgroupservice:13",{"_index":131,"title":{},"body":{"injectables/AccessGroupFromStaticValuesService.html":{}}}],["accessgroupservice:14",{"_index":100,"title":{},"body":{"injectables/AccessGroupFromMultipleProvidersService.html":{}}}],["accessgroupservice:16",{"_index":114,"title":{},"body":{"injectables/AccessGroupFromPayloadService.html":{}}}],["accessgroupservice:24",{"_index":52,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["accessgroupservicefactory",{"_index":683,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["accessgroupsfromprovider",{"_index":104,"title":{},"body":{"injectables/AccessGroupFromMultipleProvidersService.html":{}}}],["accessgroupsorig",{"_index":4335,"title":{},"body":{"injectables/UsersService.html":{}}}],["accessgroupsproperty",{"_index":117,"title":{},"body":{"injectables/AccessGroupFromPayloadService.html":{}}}],["accessible",{"_index":1090,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/Datablock.html":{}}}],["accessible.'})@isint",{"_index":1074,"title":{},"body":{"classes/CreateDatablockDto.html":{}}}],["accessible.'})@prop({type",{"_index":1487,"title":{},"body":{"classes/Datablock.html":{}}}],["accesstoken",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LogbooksService.html":{},"injectables/UsersService.html":{}}}],["accesstoken._id",{"_index":4399,"title":{},"body":{"injectables/UsersService.html":{}}}],["accesstoken.currentgroups",{"_index":4400,"title":{},"body":{"injectables/UsersService.html":{}}}],["accesstoken.token",{"_index":2770,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["according",{"_index":1030,"title":{},"body":{"classes/CreateCustomJwt.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Job.html":{},"classes/LifecycleClass.html":{},"classes/MeasurementPeriodClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["account",{"_index":4331,"title":{},"body":{"injectables/UsersService.html":{}}}],["account.email",{"_index":4345,"title":{},"body":{"injectables/UsersService.html":{}}}],["account.username",{"_index":4344,"title":{},"body":{"injectables/UsersService.html":{}}}],["accountpromises",{"_index":4329,"title":{},"body":{"injectables/UsersService.html":{}}}],["accounts",{"_index":1158,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/MeasurementPeriodClass.html":{},"index.html":{}}}],["acia",{"_index":3893,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["acknowledgments",{"_index":4713,"title":{},"body":{"index.html":{}}}],["acquired",{"_index":1012,"title":{},"body":{"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/OwnableDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["action",{"_index":905,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["action.enum",{"_index":906,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["action.update",{"_index":968,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["action.usercreateany",{"_index":4217,"title":{},"body":{"controllers/UsersController.html":{}}}],["action.usercreateown",{"_index":4218,"title":{},"body":{"controllers/UsersController.html":{}}}],["action.userreadany",{"_index":4209,"title":{},"body":{"controllers/UsersController.html":{}}}],["action.userreadown",{"_index":4210,"title":{},"body":{"controllers/UsersController.html":{}}}],["action.userupdateany",{"_index":4225,"title":{},"body":{"controllers/UsersController.html":{}}}],["action.userupdateown",{"_index":4226,"title":{},"body":{"controllers/UsersController.html":{}}}],["actions",{"_index":4148,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["actions.map",{"_index":4201,"title":{},"body":{"controllers/UsersController.html":{}}}],["actions.some((action",{"_index":4203,"title":{},"body":{"controllers/UsersController.html":{}}}],["adapter",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["add",{"_index":2445,"title":{},"body":{"injectables/JobsService.html":{},"injectables/LdapStrategy.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["addcreatedbyfields",{"_index":523,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["addcreatedbyfields(createattachmentdto",{"_index":533,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["addcreatedbyfields(createdatablockdto",{"_index":1521,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["addcreatedbyfields(createdatasetdto",{"_index":1632,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["addcreatedbyfields(createorigdatablockdto",{"_index":3085,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["addcreatedbyfields(createpolicydto",{"_index":3271,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["addcreatedbyfields(createproposaldto",{"_index":3408,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["addcreatedbyfields(createsampledto",{"_index":3840,"title":{},"body":{"injectables/SamplesService.html":{}}}],["adddefaultpolicy",{"_index":3235,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["adddefaultpolicy(ownergroup",{"_index":3240,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["added",{"_index":427,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["addfields",{"_index":3096,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["adding",{"_index":1413,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{}}}],["additional",{"_index":398,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/Datablock.html":{},"injectables/JobsService.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["additionallogouttasks",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["additionallogouttasks(req",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{}}}],["additionalmsg",{"_index":2452,"title":{},"body":{"injectables/JobsService.html":{}}}],["address",{"_index":4668,"title":{},"body":{"index.html":{}}}],["addresses",{"_index":3321,"title":{},"body":{"classes/Policy.html":{}}}],["addupdatedbyfield",{"_index":524,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["addupdatedbyfield(updateattachmentdto",{"_index":538,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["addupdatedbyfield(updatedatablockdto",{"_index":1525,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["addupdatedbyfield(updateddatasetinput",{"_index":1677,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["addupdatedbyfield(updateorigdatablockdto",{"_index":3103,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["addupdatedbyfield(updatepolicydto",{"_index":3281,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["addupdatedbyfield(updateproposaldto",{"_index":3414,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["addupdatedbyfield(updatepublisheddatadto",{"_index":3674,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["addupdatedbyfield(updatesampledto",{"_index":3855,"title":{},"body":{"injectables/SamplesService.html":{}}}],["admin",{"_index":143,"title":{},"body":{"controllers/AdminController.html":{},"injectables/CaslAbilityFactory.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["admin.controller",{"_index":180,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.service",{"_index":154,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admin/admin.module",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["admin_groups",{"_index":928,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["admincontroller",{"_index":139,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admingroups",{"_index":911,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["admingroups.includes(g",{"_index":926,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["adminmodule",{"_index":166,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminservice",{"_index":153,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"overview.html":{}}}],["advised",{"_index":4792,"title":{},"body":{"license.html":{}}}],["affected",{"_index":1727,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["affiliation",{"_index":1282,"title":{},"body":{"classes/CreatePublishedDataDto.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{}}}],["affiliation'})@prop({type",{"_index":3420,"title":{},"body":{"classes/PublishedData.html":{}}}],["again",{"_index":2594,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["age",{"_index":2878,"title":{},"body":{"classes/Message.html":{}}}],["agreement",{"_index":4727,"title":{},"body":{"index.html":{}}}],["aka",{"_index":4676,"title":{},"body":{"index.html":{}}}],["algorithm",{"_index":1055,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{}}}],["aliases",{"_index":4805,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":2515,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/PoliciesService.html":{}}}],["allowany",{"_index":155,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{}}}],["allowany()@apioperation({summary",{"_index":3503,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["allowany()@get('config",{"_index":147,"title":{},"body":{"controllers/AdminController.html":{}}}],["allowany()@get('theme",{"_index":149,"title":{},"body":{"controllers/AdminController.html":{}}}],["allowany()@httpcode(httpstatus.ok)@post('/isvalid')@apioperation({summary",{"_index":2983,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["allowany()@post('jwt')@apioperation({summary",{"_index":4173,"title":{},"body":{"controllers/UsersController.html":{}}}],["allowany()@post()@apiresponse({status",{"_index":2191,"title":{},"body":{"controllers/JobsController.html":{}}}],["allowany()@useguards(oidcauthguard)@get('oidc",{"_index":590,"title":{},"body":{"controllers/AuthController.html":{}}}],["allowany()@useguards(oidcauthguard)@get('oidc/callback",{"_index":567,"title":{},"body":{"controllers/AuthController.html":{}}}],["allowany()@useinterceptors(registeredinterceptor)@get('/count')@apiquery({name",{"_index":3496,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["allowany()@useinterceptors(registeredinterceptor)@get()@apiquery({name",{"_index":3500,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["allowed",{"_index":405,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["already",{"_index":2066,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"classes/LifecycleClass.html":{},"injectables/PoliciesService.html":{}}}],["always",{"_index":2483,"title":{},"body":{"injectables/JobsService.html":{}}}],["and/or",{"_index":2782,"title":{},"body":{"injectables/LogbooksService.html":{},"license.html":{}}}],["anonymous",{"_index":4174,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["any.decorator",{"_index":157,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{}}}],["anymore",{"_index":2477,"title":{},"body":{"injectables/JobsService.html":{}}}],["anywhere",{"_index":2972,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["api",{"_index":10,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/MeasurementPeriodClass.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["apibearerauth",{"_index":603,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["apibody",{"_index":604,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/UsersController.html":{}}}],["apibody({type",{"_index":551,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":605,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InstrumentsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{}}}],["apiparam",{"_index":3004,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{}}}],["apiproperty",{"_index":460,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"classes/LifecycleClass.html":{},"classes/Logbook.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/TechniqueClass.html":{},"classes/User.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{}}}],["apiproperty()@prop",{"_index":2690,"title":{},"body":{"classes/Logbook.html":{}}}],["apiproperty()@prop({required",{"_index":4030,"title":{},"body":{"classes/User.html":{}}}],["apiproperty()@prop({type",{"_index":3316,"title":{},"body":{"classes/Policy.html":{},"classes/User.html":{},"classes/UserRole.html":{}}}],["apiproperty({description",{"_index":2121,"title":{},"body":{"classes/Job.html":{},"classes/Policy.html":{}}}],["apiproperty({required",{"_index":1025,"title":{},"body":{"classes/CreateCustomJwt.html":{},"classes/CreateUserDto.html":{},"classes/CredentialsDto.html":{}}}],["apiproperty({type",{"_index":374,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserSettingsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"classes/LifecycleClass.html":{},"classes/Logbook.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/TechniqueClass.html":{},"classes/UpdateDatasetDto.html":{},"classes/UserSettings.html":{}}}],["apiquery",{"_index":2046,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{}}}],["apiresponse",{"_index":606,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":151,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateProposalDto.html":{},"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["apitags(\"admin",{"_index":158,"title":{},"body":{"controllers/AdminController.html":{}}}],["apitags(\"auth",{"_index":617,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags(\"instruments",{"_index":1120,"title":{},"body":{"classes/CreateInstrumentDto.html":{},"controllers/InstrumentsController.html":{}}}],["apitags(\"jobs",{"_index":2217,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags(\"logbooks",{"_index":2715,"title":{},"body":{"controllers/LogbooksController.html":{}}}],["apitags(\"origdatablocks",{"_index":3010,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["apitags(\"policies",{"_index":3157,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["apitags(\"proposals",{"_index":1273,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["apitags(\"published",{"_index":3531,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["apitags(\"user",{"_index":4059,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["apitags(\"users",{"_index":4195,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiurl",{"_index":28,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["app",{"_index":4558,"title":{},"body":{"index.html":{}}}],["app_guard",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["appability",{"_index":908,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/IPolicyHandler.html":{},"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{},"miscellaneous/typealiases.html":{}}}],["appendsiunittophysicalquantity",{"_index":1833,"title":{},"body":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{}}}],["application/json",{"_index":88,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["application/json;charset=utf",{"_index":3613,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["application/xml;charset=utf",{"_index":3600,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["applied",{"_index":4689,"title":{},"body":{"index.html":{}}}],["apply",{"_index":2015,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{}}}],["applying",{"_index":2790,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["applypolicyandsendemail",{"_index":2332,"title":{},"body":{"injectables/JobsService.html":{}}}],["applypolicyandsendemail(jobtype",{"_index":2340,"title":{},"body":{"injectables/JobsService.html":{}}}],["appmodule",{"_index":189,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["archivable",{"_index":2179,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/LifecycleClass.html":{},"miscellaneous/enumerations.html":{}}}],["archive",{"_index":1048,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/Datablock.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/LifecycleClass.html":{},"classes/Policy.html":{},"classes/PublishedData.html":{},"miscellaneous/enumerations.html":{}}}],["archive'})@prop({type",{"_index":3461,"title":{},"body":{"classes/PublishedData.html":{}}}],["archive.'})@isstring",{"_index":1079,"title":{},"body":{"classes/CreateDatablockDto.html":{}}}],["archive.'})@prop({type",{"_index":1489,"title":{},"body":{"classes/Datablock.html":{},"classes/LifecycleClass.html":{}}}],["archived",{"_index":1091,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/Datablock.html":{},"classes/LifecycleClass.html":{},"classes/Policy.html":{},"index.html":{}}}],["archived.'})@isint",{"_index":1072,"title":{},"body":{"classes/CreateDatablockDto.html":{}}}],["archived.'})@prop({type",{"_index":1485,"title":{},"body":{"classes/Datablock.html":{}}}],["archiveemailnotification",{"_index":1209,"title":{},"body":{"classes/CreatePolicyDto.html":{},"injectables/JobsService.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{}}}],["archiveemailstobenotified",{"_index":1210,"title":{},"body":{"classes/CreatePolicyDto.html":{},"injectables/JobsService.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{}}}],["archiveemailstobenotified.join",{"_index":2482,"title":{},"body":{"injectables/JobsService.html":{}}}],["archiveid",{"_index":1039,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/Datablock.html":{},"interfaces/IDatablockFields.html":{}}}],["archivemanager",{"_index":2446,"title":{},"body":{"injectables/JobsService.html":{},"miscellaneous/enumerations.html":{}}}],["archiveretentiontime",{"_index":2579,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["archivereturnmessage",{"_index":2437,"title":{},"body":{"injectables/JobsService.html":{},"classes/LifecycleClass.html":{}}}],["archivestatusmessage",{"_index":2433,"title":{},"body":{"injectables/JobsService.html":{},"classes/LifecycleClass.html":{}}}],["archiving",{"_index":2598,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["argumentmetadata",{"_index":1800,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["arising",{"_index":4789,"title":{},"body":{"license.html":{}}}],["array",{"_index":1190,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{},"classes/Datablock.html":{},"classes/Job.html":{},"classes/Logbook.html":{},"classes/OrigDatablock.html":{},"classes/Policy.html":{},"classes/PublishedData.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{}}}],["array.isarray(payload",{"_index":4255,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["array.isarray(payload[accessgroupsproperty",{"_index":121,"title":{},"body":{"injectables/AccessGroupFromPayloadService.html":{}}}],["arraynotempty",{"_index":1081,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{}}}],["articles",{"_index":3486,"title":{},"body":{"classes/PublishedData.html":{}}}],["articles'})@prop({type",{"_index":3453,"title":{},"body":{"classes/PublishedData.html":{}}}],["asap",{"_index":2137,"title":{},"body":{"classes/Job.html":{}}}],["assigned",{"_index":4590,"title":{},"body":{"index.html":{}}}],["associated",{"_index":2947,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"classes/UpdateDatasetDto.html":{}}}],["assuming",{"_index":2608,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["async",{"_index":22,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"controllers/AdminController.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/DatablocksService.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"injectables/HistoryInterceptor.html":{},"injectables/InitialDatasetsService.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LogbooksController.html":{},"modules/LogbooksModule.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/OidcStrategy.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["attach",{"_index":4556,"title":{},"body":{"index.html":{}}}],["attachment",{"_index":357,"title":{"classes/Attachment.html":{}},"body":{"classes/Attachment.html":{},"modules/AttachmentsModule.html":{},"injectables/AttachmentsService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/ProposalClass.html":{},"controllers/PublishedDataController.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["attachment.dto",{"_index":518,"title":{},"body":{"injectables/AttachmentsService.html":{},"classes/UpdateAttachmentDto.html":{}}}],["attachment.dto.ts",{"_index":1000,"title":{},"body":{"classes/CreateAttachmentDto.html":{},"classes/UpdateAttachmentDto.html":{}}}],["attachment.dto.ts:11",{"_index":1009,"title":{},"body":{"classes/CreateAttachmentDto.html":{}}}],["attachment.dto.ts:13",{"_index":3875,"title":{},"body":{"classes/UpdateAttachmentDto.html":{}}}],["attachment.dto.ts:14",{"_index":1003,"title":{},"body":{"classes/CreateAttachmentDto.html":{}}}],["attachment.dto.ts:17",{"_index":3877,"title":{},"body":{"classes/UpdateAttachmentDto.html":{}}}],["attachment.dto.ts:18",{"_index":1005,"title":{},"body":{"classes/CreateAttachmentDto.html":{}}}],["attachment.dto.ts:21",{"_index":3878,"title":{},"body":{"classes/UpdateAttachmentDto.html":{}}}],["attachment.dto.ts:22",{"_index":1007,"title":{},"body":{"classes/CreateAttachmentDto.html":{}}}],["attachment.dto.ts:26",{"_index":1008,"title":{},"body":{"classes/CreateAttachmentDto.html":{}}}],["attachment.dto.ts:7",{"_index":1006,"title":{},"body":{"classes/CreateAttachmentDto.html":{}}}],["attachment.dto.ts:9",{"_index":3876,"title":{},"body":{"classes/UpdateAttachmentDto.html":{}}}],["attachment.name",{"_index":481,"title":{},"body":{"modules/AttachmentsModule.html":{}}}],["attachment.thumbnail",{"_index":3571,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["attachmentdocument",{"_index":466,"title":{},"body":{"classes/Attachment.html":{},"injectables/AttachmentsService.html":{},"miscellaneous/typealiases.html":{}}}],["attachmentmodel",{"_index":498,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["attachments",{"_index":3119,"title":{},"body":{"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["attachments.service",{"_index":478,"title":{},"body":{"modules/AttachmentsModule.html":{}}}],["attachments/attachments.module",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["attachmentschema",{"_index":471,"title":{},"body":{"classes/Attachment.html":{},"modules/AttachmentsModule.html":{},"classes/ProposalClass.html":{}}}],["attachmentsmodule",{"_index":192,"title":{"modules/AttachmentsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"modules/DatasetsModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"modules.html":{},"overview.html":{}}}],["attachmentsservice",{"_index":476,"title":{"injectables/AttachmentsService.html":{}},"body":{"modules/AttachmentsModule.html":{},"injectables/AttachmentsService.html":{},"controllers/PublishedDataController.html":{},"overview.html":{}}}],["auth",{"_index":542,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PublishedDataController.html":{},"index.html":{}}}],["auth.controller",{"_index":673,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":2499,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["auth.guard.ts:10",{"_index":2503,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:15",{"_index":2505,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:25",{"_index":2507,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":601,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BuildOpenIdClient.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["auth/auth.module",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/jwt",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/interfaces/jwt",{"_index":4189,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth/ldap",{"_index":584,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":540,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{}}}],["authenticate",{"_index":554,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["authenticated",{"_index":2275,"title":{},"body":{"controllers/JobsController.html":{}}}],["authenticateduser",{"_index":4070,"title":{},"body":{"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["authenticateduser._id",{"_index":4074,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["authentication",{"_index":4593,"title":{},"body":{"index.html":{}}}],["authenticity,confidentiality,integrity",{"_index":3894,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["authguard",{"_index":2509,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LdapAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"injectables/OidcAuthGuard.html":{}}}],["authguard(\"jwt",{"_index":2510,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard(\"ldap",{"_index":2545,"title":{},"body":{"injectables/LdapAuthGuard.html":{}}}],["authguard(\"local",{"_index":2664,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authguard(\"oidc",{"_index":2911,"title":{},"body":{"injectables/OidcAuthGuard.html":{}}}],["authmodule",{"_index":193,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PoliciesModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3643,"title":{},"body":{"controllers/PublishedDataController.html":{},"properties.html":{}}}],["author.split",{"_index":3647,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["authorised",{"_index":3302,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["authorization",{"_index":2768,"title":{},"body":{"injectables/LogbooksService.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["authorized",{"_index":4200,"title":{},"body":{"controllers/UsersController.html":{}}}],["authors",{"_index":1283,"title":{},"body":{"classes/CreatePublishedDataDto.html":{},"classes/PublishedData.html":{}}}],["authservice",{"_index":600,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["authstrategy",{"_index":790,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"interfaces/JWTUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{},"classes/User.html":{},"classes/UserIdentity.html":{},"injectables/UsersService.html":{}}}],["auto",{"_index":1263,"title":{},"body":{"classes/CreateProposalDto.html":{},"classes/ProposalClass.html":{}}}],["autoarchive",{"_index":1211,"title":{},"body":{"classes/CreatePolicyDto.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{}}}],["autoarchivedelay",{"_index":1212,"title":{},"body":{"classes/CreatePolicyDto.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{}}}],["autofilled",{"_index":3930,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["autologout",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{}}}],["automatically",{"_index":434,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/Job.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["automatically'})@prop({type",{"_index":3330,"title":{},"body":{"classes/Policy.html":{}}}],["av",{"_index":1557,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["av(ailabilty)=medium",{"_index":3897,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["av=medium,co=low''})@isoptional()@isstring",{"_index":3898,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["availability",{"_index":3895,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["available",{"_index":409,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateSampleDto.html":{},"classes/Datablock.html":{},"classes/LifecycleClass.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["available.'})@isboolean()@isoptional",{"_index":1341,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["available.'})@isoptional()@isboolean",{"_index":3937,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["available.'})@prop({type",{"_index":3786,"title":{},"body":{"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["await",{"_index":77,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"injectables/HistoryInterceptor.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/OidcStrategy.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{}}}],["b",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogbooksService.html":{},"injectables/UsersService.html":{}}}],["b.content.body",{"_index":2815,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["b.messages[b.messages.length",{"_index":2777,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["b.origin_server_ts",{"_index":2809,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["b.sender.replace",{"_index":2812,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["b[k",{"_index":4356,"title":{},"body":{"injectables/UsersService.html":{}}}],["babel/plugin",{"_index":4407,"title":{},"body":{"dependencies.html":{}}}],["back",{"_index":1089,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/Datablock.html":{}}}],["back.'})@isstring",{"_index":1052,"title":{},"body":{"classes/CreateDatablockDto.html":{}}}],["back.'})@prop({type",{"_index":1472,"title":{},"body":{"classes/Datablock.html":{}}}],["backend",{"_index":3264,"title":{},"body":{"injectables/PoliciesService.html":{},"controllers/UserIdentitiesController.html":{},"index.html":{},"properties.html":{}}}],["bad",{"_index":2442,"title":{},"body":{"injectables/JobsService.html":{}}}],["bad.length",{"_index":2447,"title":{},"body":{"injectables/JobsService.html":{}}}],["badrequestexception",{"_index":3002,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["badrequestexception(\"invalid",{"_index":3015,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["barebone",{"_index":4571,"title":{},"body":{"index.html":{}}}],["base",{"_index":3471,"title":{},"body":{"classes/PublishedData.html":{},"index.html":{}}}],["base64",{"_index":389,"title":{},"body":{"classes/Attachment.html":{},"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["base64}'.'})@prop({type",{"_index":395,"title":{},"body":{"classes/Attachment.html":{}}}],["based",{"_index":3303,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["baseurl",{"_index":2737,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["basic",{"_index":840,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["bcrypt",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["beamline",{"_index":1178,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/MeasurementPeriodClass.html":{}}}],["bearer",{"_index":2769,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["became",{"_index":3907,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["become",{"_index":2612,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["becomes",{"_index":3333,"title":{},"body":{"classes/Policy.html":{}}}],["before",{"_index":2626,"title":{},"body":{"classes/LifecycleClass.html":{},"classes/Policy.html":{}}}],["begin",{"_index":1934,"title":{},"body":{"interfaces/IDatasetFields.html":{},"interfaces/IDateRange.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{}}}],["behaviour",{"_index":634,"title":{},"body":{"controllers/AuthController.html":{}}}],["belongs",{"_index":927,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{}}}],["belongs.'})@prop({type",{"_index":1483,"title":{},"body":{"classes/Datablock.html":{},"classes/OrigDatablock.html":{}}}],["below",{"_index":4580,"title":{},"body":{"index.html":{}}}],["belt",{"_index":2480,"title":{},"body":{"injectables/JobsService.html":{}}}],["better",{"_index":1883,"title":{},"body":{"classes/HistoryClass.html":{}}}],["between",{"_index":1327,"title":{},"body":{"classes/CreateRelationshipDto.html":{},"controllers/PublishedDataController.html":{},"classes/RelationshipClass.html":{}}}],["binary",{"_index":4738,"title":{},"body":{"license.html":{}}}],["binary\").tostring",{"_index":834,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["bind_dn",{"_index":4617,"title":{},"body":{"index.html":{}}}],["bits",{"_index":1454,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{}}}],["bits.'})@isstring()@isoptional",{"_index":1464,"title":{},"body":{"classes/DataFileDto.html":{}}}],["bits.'})@prop({type",{"_index":1440,"title":{},"body":{"classes/DataFile.html":{}}}],["blacklist",{"_index":1692,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["blacklist.some((regex",{"_index":1714,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["blake2b",{"_index":1492,"title":{},"body":{"classes/Datablock.html":{},"classes/OrigDatablock.html":{}}}],["blake2b.'})@prop({type",{"_index":1478,"title":{},"body":{"classes/Datablock.html":{},"classes/OrigDatablock.html":{}}}],["block",{"_index":2259,"title":{},"body":{"controllers/JobsController.html":{}}}],["block.datafilelist.foreach((file",{"_index":2260,"title":{},"body":{"controllers/JobsController.html":{}}}],["body",{"_index":2038,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"classes/MessageContent.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IPolicyHandler.html":{},"classes/LifecycleClass.html":{},"controllers/OrigDatablocksController.html":{},"classes/Policy.html":{},"guards/RolesGuard.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":171,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"modules/DatablocksModule.html":{},"modules/DatasetsModule.html":{},"modules/InitialDatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/JobsModule.html":{},"modules/LogbooksModule.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"modules/UsersModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":3159,"title":{},"body":{"controllers/PoliciesController.html":{},"controllers/UserIdentitiesController.html":{},"index.html":{}}}],["break",{"_index":2239,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["brightness",{"_index":4729,"title":{},"body":{"index.html":{}}}],["broker",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"controllers/JobsController.html":{},"dependencies.html":{},"index.html":{}}}],["browse",{"_index":4798,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":4796,"title":{},"body":{"modules.html":{}}}],["bsd",{"_index":4730,"title":{},"body":{"license.html":{},"properties.html":{}}}],["buffer.from(payload.thumbnailphoto",{"_index":2567,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["buffer.from(userinfo.thumbnailphoto",{"_index":833,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["build",{"_index":766,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/OidcStrategy.html":{}}}],["buildopenidclient",{"_index":680,"title":{"classes/BuildOpenIdClient.html":{}},"body":{"modules/AuthModule.html":{},"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["buildopenidclient(configservice",{"_index":691,"title":{},"body":{"modules/AuthModule.html":{}}}],["bulk",{"_index":2415,"title":{},"body":{"injectables/JobsService.html":{}}}],["business",{"_index":4779,"title":{},"body":{"license.html":{}}}],["button",{"_index":3458,"title":{},"body":{"classes/PublishedData.html":{}}}],["bytes",{"_index":1070,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{}}}],["bytes.'})@isnumber",{"_index":1466,"title":{},"body":{"classes/DataFileDto.html":{}}}],["bytes.'})@prop({type",{"_index":1443,"title":{},"body":{"classes/DataFile.html":{}}}],["c",{"_index":4733,"title":{},"body":{"license.html":{}}}],["c.startswith(\"connect.sid",{"_index":2915,"title":{},"body":{"injectables/OidcAuthGuard.html":{}}}],["cache",{"_index":2625,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["calculation",{"_index":1474,"title":{},"body":{"classes/Datablock.html":{},"classes/OrigDatablock.html":{}}}],["call",{"_index":82,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["call.service.ts",{"_index":11,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["call.service.ts:13",{"_index":37,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["call.service.ts:40",{"_index":45,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["callback",{"_index":4628,"title":{},"body":{"index.html":{}}}],["callgraphqlapi",{"_index":23,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["callgraphqlapi(query",{"_index":44,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["callhandler",{"_index":1400,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/RegisteredInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["can(action.create",{"_index":948,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.delete",{"_index":976,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.instrumentcreate",{"_index":939,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.instrumentdelete",{"_index":979,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.instrumentread",{"_index":938,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.instrumentupdate",{"_index":940,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.listall",{"_index":929,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.listown",{"_index":945,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.manage",{"_index":930,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.read",{"_index":964,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.readall",{"_index":931,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.update",{"_index":943,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.usercreateany",{"_index":934,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.usercreatejwt",{"_index":937,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.usercreateown",{"_index":954,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.userdeleteany",{"_index":936,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.userdeleteown",{"_index":956,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.userreadany",{"_index":933,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.userreadown",{"_index":953,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.userupdateany",{"_index":935,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["can(action.userupdateown",{"_index":955,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["canactivate",{"_index":3205,"title":{},"body":{"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":3208,"title":{},"body":{"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{}}}],["cannot(action.create",{"_index":974,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["cannot(action.delete",{"_index":982,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["cannot(action.instrumentcreate",{"_index":962,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["cannot(action.instrumentdelete",{"_index":941,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["cannot(action.instrumentread",{"_index":978,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["cannot(action.instrumentupdate",{"_index":963,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["cannot(action.manage",{"_index":977,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["cannot(action.update",{"_index":975,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["cannot(action.usercreateany",{"_index":958,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["cannot(action.usercreatejwt",{"_index":961,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["cannot(action.userdeleteany",{"_index":960,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["cannot(action.userreadany",{"_index":957,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["cannot(action.userupdateany",{"_index":959,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["canusercreatedataset",{"_index":4135,"title":{},"body":{"controllers/UsersController.html":{}}}],["canusercreatedataset(request",{"_index":4144,"title":{},"body":{"controllers/UsersController.html":{}}}],["canviewall",{"_index":3177,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["canviewtheirown",{"_index":3179,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["caption",{"_index":362,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateAttachmentDto.html":{}}}],["carry",{"_index":3923,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["case",{"_index":1668,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/LogbooksService.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["cases",{"_index":1730,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["casl",{"_index":992,"title":{},"body":{"modules/CaslModule.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["casl/ability",{"_index":875,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"dependencies.html":{}}}],["casl/casl.module",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["caslabilityfactory",{"_index":665,"title":{"injectables/CaslAbilityFactory.html":{}},"body":{"modules/AuthModule.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/DatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/JobsModule.html":{},"modules/LogbooksModule.html":{},"modules/OrigDatablocksModule.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["caslmodule",{"_index":194,"title":{"modules/CaslModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CaslModule.html":{},"modules.html":{},"overview.html":{}}}],["catch",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"controllers/InstrumentsController.html":{},"injectables/JobsService.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/PoliciesService.html":{},"controllers/PublishedDataController.html":{}}}],["caused",{"_index":4781,"title":{},"body":{"license.html":{}}}],["cc",{"_index":2343,"title":{},"body":{"injectables/JobsService.html":{},"injectables/MailService.html":{}}}],["central",{"_index":2620,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["change",{"_index":1881,"title":{},"body":{"classes/HistoryClass.html":{},"index.html":{}}}],["changed",{"_index":2422,"title":{},"body":{"injectables/JobsService.html":{}}}],["changes",{"_index":1751,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["changes[k",{"_index":1756,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["chapter",{"_index":1162,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Job.html":{},"classes/MeasurementPeriodClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["characteristics",{"_index":1345,"title":{},"body":{"classes/CreateSampleDto.html":{},"interfaces/ISampleFields.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"miscellaneous/enumerations.html":{}}}],["characterize",{"_index":3994,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["check",{"_index":924,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/DatasetsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{}}}],["check_policies_key",{"_index":3213,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["checkdatasetsexistence",{"_index":2167,"title":{},"body":{"controllers/JobsController.html":{}}}],["checkdatasetsexistence(ids",{"_index":2172,"title":{},"body":{"controllers/JobsController.html":{}}}],["checkdatasetsstate",{"_index":2168,"title":{},"body":{"controllers/JobsController.html":{}}}],["checkdatasetsstate(type",{"_index":2175,"title":{},"body":{"controllers/JobsController.html":{}}}],["checkfilesexistence",{"_index":2169,"title":{},"body":{"controllers/JobsController.html":{}}}],["checkfilesexistence(cratejobdto",{"_index":2187,"title":{},"body":{"controllers/JobsController.html":{}}}],["checkpermission",{"_index":2277,"title":{},"body":{"controllers/JobsController.html":{}}}],["checkpolicies",{"_index":2049,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["checkpolicies((ability",{"_index":2060,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{}}}],["checkresults",{"_index":2264,"title":{},"body":{"controllers/JobsController.html":{}}}],["checkresults.length",{"_index":2274,"title":{},"body":{"controllers/JobsController.html":{}}}],["checksum",{"_index":1425,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/LifecycleClass.html":{}}}],["checksums",{"_index":1475,"title":{},"body":{"classes/Datablock.html":{},"classes/OrigDatablock.html":{}}}],["checkuserauthorization",{"_index":4136,"title":{},"body":{"controllers/UsersController.html":{}}}],["checkuserauthorization(request",{"_index":4147,"title":{},"body":{"controllers/UsersController.html":{}}}],["chk",{"_index":1421,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{}}}],["chkalg",{"_index":1040,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{}}}],["choosing",{"_index":3995,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["claim",{"_index":845,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["class",{"_index":63,"title":{"classes/AccessGroupService.html":{},"classes/Attachment.html":{},"classes/BuildOpenIdClient.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateInitialDatasetDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/DatasetListDto.html":{},"classes/HistoryClass.html":{},"classes/InitialDataset.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"classes/LifecycleClass.html":{},"classes/Logbook.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/TechniqueClass.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatablockDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateInstrumentDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateOrigDatablockDto.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdatePublishedDataDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUserIdentityDto.html":{},"classes/UpdateUserSettingsDto.html":{},"classes/UpdateWherePolicyDto.html":{},"classes/User.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{}},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Attachment.html":{},"modules/AttachmentsModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateInitialDatasetDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"modules/DatablocksModule.html":{},"injectables/DatablocksService.html":{},"classes/DatasetListDto.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"classes/HistoryClass.html":{},"injectables/HistoryInterceptor.html":{},"classes/InitialDataset.html":{},"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"injectables/InstrumentsService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapAuthGuard.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Logbook.html":{},"controllers/LogbooksController.html":{},"modules/LogbooksModule.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"modules/PoliciesModule.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"classes/QueryableClass.html":{},"injectables/RegisteredInterceptor.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"classes/TechniqueClass.html":{},"injectables/UTCTimeInterceptor.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatablockDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateInstrumentDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateOrigDatablockDto.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdatePublishedDataDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUserIdentityDto.html":{},"classes/UpdateUserSettingsDto.html":{},"classes/UpdateWherePolicyDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{}}}],["classes",{"_index":134,"title":{},"body":{"classes/AccessGroupService.html":{},"classes/Attachment.html":{},"classes/BuildOpenIdClient.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateInitialDatasetDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/DatasetListDto.html":{},"classes/HistoryClass.html":{},"classes/InitialDataset.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"classes/LifecycleClass.html":{},"classes/Logbook.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/TechniqueClass.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatablockDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateInstrumentDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateOrigDatablockDto.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdatePublishedDataDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUserIdentityDto.html":{},"classes/UpdateUserSettingsDto.html":{},"classes/UpdateWherePolicyDto.html":{},"classes/User.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"overview.html":{}}}],["classification",{"_index":3882,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["clause",{"_index":4731,"title":{},"body":{"license.html":{},"properties.html":{}}}],["clicks",{"_index":3457,"title":{},"body":{"classes/PublishedData.html":{}}}],["client",{"_index":692,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{},"classes/PublishedData.html":{},"dependencies.html":{},"index.html":{}}}],["client'})@prop({type",{"_index":3459,"title":{},"body":{"classes/PublishedData.html":{}}}],["client_id",{"_index":785,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["client_secret",{"_index":787,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["clientbuilder",{"_index":690,"title":{},"body":{"modules/AuthModule.html":{}}}],["clientbuilder.build",{"_index":693,"title":{},"body":{"modules/AuthModule.html":{}}}],["clone",{"_index":4525,"title":{},"body":{"index.html":{}}}],["cluster_adminmodule",{"_index":173,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_exports",{"_index":174,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":175,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_attachmentsmodule",{"_index":473,"title":{},"body":{"modules/AttachmentsModule.html":{},"overview.html":{}}}],["cluster_attachmentsmodule_exports",{"_index":475,"title":{},"body":{"modules/AttachmentsModule.html":{},"overview.html":{}}}],["cluster_attachmentsmodule_providers",{"_index":474,"title":{},"body":{"modules/AttachmentsModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":661,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":663,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":662,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":664,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_caslmodule",{"_index":988,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_caslmodule_exports",{"_index":989,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_caslmodule_providers",{"_index":990,"title":{},"body":{"modules/CaslModule.html":{}}}],["cluster_commonmodule",{"_index":993,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":995,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":994,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_datablocksmodule",{"_index":1495,"title":{},"body":{"modules/DatablocksModule.html":{},"overview.html":{}}}],["cluster_datablocksmodule_exports",{"_index":1496,"title":{},"body":{"modules/DatablocksModule.html":{},"overview.html":{}}}],["cluster_datablocksmodule_providers",{"_index":1497,"title":{},"body":{"modules/DatablocksModule.html":{},"overview.html":{}}}],["cluster_datasetsmodule",{"_index":1533,"title":{},"body":{"modules/DatasetsModule.html":{},"overview.html":{}}}],["cluster_datasetsmodule_exports",{"_index":1534,"title":{},"body":{"modules/DatasetsModule.html":{},"overview.html":{}}}],["cluster_datasetsmodule_imports",{"_index":1535,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["cluster_datasetsmodule_providers",{"_index":1536,"title":{},"body":{"modules/DatasetsModule.html":{},"overview.html":{}}}],["cluster_initialdatasetsmodule",{"_index":1964,"title":{},"body":{"modules/InitialDatasetsModule.html":{},"overview.html":{}}}],["cluster_initialdatasetsmodule_exports",{"_index":1965,"title":{},"body":{"modules/InitialDatasetsModule.html":{},"overview.html":{}}}],["cluster_initialdatasetsmodule_providers",{"_index":1966,"title":{},"body":{"modules/InitialDatasetsModule.html":{},"overview.html":{}}}],["cluster_instrumentsmodule",{"_index":2093,"title":{},"body":{"modules/InstrumentsModule.html":{},"overview.html":{}}}],["cluster_instrumentsmodule_providers",{"_index":2094,"title":{},"body":{"modules/InstrumentsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":2321,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_imports",{"_index":2323,"title":{},"body":{"modules/JobsModule.html":{}}}],["cluster_jobsmodule_providers",{"_index":2322,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_logbooksmodule",{"_index":2723,"title":{},"body":{"modules/LogbooksModule.html":{},"overview.html":{}}}],["cluster_logbooksmodule_exports",{"_index":2725,"title":{},"body":{"modules/LogbooksModule.html":{},"overview.html":{}}}],["cluster_logbooksmodule_imports",{"_index":2724,"title":{},"body":{"modules/LogbooksModule.html":{}}}],["cluster_logbooksmodule_providers",{"_index":2726,"title":{},"body":{"modules/LogbooksModule.html":{},"overview.html":{}}}],["cluster_origdatablocksmodule",{"_index":3060,"title":{},"body":{"modules/OrigDatablocksModule.html":{},"overview.html":{}}}],["cluster_origdatablocksmodule_exports",{"_index":3062,"title":{},"body":{"modules/OrigDatablocksModule.html":{},"overview.html":{}}}],["cluster_origdatablocksmodule_providers",{"_index":3061,"title":{},"body":{"modules/OrigDatablocksModule.html":{},"overview.html":{}}}],["cluster_policiesmodule",{"_index":3224,"title":{},"body":{"modules/PoliciesModule.html":{},"overview.html":{}}}],["cluster_policiesmodule_exports",{"_index":3226,"title":{},"body":{"modules/PoliciesModule.html":{},"overview.html":{}}}],["cluster_policiesmodule_imports",{"_index":3225,"title":{},"body":{"modules/PoliciesModule.html":{}}}],["cluster_policiesmodule_providers",{"_index":3227,"title":{},"body":{"modules/PoliciesModule.html":{},"overview.html":{}}}],["cluster_proposalsmodule",{"_index":3381,"title":{},"body":{"modules/ProposalsModule.html":{},"overview.html":{}}}],["cluster_proposalsmodule_exports",{"_index":3383,"title":{},"body":{"modules/ProposalsModule.html":{},"overview.html":{}}}],["cluster_proposalsmodule_imports",{"_index":3382,"title":{},"body":{"modules/ProposalsModule.html":{}}}],["cluster_proposalsmodule_providers",{"_index":3384,"title":{},"body":{"modules/ProposalsModule.html":{},"overview.html":{}}}],["cluster_publisheddatamodule",{"_index":3651,"title":{},"body":{"modules/PublishedDataModule.html":{},"overview.html":{}}}],["cluster_publisheddatamodule_imports",{"_index":3652,"title":{},"body":{"modules/PublishedDataModule.html":{}}}],["cluster_publisheddatamodule_providers",{"_index":3653,"title":{},"body":{"modules/PublishedDataModule.html":{},"overview.html":{}}}],["cluster_samplesmodule",{"_index":3808,"title":{},"body":{"modules/SamplesModule.html":{},"overview.html":{}}}],["cluster_samplesmodule_imports",{"_index":3810,"title":{},"body":{"modules/SamplesModule.html":{}}}],["cluster_samplesmodule_providers",{"_index":3809,"title":{},"body":{"modules/SamplesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":4261,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":4263,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":4262,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":2297,"title":{},"body":{"controllers/JobsController.html":{},"index.html":{},"license.html":{}}}],["collection",{"_index":467,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateProposalDto.html":{},"classes/Datablock.html":{},"classes/InitialDataset.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"classes/OrigDatablock.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/User.html":{},"classes/UserIdentity.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{}}}],["collection'})@prop({type",{"_index":3427,"title":{},"body":{"classes/PublishedData.html":{}}}],["column",{"_index":2802,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["columns",{"_index":1384,"title":{},"body":{"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/UserSettings.html":{}}}],["combination",{"_index":4515,"title":{},"body":{"index.html":{}}}],["come",{"_index":3941,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["comes",{"_index":635,"title":{},"body":{"controllers/AuthController.html":{}}}],["comma",{"_index":4589,"title":{},"body":{"index.html":{}}}],["command",{"_index":2455,"title":{},"body":{"injectables/JobsService.html":{}}}],["comment",{"_index":1152,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/MeasurementPeriodClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["common",{"_index":1989,"title":{},"body":{"classes/Instrument.html":{}}}],["common/common.module",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["common/email",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["common/handlebars",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["common/interfaces/common.interface",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["common/schemas/datafile.schema",{"_index":1202,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{},"classes/OrigDatablock.html":{}}}],["commonly",{"_index":1990,"title":{},"body":{"classes/Instrument.html":{},"index.html":{}}}],["commonmodule",{"_index":195,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["compare",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(pass",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["compile",{"_index":2370,"title":{},"body":{"injectables/JobsService.html":{}}}],["compile(htmltemplate",{"_index":2494,"title":{},"body":{"injectables/JobsService.html":{}}}],["compose",{"_index":4551,"title":{},"body":{"index.html":{}}}],["compose.dev",{"_index":4550,"title":{},"body":{"index.html":{}}}],["compose.dev.yaml",{"_index":4552,"title":{},"body":{"index.html":{}}}],["compute",{"_index":1056,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{}}}],["concerning",{"_index":2647,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["condition",{"_index":1765,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["conditions",{"_index":2967,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"license.html":{}}}],["config",{"_index":185,"title":{},"body":{"injectables/AdminService.html":{},"modules/AppModule.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"controllers/UserIdentitiesController.html":{}}}],["config/configuration",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["config/frontend.config.json",{"_index":186,"title":{},"body":{"injectables/AdminService.html":{}}}],["config/frontend.theme.json",{"_index":188,"title":{},"body":{"injectables/AdminService.html":{}}}],["configmodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatasetsModule.html":{},"modules/JobsModule.html":{},"modules/LogbooksModule.html":{},"modules/PoliciesModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"modules/UsersModule.html":{}}}],["configmodule.forroot",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":112,"title":{},"body":{"injectables/AccessGroupFromPayloadService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/DatasetsService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/LogbooksModule.html":{},"injectables/LogbooksService.html":{},"injectables/OidcStrategy.html":{},"injectables/PoliciesService.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/SamplesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["configservice.get(\"httpmaxredirects",{"_index":2735,"title":{},"body":{"modules/LogbooksModule.html":{},"modules/PublishedDataModule.html":{}}}],["configservice.get(\"httptimeout",{"_index":2733,"title":{},"body":{"modules/LogbooksModule.html":{},"modules/PublishedDataModule.html":{}}}],["configservice.get(\"jwt.expiresin",{"_index":699,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["configservice.get(\"jwt.secret",{"_index":696,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{}}}],["configservice.get(\"mongodburi",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"oidc",{"_index":791,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["configservice.get(\"oidc\")?.issuer",{"_index":689,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get(\"smtp.host",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"smtp.messagefrom",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"smtp.port",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(\"smtp.secure",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"controllers/JobsController.html":{},"injectables/OidcStrategy.html":{},"index.html":{}}}],["configuration().rabbitmq.enabled",{"_index":2220,"title":{},"body":{"controllers/JobsController.html":{}}}],["configure",{"_index":4570,"title":{},"body":{"index.html":{}}}],["configured",{"_index":2783,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["connect",{"_index":839,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["consequential",{"_index":4772,"title":{},"body":{"license.html":{}}}],["console.error(error",{"_index":3625,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["console.log(\"created",{"_index":2561,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["console.log(\"logout",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"policiesguard:execpolicyhandler",{"_index":3222,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["console.log(\"posting",{"_index":3616,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["console.log(\"saved",{"_index":2224,"title":{},"body":{"controllers/JobsController.html":{}}}],["console.log(\"updated",{"_index":2575,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["console.log('policiesguard:execpolicyhandler",{"_index":3219,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["console.log(err",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(registerdatacitedoioptions",{"_index":3618,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["console.log(registerdatacitemetadataoptions",{"_index":3617,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["console.warn",{"_index":3626,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["const",{"_index":73,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"modules/AppModule.html":{},"classes/Attachment.html":{},"modules/AttachmentsModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/DataFile.html":{},"classes/Datablock.html":{},"injectables/DatablocksService.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"classes/HistoryClass.html":{},"injectables/HistoryInterceptor.html":{},"classes/InitialDataset.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"injectables/InstrumentsService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalStrategy.html":{},"classes/Logbook.html":{},"injectables/LogbooksService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"injectables/RegisteredInterceptor.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"classes/TechniqueClass.html":{},"injectables/UTCTimeInterceptor.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"injectables/InitialDatasetsService.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"injectables/UTCTimeInterceptor.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(accessgroupproviders",{"_index":97,"title":{},"body":{"injectables/AccessGroupFromMultipleProvidersService.html":{}}}],["constructor(attachmentmodel",{"_index":495,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["constructor(authservice",{"_index":2666,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["constructor(configservice",{"_index":111,"title":{},"body":{"injectables/AccessGroupFromPayloadService.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/DatasetsService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LogbooksService.html":{},"injectables/PoliciesService.html":{},"injectables/UsersService.html":{}}}],["constructor(datablockmodel",{"_index":1505,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["constructor(datasetsservice",{"_index":1890,"title":{},"body":{"injectables/HistoryInterceptor.html":{}}}],["constructor(datekeys",{"_index":3869,"title":{},"body":{"injectables/UTCTimeInterceptor.html":{}}}],["constructor(graphqltemplatequery",{"_index":26,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["constructor(initialdatasetmodel",{"_index":1973,"title":{},"body":{"injectables/InitialDatasetsService.html":{}}}],["constructor(instrumentmodel",{"_index":2099,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["constructor(mailerservice",{"_index":2820,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(origdatablockmodel",{"_index":3068,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["constructor(private",{"_index":101,"title":{},"body":{"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"controllers/AdminController.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"controllers/InstrumentsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/LogbooksController.html":{},"injectables/MailService.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"guards/RolesGuard.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["constructor(propname",{"_index":1830,"title":{},"body":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{}}}],["constructor(proposalmodel",{"_index":3393,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["constructor(proposalsservice",{"_index":4243,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["constructor(publisheddatamodel",{"_index":3659,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["constructor(referer",{"_index":2907,"title":{},"body":{"injectables/OidcAuthGuard.html":{}}}],["constructor(reflector",{"_index":2502,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{}}}],["constructor(rolemodel",{"_index":3726,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(samplemodel",{"_index":3820,"title":{},"body":{"injectables/SamplesService.html":{}}}],["constructor(staticaccessgroups",{"_index":128,"title":{},"body":{"injectables/AccessGroupFromStaticValuesService.html":{}}}],["constructor(subgroup",{"_index":2895,"title":{},"body":{"injectables/MultiUTCTimeInterceptor.html":{}}}],["constructor(useridentitymodel",{"_index":4082,"title":{},"body":{"injectables/UserIdentitiesService.html":{}}}],["constructor(usersservice",{"_index":1396,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{}}}],["consumer",{"_index":4656,"title":{},"body":{"index.html":{}}}],["contact",{"_index":3902,"title":{},"body":{"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["contactemail",{"_index":3883,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["contain",{"_index":3903,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["contained",{"_index":1192,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{},"classes/OrigDatablock.html":{},"classes/UpdateDatasetDto.html":{}}}],["container",{"_index":4548,"title":{},"body":{"index.html":{}}}],["containeraized",{"_index":4582,"title":{},"body":{"index.html":{}}}],["containers",{"_index":4544,"title":{},"body":{"index.html":{}}}],["containing",{"_index":1344,"title":{},"body":{"classes/CreateSampleDto.html":{},"classes/Instrument.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{}}}],["contains",{"_index":2946,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"injectables/PoliciesService.html":{},"classes/UpdateDatasetDto.html":{}}}],["content",{"_index":87,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"classes/Attachment.html":{},"classes/Message.html":{},"controllers/PublishedDataController.html":{}}}],["content.schema",{"_index":2876,"title":{},"body":{"classes/Message.html":{}}}],["content.schema.ts",{"_index":2881,"title":{},"body":{"classes/MessageContent.html":{},"miscellaneous/typealiases.html":{}}}],["content.schema.ts:15",{"_index":2884,"title":{},"body":{"classes/MessageContent.html":{}}}],["content.schema.ts:18",{"_index":2885,"title":{},"body":{"classes/MessageContent.html":{}}}],["content.schema.ts:21",{"_index":2886,"title":{},"body":{"classes/MessageContent.html":{}}}],["content.schema.ts:8",{"_index":2883,"title":{},"body":{"classes/MessageContent.html":{}}}],["contents",{"_index":3935,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["context",{"_index":1402,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"guards/PoliciesGuard.html":{},"injectables/RegisteredInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["context.getargs()[1].req.query.fields",{"_index":3684,"title":{},"body":{"injectables/RegisteredInterceptor.html":{}}}],["context.getargs()[1].req.user",{"_index":3683,"title":{},"body":{"injectables/RegisteredInterceptor.html":{}}}],["context.getargs()[1].req.user.currentgroups",{"_index":4247,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["context.getclass",{"_index":3715,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":2516,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{}}}],["context.hookstate.olddata.foreach(async",{"_index":2417,"title":{},"body":{"injectables/JobsService.html":{}}}],["context.instance.datasetlist.map",{"_index":2389,"title":{},"body":{"injectables/JobsService.html":{}}}],["context.instance.emailjobinitiator",{"_index":2390,"title":{},"body":{"injectables/JobsService.html":{}}}],["context.instance.id",{"_index":2408,"title":{},"body":{"injectables/JobsService.html":{}}}],["context.instance.type",{"_index":2391,"title":{},"body":{"injectables/JobsService.html":{}}}],["context.switchtohttp().getrequest",{"_index":1837,"title":{},"body":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{}}}],["context.switchtohttp().getresponse",{"_index":1410,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{}}}],["contract",{"_index":4785,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":4752,"title":{},"body":{"license.html":{}}}],["controller",{"_index":138,"title":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["controller(\"admin",{"_index":159,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller(\"auth",{"_index":618,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"instruments",{"_index":2058,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["controller(\"jobs",{"_index":2218,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller(\"logbooks",{"_index":2716,"title":{},"body":{"controllers/LogbooksController.html":{}}}],["controller(\"origdatablocks",{"_index":3011,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["controller(\"policies",{"_index":3158,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["controller(\"publisheddata",{"_index":3532,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["controller(\"useridentities",{"_index":4061,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["controller(\"users",{"_index":4196,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":140,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/DatasetsModule.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/LogbooksController.html":{},"modules/LogbooksModule.html":{},"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{},"controllers/PoliciesController.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["convention",{"_index":3635,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["convert",{"_index":1806,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["converttorequestedunit",{"_index":1847,"title":{},"body":{"injectables/FullQueryInterceptor.html":{}}}],["converttorequestedunit(currentvalue",{"_index":1862,"title":{},"body":{"injectables/FullQueryInterceptor.html":{}}}],["cookie",{"_index":2912,"title":{},"body":{"injectables/OidcAuthGuard.html":{}}}],["copied",{"_index":2180,"title":{},"body":{"controllers/JobsController.html":{},"classes/LifecycleClass.html":{}}}],["copies",{"_index":3347,"title":{},"body":{"classes/Policy.html":{},"classes/UpdateDatasetDto.html":{}}}],["copies'})@prop({type",{"_index":3350,"title":{},"body":{"classes/Policy.html":{}}}],["copy",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{},"controllers/JobsController.html":{},"classes/Policy.html":{},"index.html":{}}}],["copyright",{"_index":4732,"title":{},"body":{"license.html":{}}}],["count",{"_index":1562,"title":{},"body":{"injectables/DatasetsService.html":{},"interfaces/ICount.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{}}}],["count(@query(\"where",{"_index":3190,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["count(filter",{"_index":1576,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{}}}],["count(where",{"_index":3130,"title":{},"body":{"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{}}}],["countdocuments",{"_index":3258,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["cratejobdto",{"_index":2189,"title":{},"body":{"controllers/JobsController.html":{}}}],["cratejobdto.datasetlist.filter",{"_index":2243,"title":{},"body":{"controllers/JobsController.html":{}}}],["cratejobdto.type",{"_index":2248,"title":{},"body":{"controllers/JobsController.html":{}}}],["create",{"_index":490,"title":{},"body":{"injectables/AttachmentsService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateProposalDto.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/InitialDatasetsService.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatablockDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateInstrumentDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateOrigDatablockDto.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdatePublishedDataDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUserIdentityDto.html":{},"classes/UpdateUserSettingsDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["create(@body",{"_index":3183,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["create(createattachmentdto",{"_index":499,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["create(createdatablockdto",{"_index":1508,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["create(createdatasetdto",{"_index":1578,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["create(createinitialdatasetdto",{"_index":1976,"title":{},"body":{"injectables/InitialDatasetsService.html":{}}}],["create(createinstrumentdto",{"_index":2008,"title":{},"body":{"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{}}}],["create(createjobdto",{"_index":2345,"title":{},"body":{"injectables/JobsService.html":{}}}],["create(createorigdatablockdto",{"_index":2943,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{}}}],["create(createpolicydto",{"_index":3133,"title":{},"body":{"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{}}}],["create(createproposaldto",{"_index":3396,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["create(createpublisheddatadto",{"_index":3498,"title":{},"body":{"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{}}}],["create(createroledto",{"_index":3730,"title":{},"body":{"injectables/RolesService.html":{}}}],["create(createsampledto",{"_index":3823,"title":{},"body":{"injectables/SamplesService.html":{}}}],["create(createuserdto",{"_index":4284,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(request",{"_index":2190,"title":{},"body":{"controllers/JobsController.html":{}}}],["create/update",{"_index":449,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["createaccount",{"_index":4332,"title":{},"body":{"injectables/UsersService.html":{}}}],["createaccount.authstrategy",{"_index":4333,"title":{},"body":{"injectables/UsersService.html":{}}}],["createattachmentdto",{"_index":500,"title":{"classes/CreateAttachmentDto.html":{}},"body":{"injectables/AttachmentsService.html":{},"classes/CreateAttachmentDto.html":{},"classes/UpdateAttachmentDto.html":{}}}],["createcustomjwt",{"_index":1021,"title":{"classes/CreateCustomJwt.html":{}},"body":{"classes/CreateCustomJwt.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcustomjwt(request",{"_index":4151,"title":{},"body":{"controllers/UsersController.html":{}}}],["createcustomjwt(user",{"_index":4286,"title":{},"body":{"injectables/UsersService.html":{}}}],["createcustomjwt})@apiresponse({status",{"_index":4158,"title":{},"body":{"controllers/UsersController.html":{}}}],["created",{"_index":425,"title":{},"body":{"classes/Attachment.html":{},"injectables/AuthService.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"classes/UserIdentity.html":{},"index.html":{}}}],["created/updated",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["createdat",{"_index":368,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{},"classes/Job.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UserIdentity.html":{}}}],["createdatablockdto",{"_index":1036,"title":{"classes/CreateDatablockDto.html":{}},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"injectables/DatablocksService.html":{},"classes/UpdateDatablockDto.html":{}}}],["createdatasetdatablockdto",{"_index":1092,"title":{"classes/CreateDatasetDatablockDto.html":{}},"body":{"classes/CreateDatasetDatablockDto.html":{}}}],["createdatasetdto",{"_index":1579,"title":{},"body":{"injectables/DatasetsService.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:105",{"_index":3976,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:116",{"_index":3965,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:127",{"_index":3952,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:137",{"_index":3953,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:146",{"_index":3911,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:156",{"_index":3998,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:166",{"_index":4003,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:178",{"_index":3947,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:187",{"_index":3936,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:197",{"_index":3932,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:207",{"_index":3899,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:216",{"_index":3950,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:225",{"_index":4004,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:236",{"_index":3938,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:249",{"_index":3993,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:262",{"_index":3974,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:276",{"_index":3969,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:286",{"_index":3922,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:296",{"_index":3971,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:305",{"_index":3901,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:315",{"_index":3916,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:34",{"_index":3966,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:43",{"_index":3961,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:53",{"_index":3963,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:63",{"_index":3958,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:72",{"_index":3906,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:81",{"_index":3985,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetdto:91",{"_index":3991,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["createdatasetgroups",{"_index":921,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["createdatasetgroups.includes(\"all",{"_index":947,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["createdatasetgroups.includes(g",{"_index":946,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["createdatasetorigdatablockdto",{"_index":1098,"title":{"classes/CreateDatasetOrigDatablockDto.html":{}},"body":{"classes/CreateDatasetOrigDatablockDto.html":{}}}],["createdattachment",{"_index":531,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["createdattachment.save",{"_index":534,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["createdby",{"_index":369,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["createddatablock",{"_index":1519,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["createddatablock.save",{"_index":1522,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["createddataset",{"_index":1629,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["createddataset.save",{"_index":1633,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["createderiveddatasetdto",{"_index":3118,"title":{},"body":{"classes/PartialUpdateDerivedDatasetDto.html":{}}}],["createdinitialdataset",{"_index":1981,"title":{},"body":{"injectables/InitialDatasetsService.html":{}}}],["createdinitialdataset.save",{"_index":1983,"title":{},"body":{"injectables/InitialDatasetsService.html":{}}}],["createdinstrument",{"_index":2108,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["createdinstrument.save",{"_index":2110,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["createdjob",{"_index":2291,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["createdjob.save",{"_index":2378,"title":{},"body":{"injectables/JobsService.html":{}}}],["createdorigdatablock",{"_index":3083,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["createdorigdatablock.save",{"_index":3086,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["createdpolicy",{"_index":3270,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["createdpolicy.save",{"_index":3272,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["createdproposal",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProposalsService.html":{}}}],["createdproposal.proposalid",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["createdproposal.save",{"_index":3409,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["createdpublished",{"_index":3669,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["createdpublished.save",{"_index":3671,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["createdrole",{"_index":3762,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["createdrole._id",{"_index":4361,"title":{},"body":{"injectables/UsersService.html":{}}}],["createdrole.save",{"_index":3764,"title":{},"body":{"injectables/RolesService.html":{}}}],["createdsample",{"_index":3838,"title":{},"body":{"injectables/SamplesService.html":{}}}],["createdsample.save",{"_index":3841,"title":{},"body":{"injectables/SamplesService.html":{}}}],["createduser",{"_index":4367,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduser.save",{"_index":4369,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduseridentity",{"_index":4381,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduseridentity.save",{"_index":4382,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduserrole",{"_index":3770,"title":{},"body":{"injectables/RolesService.html":{}}}],["createduserrole.save",{"_index":3772,"title":{},"body":{"injectables/RolesService.html":{}}}],["createdusersettings",{"_index":4389,"title":{},"body":{"injectables/UsersService.html":{}}}],["createdusersettings.save",{"_index":4391,"title":{},"body":{"injectables/UsersService.html":{}}}],["createforuser",{"_index":867,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["createforuser(user",{"_index":868,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["createfullfacetpipeline",{"_index":1615,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{}}}],["createfullfacetpipeline(this.proposalmodel",{"_index":3411,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["createfullqueryfilter",{"_index":1616,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{}}}],["createfullqueryfilter(this.jobmodel",{"_index":2382,"title":{},"body":{"injectables/JobsService.html":{}}}],["createinitialdatasetdto",{"_index":1103,"title":{"classes/CreateInitialDatasetDto.html":{}},"body":{"classes/CreateInitialDatasetDto.html":{},"injectables/InitialDatasetsService.html":{}}}],["createinstrumentdto",{"_index":1108,"title":{"classes/CreateInstrumentDto.html":{}},"body":{"classes/CreateInstrumentDto.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"classes/UpdateInstrumentDto.html":{}}}],["createjobdto",{"_index":1121,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["createjobdto.datasetlist.map((x",{"_index":2281,"title":{},"body":{"controllers/JobsController.html":{}}}],["createjobdto.type",{"_index":2283,"title":{},"body":{"controllers/JobsController.html":{}}}],["createmeasurementperioddto",{"_index":1148,"title":{"classes/CreateMeasurementPeriodDto.html":{}},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateProposalDto.html":{}}}],["createorigdatablock",{"_index":2991,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["createorigdatablockdto",{"_index":1101,"title":{"classes/CreateOrigDatablockDto.html":{}},"body":{"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"classes/UpdateOrigDatablockDto.html":{}}}],["createorigdatablockdto.accessgroups",{"_index":3017,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["createorigdatablockdto.datasetid",{"_index":3014,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["createorigdatablockdto.instrumentgroup",{"_index":3019,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["createorigdatablockdto.ownergroup",{"_index":3016,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["createorigdatablockdto})@apiresponse({status",{"_index":2949,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["createpolicydto",{"_index":1206,"title":{"classes/CreatePolicyDto.html":{}},"body":{"classes/CreatePolicyDto.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"classes/UpdatePolicyDto.html":{}}}],["createproposaldto",{"_index":249,"title":{"classes/CreateProposalDto.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateProposalDto.html":{},"injectables/ProposalsService.html":{},"classes/UpdateProposalDto.html":{}}}],["createpublisheddatadto",{"_index":1279,"title":{"classes/CreatePublishedDataDto.html":{}},"body":{"classes/CreatePublishedDataDto.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"classes/UpdatePublishedDataDto.html":{}}}],["createrawdatasetdto",{"_index":3120,"title":{},"body":{"classes/PartialUpdateRawDatasetDto.html":{}}}],["createrelationshipdto",{"_index":1320,"title":{"classes/CreateRelationshipDto.html":{}},"body":{"classes/CreateRelationshipDto.html":{}}}],["createrole",{"_index":3755,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["createroledto",{"_index":1330,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["createroledto.name",{"_index":3761,"title":{},"body":{"injectables/RolesService.html":{}}}],["creates",{"_index":2945,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createsampledto",{"_index":1333,"title":{"classes/CreateSampleDto.html":{}},"body":{"classes/CreateSampleDto.html":{},"injectables/SamplesService.html":{},"classes/UpdateSampleDto.html":{}}}],["createsettings",{"_index":4137,"title":{},"body":{"controllers/UsersController.html":{}}}],["createsettings(request",{"_index":4160,"title":{},"body":{"controllers/UsersController.html":{}}}],["createtechniquedto",{"_index":1354,"title":{"classes/CreateTechniqueDto.html":{}},"body":{"classes/CreateTechniqueDto.html":{}}}],["createuser",{"_index":813,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{},"injectables/UsersService.html":{}}}],["createuserdto",{"_index":774,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/BuildOpenIdClient.html":{},"classes/CreateUserDto.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{},"injectables/UsersService.html":{}}}],["createuserdto.authstrategy",{"_index":4365,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.email",{"_index":4373,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.password",{"_index":4370,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.username",{"_index":4364,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuseridentity",{"_index":819,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{},"injectables/UsersService.html":{}}}],["createuseridentity(createuseridentitydto",{"_index":4288,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuseridentitydto",{"_index":771,"title":{"classes/CreateUserIdentityDto.html":{}},"body":{"classes/BuildOpenIdClient.html":{},"classes/CreateUserIdentityDto.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{},"classes/UpdateUserIdentityDto.html":{},"injectables/UsersService.html":{}}}],["createuserjwt",{"_index":1377,"title":{"classes/CreateUserJWT.html":{}},"body":{"classes/CreateUserJWT.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuserjwt(accesstoken",{"_index":4290,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserrole",{"_index":3719,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["createuserrole(createuserroledto",{"_index":3732,"title":{},"body":{"injectables/RolesService.html":{}}}],["createuserroledto",{"_index":1379,"title":{"classes/CreateUserRoleDto.html":{}},"body":{"classes/CreateUserRoleDto.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["createuserroledto.roleid",{"_index":3769,"title":{},"body":{"injectables/RolesService.html":{}}}],["createuserroledto.userid",{"_index":3768,"title":{},"body":{"injectables/RolesService.html":{}}}],["createusersettings",{"_index":4273,"title":{},"body":{"injectables/UsersService.html":{}}}],["createusersettings(userid",{"_index":4292,"title":{},"body":{"injectables/UsersService.html":{}}}],["createusersettingsdto",{"_index":1382,"title":{"classes/CreateUserSettingsDto.html":{}},"body":{"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/UpdateUserSettingsDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createusersettingsinterceptor",{"_index":1392,"title":{"injectables/CreateUserSettingsInterceptor.html":{}},"body":{"injectables/CreateUserSettingsInterceptor.html":{},"controllers/UsersController.html":{}}}],["creating",{"_index":3313,"title":{},"body":{"injectables/PoliciesService.html":{},"injectables/UsersService.html":{}}}],["creating/updating",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["creation",{"_index":1445,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Policy.html":{},"classes/UpdateDatasetDto.html":{}}}],["creation'})@prop({type",{"_index":3319,"title":{},"body":{"classes/Policy.html":{}}}],["creationlocation",{"_index":1927,"title":{},"body":{"interfaces/IDatasetFields.html":{}}}],["creationtime",{"_index":1928,"title":{},"body":{"interfaces/IDatasetFields.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/UpdateDatasetDto.html":{}}}],["creationtime:desc",{"_index":2977,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["creator",{"_index":1284,"title":{},"body":{"classes/CreatePublishedDataDto.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"classes/UpdateDatasetDto.html":{}}}],["creator.filter",{"_index":3642,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["creator.indexof(author",{"_index":3644,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["creatorelements",{"_index":3645,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["creatorelements.join(\"\\n",{"_index":3650,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["credentials",{"_index":581,"title":{},"body":{"controllers/AuthController.html":{},"classes/BuildOpenIdClient.html":{},"classes/CreateUserIdentityDto.html":{},"injectables/LdapStrategy.html":{},"injectables/LogbooksService.html":{},"injectables/OidcStrategy.html":{},"classes/UserIdentity.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["credentials.'})@allowany()@useguards(ldapauthguard)@post('ldap",{"_index":560,"title":{},"body":{"controllers/AuthController.html":{}}}],["credentialsdto",{"_index":607,"title":{"classes/CredentialsDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CredentialsDto.html":{},"controllers/UsersController.html":{}}}],["credentialsdto})@allowany()@useguards(localauthguard)@post('login",{"_index":564,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["credentialsdto})@apioperation({summary",{"_index":552,"title":{},"body":{"controllers/AuthController.html":{}}}],["ctx.where:single/multiple",{"_index":1731,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["current",{"_index":573,"title":{},"body":{"controllers/AuthController.html":{},"classes/Job.html":{},"classes/LifecycleClass.html":{},"classes/UpdateDatasetDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["currentdata",{"_index":2418,"title":{},"body":{"injectables/JobsService.html":{}}}],["currentdata.creationtime",{"_index":2448,"title":{},"body":{"injectables/JobsService.html":{}}}],["currentdata.datasetlist.map",{"_index":2428,"title":{},"body":{"injectables/JobsService.html":{}}}],["currentdata.emailjobinitiator",{"_index":2429,"title":{},"body":{"injectables/JobsService.html":{}}}],["currentdata.jobstatusmessage",{"_index":2424,"title":{},"body":{"injectables/JobsService.html":{}}}],["currentdata.jobstatusmessage.indexof(\"finish",{"_index":2426,"title":{},"body":{"injectables/JobsService.html":{}}}],["currentgroups",{"_index":2117,"title":{},"body":{"interfaces/JWTUser.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["currentgroups.concat(rolenames",{"_index":2538,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["currentgroups.concat(useridentity.profile.accessgroups",{"_index":2539,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["currently",{"_index":1766,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/UsersController.html":{}}}],["currentunit",{"_index":1857,"title":{},"body":{"injectables/FullQueryInterceptor.html":{}}}],["currentvalue",{"_index":1777,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/FullQueryInterceptor.html":{},"classes/HistoryClass.html":{}}}],["custodian",{"_index":3955,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["custom",{"_index":1022,"title":{},"body":{"classes/CreateCustomJwt.html":{},"classes/Instrument.html":{},"controllers/JobsController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["customized",{"_index":4598,"title":{},"body":{"index.html":{}}}],["custommetadata",{"_index":1111,"title":{},"body":{"classes/CreateInstrumentDto.html":{},"classes/Instrument.html":{}}}],["d",{"_index":4553,"title":{},"body":{"index.html":{}}}],["damage",{"_index":4795,"title":{},"body":{"license.html":{}}}],["damages",{"_index":4773,"title":{},"body":{"license.html":{}}}],["data",{"_index":400,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"injectables/FullQueryInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"classes/LifecycleClass.html":{},"injectables/LogbooksService.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateWherePolicyDto.html":{},"injectables/UsersService.html":{},"index.html":{},"license.html":{}}}],["data'})@prop({type",{"_index":3422,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.'})@prop({type",{"_index":413,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["data.controller",{"_index":3655,"title":{},"body":{"modules/PublishedDataModule.html":{}}}],["data.controller.ts",{"_index":3492,"title":{},"body":{"controllers/PublishedDataController.html":{},"miscellaneous/functions.html":{}}}],["data.controller.ts:133",{"_index":3497,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["data.controller.ts:169",{"_index":3509,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["data.controller.ts:220",{"_index":3505,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["data.controller.ts:230",{"_index":3520,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["data.controller.ts:246",{"_index":3514,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["data.controller.ts:256",{"_index":3512,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["data.controller.ts:437",{"_index":3518,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["data.controller.ts:76",{"_index":3499,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["data.controller.ts:99",{"_index":3502,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["data.dto",{"_index":3523,"title":{},"body":{"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"classes/UpdatePublishedDataDto.html":{}}}],["data.dto.ts",{"_index":1281,"title":{},"body":{"classes/CreatePublishedDataDto.html":{},"classes/UpdatePublishedDataDto.html":{}}}],["data.dto.ts:10",{"_index":1305,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:14",{"_index":1299,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:19",{"_index":1303,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:22",{"_index":1310,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:25",{"_index":1309,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:28",{"_index":1318,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:32",{"_index":1319,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:35",{"_index":1298,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:38",{"_index":1304,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:41",{"_index":1313,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:45",{"_index":1307,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:49",{"_index":1315,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:54",{"_index":1308,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:6",{"_index":1297,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:60",{"_index":1302,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:64",{"_index":1311,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:68",{"_index":1316,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:72",{"_index":1314,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:76",{"_index":1317,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:82",{"_index":1312,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.dto.ts:86",{"_index":1306,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data.foreach",{"_index":1853,"title":{},"body":{"injectables/FullQueryInterceptor.html":{}}}],["data.interface",{"_index":3525,"title":{},"body":{"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{}}}],["data.interface.ts",{"_index":1917,"title":{},"body":{"interfaces/ICount.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{}}}],["data.module",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["data.module.ts",{"_index":3654,"title":{},"body":{"modules/PublishedDataModule.html":{}}}],["data.registeredtime",{"_index":3581,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["data.schema",{"_index":898,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/ICount.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{}}}],["data.schema.ts",{"_index":3416,"title":{},"body":{"classes/PublishedData.html":{},"miscellaneous/typealiases.html":{}}}],["data.schema.ts:105",{"_index":3431,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:113",{"_index":3456,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:121",{"_index":3440,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:129",{"_index":3462,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:137",{"_index":3442,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:145",{"_index":3423,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:152",{"_index":3449,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:160",{"_index":3467,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:169",{"_index":3460,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:177",{"_index":3475,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:186",{"_index":3454,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:194",{"_index":3438,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:202",{"_index":3425,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:210",{"_index":3478,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:28",{"_index":3417,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:45",{"_index":3434,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:53",{"_index":3421,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:61",{"_index":3428,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:69",{"_index":3447,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:77",{"_index":3445,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:81",{"_index":3477,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:89",{"_index":3481,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.schema.ts:97",{"_index":3419,"title":{},"body":{"classes/PublishedData.html":{}}}],["data.service",{"_index":3522,"title":{},"body":{"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{}}}],["data.service.ts",{"_index":3658,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["data.service.ts:25",{"_index":3660,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["data.service.ts:33",{"_index":3663,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["data.service.ts:46",{"_index":3664,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["data.service.ts:69",{"_index":3662,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["data.service.ts:74",{"_index":3665,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["data.service.ts:80",{"_index":3667,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["data.service.ts:96",{"_index":3666,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["data.status",{"_index":3583,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["data/dto/create",{"_index":1280,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["data/dto/update",{"_index":4015,"title":{},"body":{"classes/UpdatePublishedDataDto.html":{}}}],["data/interceptors/registered.interceptor.ts",{"_index":3681,"title":{},"body":{"injectables/RegisteredInterceptor.html":{}}}],["data/interceptors/registered.interceptor.ts:11",{"_index":3682,"title":{},"body":{"injectables/RegisteredInterceptor.html":{}}}],["data/interfaces/published",{"_index":1916,"title":{},"body":{"interfaces/ICount.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{}}}],["data/published",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"miscellaneous/functions.html":{}}}],["data/replacement",{"_index":1733,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["data/schemas/published",{"_index":897,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/PublishedData.html":{},"miscellaneous/typealiases.html":{}}}],["data:image/jpeg;base64",{"_index":832,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["data:image/png;base64,{the",{"_index":394,"title":{},"body":{"classes/Attachment.html":{}}}],["data[updatedfield",{"_index":1778,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["database",{"_index":2014,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"index.html":{}}}],["datablock",{"_index":879,"title":{"classes/Datablock.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/Datablock.html":{},"modules/DatablocksModule.html":{},"injectables/DatablocksService.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["datablock'})@isint",{"_index":1200,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{}}}],["datablock.'})@isarray()@arraynotempty()@validatenested({each",{"_index":1193,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{}}}],["datablock.dto",{"_index":1095,"title":{},"body":{"classes/CreateDatasetDatablockDto.html":{},"injectables/DatablocksService.html":{},"classes/UpdateDatablockDto.html":{}}}],["datablock.dto.ts",{"_index":1038,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/UpdateDatablockDto.html":{}}}],["datablock.dto.ts:24",{"_index":1068,"title":{},"body":{"classes/CreateDatablockDto.html":{}}}],["datablock.dto.ts:33",{"_index":1053,"title":{},"body":{"classes/CreateDatablockDto.html":{}}}],["datablock.dto.ts:42",{"_index":1075,"title":{},"body":{"classes/CreateDatablockDto.html":{}}}],["datablock.dto.ts:51",{"_index":1073,"title":{},"body":{"classes/CreateDatablockDto.html":{}}}],["datablock.dto.ts:62",{"_index":1060,"title":{},"body":{"classes/CreateDatablockDto.html":{}}}],["datablock.dto.ts:71",{"_index":1080,"title":{},"body":{"classes/CreateDatablockDto.html":{}}}],["datablock.dto.ts:77",{"_index":1064,"title":{},"body":{"classes/CreateDatablockDto.html":{}}}],["datablock.name",{"_index":1503,"title":{},"body":{"modules/DatablocksModule.html":{}}}],["datablock.ts",{"_index":1093,"title":{},"body":{"classes/CreateDatasetDatablockDto.html":{}}}],["datablockdocument",{"_index":1491,"title":{},"body":{"classes/Datablock.html":{},"injectables/DatablocksService.html":{},"miscellaneous/typealiases.html":{}}}],["datablockmodel",{"_index":1507,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["datablocks",{"_index":2955,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["datablocks'})@apibody({description",{"_index":2948,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["datablocks.service",{"_index":1500,"title":{},"body":{"modules/DatablocksModule.html":{}}}],["datablocks/datablocks.module",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["datablockschema",{"_index":1493,"title":{},"body":{"classes/Datablock.html":{},"modules/DatablocksModule.html":{}}}],["datablocksmodule",{"_index":196,"title":{"modules/DatablocksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatablocksModule.html":{},"modules/DatasetsModule.html":{},"modules.html":{},"overview.html":{}}}],["datablocksservice",{"_index":1498,"title":{"injectables/DatablocksService.html":{}},"body":{"modules/DatablocksModule.html":{},"injectables/DatablocksService.html":{},"overview.html":{}}}],["datacite",{"_index":3604,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["datacopy",{"_index":1745,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["datadescription",{"_index":1285,"title":{},"body":{"classes/CreatePublishedDataDto.html":{},"classes/PublishedData.html":{}}}],["datafile",{"_index":1061,"title":{"classes/DataFile.html":{}},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/DataFile.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{}}}],["datafiledocument",{"_index":1450,"title":{},"body":{"classes/DataFile.html":{},"miscellaneous/typealiases.html":{}}}],["datafiledto",{"_index":1086,"title":{"classes/DataFileDto.html":{}},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/DataFileDto.html":{}}}],["datafilelist",{"_index":1041,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/Datablock.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IOrigDatablockFields.html":{},"controllers/JobsController.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{}}}],["datafilelist.'})@prop({type",{"_index":2931,"title":{},"body":{"classes/OrigDatablock.html":{}}}],["datafileschema",{"_index":1455,"title":{},"body":{"classes/DataFile.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{}}}],["dataqualitymetrics",{"_index":3884,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["datasbase",{"_index":4701,"title":{},"body":{"index.html":{}}}],["dataset",{"_index":380,"title":{},"body":{"classes/Attachment.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/LifecycleClass.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"classes/Policy.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"classes/RelationshipClass.html":{},"classes/UpdateDatasetDto.html":{},"classes/UserSettings.html":{}}}],["dataset's",{"_index":2591,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["dataset'})@apibody({description",{"_index":2986,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["dataset'})@prop({type",{"_index":3474,"title":{},"body":{"classes/PublishedData.html":{}}}],["dataset.'})@isoptional()@isint",{"_index":3951,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["dataset.'})@isoptional()@isnumber",{"_index":3915,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["dataset.'})@isoptional()@isstring",{"_index":3900,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["dataset.'})@isstring",{"_index":1325,"title":{},"body":{"classes/CreateRelationshipDto.html":{}}}],["dataset.'})@prop({type",{"_index":2599,"title":{},"body":{"classes/LifecycleClass.html":{},"classes/RelationshipClass.html":{}}}],["dataset.datasetlifecycle?.archivable",{"_index":2400,"title":{},"body":{"injectables/JobsService.html":{}}}],["dataset.datasetlifecycle?.archivereturnmessage",{"_index":2438,"title":{},"body":{"injectables/JobsService.html":{}}}],["dataset.datasetlifecycle?.archivestatusmessage",{"_index":2434,"title":{},"body":{"injectables/JobsService.html":{}}}],["dataset.datasetlifecycle?.retrievable",{"_index":2401,"title":{},"body":{"injectables/JobsService.html":{}}}],["dataset.datasetlifecycle?.retrievereturnmessage",{"_index":2440,"title":{},"body":{"injectables/JobsService.html":{}}}],["dataset.datasetlifecycle?.retrievestatusmessage",{"_index":2436,"title":{},"body":{"injectables/JobsService.html":{}}}],["dataset.description",{"_index":3563,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["dataset.dto",{"_index":1622,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/InitialDatasetsService.html":{},"controllers/OrigDatablocksController.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["dataset.dto.ts",{"_index":1106,"title":{},"body":{"classes/CreateInitialDatasetDto.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["dataset.dto.ts:2",{"_index":1107,"title":{},"body":{"classes/CreateInitialDatasetDto.html":{}}}],["dataset.history",{"_index":1781,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["dataset.history.push",{"_index":1782,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["dataset.instrumentgroup",{"_index":3020,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["dataset.origdatablocks",{"_index":2252,"title":{},"body":{"controllers/JobsController.html":{}}}],["dataset.origdatablocks.reduce((acc",{"_index":2258,"title":{},"body":{"controllers/JobsController.html":{}}}],["dataset.ownergroup",{"_index":2396,"title":{},"body":{"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{}}}],["dataset.pid",{"_index":1759,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["dataset.retrievable",{"_index":2444,"title":{},"body":{"injectables/JobsService.html":{}}}],["dataset.schema",{"_index":1969,"title":{},"body":{"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{}}}],["dataset.schema.ts",{"_index":1959,"title":{},"body":{"classes/InitialDataset.html":{},"miscellaneous/typealiases.html":{}}}],["dataset.schema.ts:14",{"_index":1960,"title":{},"body":{"classes/InitialDataset.html":{}}}],["dataset.size",{"_index":2399,"title":{},"body":{"injectables/JobsService.html":{}}}],["dataset.sourcefolder",{"_index":2398,"title":{},"body":{"injectables/JobsService.html":{}}}],["dataset.type",{"_index":1789,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/PublishedDataController.html":{}}}],["dataset/dataset",{"_index":3426,"title":{},"body":{"classes/PublishedData.html":{}}}],["dataset[updatedfield",{"_index":1780,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["datasetclass",{"_index":881,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"injectables/FullQueryInterceptor.html":{},"controllers/PublishedDataController.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"controllers/UsersController.html":{}}}],["datasetclass).proposalid",{"_index":1791,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/PublishedDataController.html":{}}}],["datasetclass.name",{"_index":1552,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["datasetcount",{"_index":1385,"title":{},"body":{"classes/CreateUserSettingsDto.html":{},"classes/UserSettings.html":{}}}],["datasetcreated",{"_index":2605,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["datasetdocument",{"_index":1627,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/JobsService.html":{},"miscellaneous/typealiases.html":{}}}],["datasetexist",{"_index":3097,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["datasetid",{"_index":363,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/Datablock.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IOrigDatablockFields.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PublishedDataController.html":{},"classes/UpdateAttachmentDto.html":{}}}],["datasetlifecycle",{"_index":3587,"title":{},"body":{"controllers/PublishedDataController.html":{},"classes/UpdateDatasetDto.html":{}}}],["datasetlifecycle.${datasetstate[type",{"_index":2233,"title":{},"body":{"controllers/JobsController.html":{}}}],["datasetlifecycle.${jobtype}statusmessage",{"_index":2466,"title":{},"body":{"injectables/JobsService.html":{}}}],["datasetlifecycle.archivable",{"_index":2464,"title":{},"body":{"injectables/JobsService.html":{}}}],["datasetlifecycle.retrievable",{"_index":2465,"title":{},"body":{"injectables/JobsService.html":{}}}],["datasetlist",{"_index":1124,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["datasetlistdto",{"_index":1146,"title":{"classes/DatasetListDto.html":{}},"body":{"classes/CreateJobDto.html":{},"classes/DatasetListDto.html":{}}}],["datasetmodel",{"_index":1572,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["datasetname",{"_index":3885,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["datasetorigdatablocks",{"_index":3023,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["datasetpid",{"_index":1788,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["datasetpromise",{"_index":1642,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["datasetpromise.exec",{"_index":1647,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["datasetretriever",{"_index":2456,"title":{},"body":{"injectables/JobsService.html":{}}}],["datasets",{"_index":651,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOrigDatablockDto.html":{},"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/LifecycleClass.html":{},"controllers/OrigDatablocksController.html":{},"classes/Policy.html":{},"classes/PublishedData.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UserSettings.html":{},"index.html":{}}}],["datasets'})@prop({type",{"_index":3418,"title":{},"body":{"classes/PublishedData.html":{}}}],["datasets.'})@isarray()@isoptional()@validatenested({each",{"_index":3968,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["datasets.controller",{"_index":1543,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["datasets.filter((dataset",{"_index":2443,"title":{},"body":{"injectables/JobsService.html":{}}}],["datasets.length",{"_index":2229,"title":{},"body":{"controllers/JobsController.html":{}}}],["datasets.map(async",{"_index":1748,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/JobsController.html":{}}}],["datasets.module",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/DatasetsModule.html":{}}}],["datasets.module.ts",{"_index":1967,"title":{},"body":{"modules/InitialDatasetsModule.html":{}}}],["datasets.reduce",{"_index":2254,"title":{},"body":{"controllers/JobsController.html":{}}}],["datasets.service",{"_index":1544,"title":{},"body":{"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"modules/InitialDatasetsModule.html":{}}}],["datasets.service.ts",{"_index":1971,"title":{},"body":{"injectables/InitialDatasetsService.html":{}}}],["datasets.service.ts:11",{"_index":1974,"title":{},"body":{"injectables/InitialDatasetsService.html":{}}}],["datasets.service.ts:17",{"_index":1977,"title":{},"body":{"injectables/InitialDatasetsService.html":{}}}],["datasets.service.ts:26",{"_index":1979,"title":{},"body":{"injectables/InitialDatasetsService.html":{}}}],["datasets/datasets.module",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["datasets/dto/create",{"_index":1105,"title":{},"body":{"classes/CreateInitialDatasetDto.html":{}}}],["datasets/initial",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{}}}],["datasets/metadatakeys",{"_index":4646,"title":{},"body":{"index.html":{}}}],["datasets/schemas/initial",{"_index":1958,"title":{},"body":{"classes/InitialDataset.html":{},"miscellaneous/typealiases.html":{}}}],["datasetschema",{"_index":1541,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["datasetscontroller",{"_index":1539,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["datasetsmodule",{"_index":197,"title":{"modules/DatasetsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatasetsModule.html":{},"modules/JobsModule.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"modules.html":{},"overview.html":{}}}],["datasetsservice",{"_index":1537,"title":{"injectables/DatasetsService.html":{}},"body":{"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"injectables/HistoryInterceptor.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{},"overview.html":{}}}],["datasetsservice.keephistory",{"_index":1768,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["datasetstate",{"_index":2213,"title":{},"body":{"controllers/JobsController.html":{},"miscellaneous/enumerations.html":{}}}],["datasetstate.public",{"_index":2240,"title":{},"body":{"controllers/JobsController.html":{}}}],["datasetstate[type",{"_index":2236,"title":{},"body":{"controllers/JobsController.html":{}}}],["datasetstocheck",{"_index":2242,"title":{},"body":{"controllers/JobsController.html":{}}}],["datasetstocheck.map((x",{"_index":2246,"title":{},"body":{"controllers/JobsController.html":{}}}],["datasetstocheck.reduce",{"_index":2265,"title":{},"body":{"controllers/JobsController.html":{}}}],["datasettype",{"_index":1620,"title":{},"body":{"injectables/DatasetsService.html":{},"miscellaneous/enumerations.html":{}}}],["datasettype.raw",{"_index":1790,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["date",{"_index":423,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/Job.html":{},"classes/LifecycleClass.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"classes/QueryableClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"classes/UserIdentity.html":{}}}],["date().toisostring",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{}}}],["date.now",{"_index":1885,"title":{},"body":{"classes/HistoryClass.html":{},"classes/LifecycleClass.html":{}}}],["date/time",{"_index":1165,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Job.html":{},"classes/MeasurementPeriodClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["datekeys",{"_index":2893,"title":{},"body":{"injectables/MultiUTCTimeInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{}}}],["dateofdiskpurging",{"_index":2580,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["dateofpublishing",{"_index":2581,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["day",{"_index":2590,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["days",{"_index":3328,"title":{},"body":{"classes/Policy.html":{}}}],["db",{"_index":3262,"title":{},"body":{"injectables/PoliciesService.html":{},"index.html":{}}}],["decentral",{"_index":2623,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["decide",{"_index":2595,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["declarations",{"_index":170,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"modules/DatablocksModule.html":{},"modules/DatasetsModule.html":{},"modules/InitialDatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/JobsModule.html":{},"modules/LogbooksModule.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["declare",{"_index":1205,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{}}}],["decorators",{"_index":146,"title":{},"body":{"controllers/AdminController.html":{},"classes/Attachment.html":{},"controllers/AuthController.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/DatasetListDto.html":{},"classes/HistoryClass.html":{},"classes/InitialDataset.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/LifecycleClass.html":{},"classes/Logbook.html":{},"controllers/LogbooksController.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"controllers/PoliciesController.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"classes/QueryableClass.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/TechniqueClass.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdateWherePolicyDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{}}}],["decorators/allow",{"_index":611,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators/check",{"_index":3214,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["decorators/roles.decorator",{"_index":3711,"title":{},"body":{"guards/RolesGuard.html":{}}}],["deep",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{}}}],["default",{"_index":382,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/LifecycleClass.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"classes/UserSettings.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["defaultaccessgroups",{"_index":116,"title":{},"body":{"injectables/AccessGroupFromPayloadService.html":{}}}],["defaultmanager",{"_index":3307,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["defaultpolicy",{"_index":2481,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PoliciesService.html":{}}}],["defaults",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["defaultstrategy",{"_index":701,"title":{},"body":{"modules/AuthModule.html":{}}}],["define",{"_index":1250,"title":{},"body":{"classes/CreateProposalDto.html":{},"controllers/OrigDatablocksController.html":{},"classes/ProposalClass.html":{},"index.html":{}}}],["defined",{"_index":36,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"controllers/AdminController.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Attachment.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateInitialDatasetDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"injectables/DatablocksService.html":{},"classes/DatasetListDto.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"classes/HistoryClass.html":{},"injectables/HistoryInterceptor.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IPolicyHandler.html":{},"classes/InitialDataset.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalStrategy.html":{},"classes/Logbook.html":{},"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"classes/QueryableClass.html":{},"injectables/RegisteredInterceptor.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"classes/TechniqueClass.html":{},"injectables/UTCTimeInterceptor.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdateWherePolicyDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["defines",{"_index":415,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/Job.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{}}}],["defining",{"_index":1076,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/Datablock.html":{},"classes/Job.html":{},"classes/LifecycleClass.html":{}}}],["definition",{"_index":1480,"title":{},"body":{"classes/Datablock.html":{}}}],["definitions",{"_index":2928,"title":{},"body":{"classes/OrigDatablock.html":{}}}],["delay",{"_index":3325,"title":{},"body":{"classes/Policy.html":{}}}],["delete",{"_index":914,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/DatasetsService.html":{},"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"injectables/OidcAuthGuard.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["delete(\"/:id",{"_index":3058,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{}}}],["delete(\"/:id/settings",{"_index":4231,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(\":id",{"_index":2090,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/PoliciesController.html":{}}}],["delete('/:id",{"_index":3513,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["delete('/:id')@apioperation({summary",{"_index":2992,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["delete('/:id/settings",{"_index":4183,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":2032,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/PoliciesController.html":{}}}],["deleted",{"_index":2596,"title":{},"body":{"classes/LifecycleClass.html":{},"controllers/OrigDatablocksController.html":{}}}],["deletegroups",{"_index":917,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["deletegroups.includes(g",{"_index":984,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["deletes",{"_index":2993,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["dependencies",{"_index":168,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"modules/DatablocksModule.html":{},"modules/DatasetsModule.html":{},"modules/InitialDatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/JobsModule.html":{},"modules/LogbooksModule.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derived",{"_index":1623,"title":{},"body":{"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PublishedData.html":{},"classes/UpdateDatasetDto.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["derived'})@prop({type",{"_index":3455,"title":{},"body":{"classes/PublishedData.html":{}}}],["desc",{"_index":2816,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["describes",{"_index":3917,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["description",{"_index":12,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/Attachment.html":{},"controllers/AuthController.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"interfaces/ICount.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"classes/LifecycleClass.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"controllers/PoliciesController.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"classes/QueryableClass.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/TechniqueClass.html":{},"classes/UpdateDatasetDto.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"properties.html":{}}}],["destination",{"_index":2459,"title":{},"body":{"injectables/JobsService.html":{},"classes/LifecycleClass.html":{}}}],["destination.'})@prop({type",{"_index":2616,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["destinationpath",{"_index":2142,"title":{},"body":{"classes/Job.html":{}}}],["detailed",{"_index":2146,"title":{},"body":{"classes/Job.html":{},"classes/LifecycleClass.html":{}}}],["details",{"_index":4712,"title":{},"body":{"index.html":{}}}],["detectsubjecttype",{"_index":985,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["develop",{"_index":4547,"title":{},"body":{"index.html":{}}}],["developed",{"_index":4714,"title":{},"body":{"index.html":{}}}],["development",{"_index":4522,"title":{},"body":{"index.html":{}}}],["different",{"_index":1157,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"injectables/DatasetsService.html":{},"modules/InstrumentsModule.html":{},"classes/MeasurementPeriodClass.html":{},"controllers/PoliciesController.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{}}}],["differnet",{"_index":485,"title":{},"body":{"modules/AttachmentsModule.html":{},"modules/DatasetsModule.html":{}}}],["digital",{"_index":3432,"title":{},"body":{"classes/PublishedData.html":{}}}],["dir",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["direct",{"_index":4768,"title":{},"body":{"license.html":{}}}],["direction",{"_index":2803,"title":{},"body":{"injectables/LogbooksService.html":{},"injectables/PoliciesService.html":{}}}],["directly",{"_index":4575,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1816,"title":{},"body":{"injectables/FilterPipe.html":{},"injectables/JwtAuthGuard.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"controllers/PublishedDataController.html":{}}}],["disclaimed",{"_index":4765,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4747,"title":{},"body":{"license.html":{}}}],["discussion",{"_index":1666,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["disk",{"_index":1446,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/LifecycleClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["disk/tape",{"_index":2660,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["disk/tape.'})@prop({default",{"_index":2604,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["display",{"_index":3927,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["displaying",{"_index":3929,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["displayname",{"_index":2555,"title":{},"body":{"injectables/LdapStrategy.html":{},"classes/UserProfile.html":{},"injectables/UsersService.html":{}}}],["distribution",{"_index":4750,"title":{},"body":{"license.html":{}}}],["dns",{"_index":3986,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["docker",{"_index":4549,"title":{},"body":{"index.html":{}}}],["document",{"_index":461,"title":{},"body":{"classes/Attachment.html":{},"classes/DataFile.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/InitialDataset.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"classes/LifecycleClass.html":{},"classes/Logbook.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"classes/OrigDatablock.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/TechniqueClass.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{},"classes/UserSettings.html":{},"index.html":{}}}],["documentation",{"_index":446,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateCustomJwt.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"index.html":{},"license.html":{}}}],["documents",{"_index":1728,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["doi",{"_index":1286,"title":{},"body":{"classes/CreatePublishedDataDto.html":{},"interfaces/ICount.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"index.html":{}}}],["doi's",{"_index":4663,"title":{},"body":{"index.html":{}}}],["doi'})@prop({type",{"_index":3480,"title":{},"body":{"classes/PublishedData.html":{}}}],["doi_prefix",{"_index":4600,"title":{},"body":{"index.html":{}}}],["doiconfigpath",{"_index":3533,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["doing",{"_index":1684,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["doiprovidercredentials",{"_index":3595,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["doiregistered",{"_index":3485,"title":{},"body":{"classes/PublishedData.html":{}}}],["doiregistered'})@prop({type",{"_index":3466,"title":{},"body":{"classes/PublishedData.html":{}}}],["domainname",{"_index":2330,"title":{},"body":{"injectables/JobsService.html":{}}}],["don't",{"_index":447,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"controllers/PoliciesController.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["dotenv",{"_index":4422,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":4686,"title":{},"body":{"index.html":{}}}],["downloaded",{"_index":3487,"title":{},"body":{"classes/PublishedData.html":{}}}],["downloaded'})@prop({type",{"_index":3437,"title":{},"body":{"classes/PublishedData.html":{}}}],["downloadlink",{"_index":1287,"title":{},"body":{"classes/CreatePublishedDataDto.html":{},"classes/PublishedData.html":{}}}],["draft",{"_index":842,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["dto",{"_index":1096,"title":{},"body":{"classes/CreateDatasetDatablockDto.html":{},"index.html":{}}}],["dto/create",{"_index":517,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/InitialDatasetsService.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/credentials.dto",{"_index":608,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/update",{"_index":519,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos",{"_index":4695,"title":{},"body":{"index.html":{}}}],["dtotestorigdatablock",{"_index":3034,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["during",{"_index":3918,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["e",{"_index":2064,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["e.g",{"_index":65,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"classes/Attachment.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/Job.html":{},"classes/LifecycleClass.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/Policy.html":{},"classes/PublishedData.html":{},"classes/UpdateDatasetDto.html":{}}}],["e2e",{"_index":4540,"title":{},"body":{"index.html":{}}}],["e2e(api",{"_index":4560,"title":{},"body":{"index.html":{}}}],["each",{"_index":1058,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/Datablock.html":{},"classes/DatasetListDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableDto.html":{}}}],["edit",{"_index":4574,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":2257,"title":{},"body":{"controllers/JobsController.html":{}}}],["eg",{"_index":1261,"title":{},"body":{"classes/CreateProposalDto.html":{},"classes/ProposalClass.html":{}}}],["email",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"classes/BuildOpenIdClient.html":{},"classes/CreateProposalDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"interfaces/JWTUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/OidcStrategy.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/UpdateDatasetDto.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"classes/UserProfile.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["emailcontext",{"_index":2342,"title":{},"body":{"injectables/JobsService.html":{}}}],["emailcontext.subject",{"_index":2496,"title":{},"body":{"injectables/JobsService.html":{}}}],["emailjobinitiator",{"_index":1125,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["emails",{"_index":2568,"title":{},"body":{"injectables/LdapStrategy.html":{},"classes/Policy.html":{},"classes/UpdateDatasetDto.html":{},"classes/UserProfile.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["emailtemplate",{"_index":2493,"title":{},"body":{"injectables/JobsService.html":{}}}],["emailtemplate(emailcontext",{"_index":2495,"title":{},"body":{"injectables/JobsService.html":{}}}],["emailverified",{"_index":4026,"title":{},"body":{"classes/User.html":{}}}],["embargo",{"_index":4673,"title":{},"body":{"index.html":{}}}],["embargoperiod",{"_index":1213,"title":{},"body":{"classes/CreatePolicyDto.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{}}}],["embedded",{"_index":1248,"title":{},"body":{"classes/CreateProposalDto.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/ProposalClass.html":{}}}],["emit",{"_index":2293,"title":{},"body":{"controllers/JobsController.html":{}}}],["emitter",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"dependencies.html":{}}}],["empty",{"_index":484,"title":{},"body":{"modules/AttachmentsModule.html":{},"modules/DatasetsModule.html":{},"modules/InstrumentsModule.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/LdapStrategy.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{}}}],["emptylogbooks",{"_index":2774,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["enable/disable",{"_index":4641,"title":{},"body":{"index.html":{}}}],["enabled",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["encoded",{"_index":390,"title":{},"body":{"classes/Attachment.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"controllers/PublishedDataController.html":{}}}],["encodedoi",{"_index":3601,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["encodeuricomponent(encodeuricomponent(fulldoi",{"_index":3602,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["encodeuricomponent(encodeuricomponent(id",{"_index":3639,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["end",{"_index":1153,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IDateRange.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"injectables/LogbooksService.html":{},"classes/MeasurementPeriodClass.html":{}}}],["end_session_endpoint",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["ended",{"_index":1161,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/MeasurementPeriodClass.html":{}}}],["endorse",{"_index":4753,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":553,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateDatasetDatablockDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["endpoints",{"_index":4538,"title":{},"body":{"index.html":{}}}],["endtime",{"_index":1233,"title":{},"body":{"classes/CreateProposalDto.html":{},"interfaces/IDateRange.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"classes/ProposalClass.html":{}}}],["enough",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensure",{"_index":1701,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["entry",{"_index":2813,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["enum",{"_index":2152,"title":{},"body":{"classes/Job.html":{},"classes/UpdateDatasetDto.html":{}}}],["enumerations",{"_index":4447,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":3631,"title":{},"body":{"controllers/PublishedDataController.html":{},"index.html":{}}}],["env.example",{"_index":4578,"title":{},"body":{"index.html":{}}}],["environment",{"_index":4532,"title":{},"body":{"index.html":{}}}],["eoidc",{"_index":4630,"title":{},"body":{"index.html":{}}}],["eq",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["equal_to_numeric",{"_index":4497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["equal_to_string",{"_index":4496,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["equivalent",{"_index":1813,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["err",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/PublishedDataController.html":{}}}],["err.response.status",{"_index":3623,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["error",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"controllers/PublishedDataController.html":{},"injectables/UsersService.html":{}}}],["error(\"could",{"_index":854,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["error(\"user",{"_index":2573,"title":{},"body":{"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["errors",{"_index":3038,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["errorstestorigdatablock",{"_index":3035,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["errorstestorigdatablock.length",{"_index":3037,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["eslint",{"_index":1815,"title":{},"body":{"injectables/FilterPipe.html":{},"injectables/JwtAuthGuard.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"controllers/PublishedDataController.html":{}}}],["eslint/naming",{"_index":3634,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["eslint/no",{"_index":2513,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{}}}],["eslint/quotes",{"_index":1819,"title":{},"body":{"injectables/FilterPipe.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{}}}],["ess",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["etc",{"_index":2156,"title":{},"body":{"classes/Job.html":{}}}],["etc'})@prop({type",{"_index":2151,"title":{},"body":{"classes/Job.html":{}}}],["european",{"_index":4718,"title":{},"body":{"index.html":{}}}],["evaluated",{"_index":2593,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["even",{"_index":4791,"title":{},"body":{"license.html":{}}}],["event",{"_index":2294,"title":{},"body":{"controllers/JobsController.html":{},"license.html":{}}}],["event_id",{"_index":2864,"title":{},"body":{"classes/Message.html":{}}}],["eventemitter",{"_index":2219,"title":{},"body":{"controllers/JobsController.html":{}}}],["eventemitter2",{"_index":2214,"title":{},"body":{"controllers/JobsController.html":{}}}],["eventemittermodule",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["eventid",{"_index":2799,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["example",{"_index":2027,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"index.html":{}}}],["examples",{"_index":4586,"title":{},"body":{"index.html":{}}}],["exception",{"_index":2554,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["exclude",{"_index":3117,"title":{},"body":{"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateProposalDto.html":{}}}],["excluding",{"_index":3980,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["exec",{"_index":537,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{},"injectables/UsersService.html":{}}}],["execpolicyhandler",{"_index":3206,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["execpolicyhandler(handler",{"_index":3210,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["executed",{"_index":2136,"title":{},"body":{"classes/Job.html":{}}}],["executioncontext",{"_index":1399,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"guards/PoliciesGuard.html":{},"injectables/RegisteredInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["executiontime",{"_index":1126,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["exemplary",{"_index":4771,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1662,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["existing",{"_index":1682,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["existingdataset",{"_index":1663,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["existingdataset.createdat",{"_index":1672,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["existingdataset.createdby",{"_index":1671,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["existingdataset.history",{"_index":1674,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["existingdataset.pid",{"_index":1670,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["exists",{"_index":2067,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalStrategy.html":{}}}],["existssync",{"_index":3530,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["existssync(this.doiconfigpath",{"_index":3636,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["experiment",{"_index":1251,"title":{},"body":{"classes/CreateProposalDto.html":{},"classes/ProposalClass.html":{}}}],["expiration",{"_index":4154,"title":{},"body":{"controllers/UsersController.html":{}}}],["expiration.'})@apibody({type",{"_index":4157,"title":{},"body":{"controllers/UsersController.html":{}}}],["expire",{"_index":1026,"title":{},"body":{"classes/CreateCustomJwt.html":{}}}],["expires_in",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":698,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateCustomJwt.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["explanation",{"_index":3934,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["explicit",{"_index":2128,"title":{},"body":{"classes/Job.html":{},"injectables/JwtAuthGuard.html":{},"controllers/PublishedDataController.html":{}}}],["export",{"_index":62,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Attachment.html":{},"modules/AttachmentsModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateInitialDatasetDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"modules/DatablocksModule.html":{},"injectables/DatablocksService.html":{},"classes/DatasetListDto.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"classes/HistoryClass.html":{},"injectables/HistoryInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IDatasetList.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/ISampleFields.html":{},"interfaces/IScientificFilter.html":{},"classes/InitialDataset.html":{},"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"injectables/InstrumentsService.html":{},"interfaces/JWTUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapAuthGuard.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Logbook.html":{},"controllers/LogbooksController.html":{},"modules/LogbooksModule.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"modules/PoliciesModule.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"classes/QueryableClass.html":{},"injectables/RegisteredInterceptor.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"classes/TechniqueClass.html":{},"injectables/UTCTimeInterceptor.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatablockDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateInstrumentDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateOrigDatablockDto.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdatePublishedDataDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUserIdentityDto.html":{},"classes/UpdateUserSettingsDto.html":{},"classes/UpdateWherePolicyDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"classes/UserIdentity.html":{},"interfaces/UserPayload.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exportedto",{"_index":2582,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["exports",{"_index":172,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"modules/DatablocksModule.html":{},"modules/DatasetsModule.html":{},"modules/InitialDatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/JobsModule.html":{},"modules/LogbooksModule.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":515,"title":{},"body":{"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"controllers/JobsController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["express_session_secret",{"_index":4603,"title":{},"body":{"index.html":{}}}],["expressed",{"_index":1027,"title":{},"body":{"classes/CreateCustomJwt.html":{},"index.html":{}}}],["expresssessionsecret",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{}}}],["extends",{"_index":18,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/Attachment.html":{},"classes/BuildOpenIdClient.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/Datablock.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapAuthGuard.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MeasurementPeriodClass.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatablockDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateInstrumentDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateOrigDatablockDto.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdatePublishedDataDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUserIdentityDto.html":{},"classes/UpdateUserSettingsDto.html":{}}}],["external",{"_index":558,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["externalid",{"_index":820,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"classes/CreateUserIdentityDto.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{},"classes/UserIdentity.html":{},"injectables/UsersService.html":{}}}],["extract",{"_index":4648,"title":{},"body":{"index.html":{}}}],["extraction",{"_index":1705,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["extractjwt",{"_index":2522,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":2526,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractmetadatakeys",{"_index":1617,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["extractsubjecttype",{"_index":873,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["extrawhereclause",{"_index":1602,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["f",{"_index":2270,"title":{},"body":{"controllers/JobsController.html":{},"index.html":{}}}],["f\\d]{24}$/i",{"_index":3259,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["facets",{"_index":1652,"title":{},"body":{"injectables/DatasetsService.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{}}}],["facilities",{"_index":2295,"title":{},"body":{"controllers/JobsController.html":{},"index.html":{}}}],["facility",{"_index":4601,"title":{},"body":{"index.html":{}}}],["factory",{"_index":684,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["failed",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogbooksService.html":{},"injectables/PoliciesService.html":{}}}],["failure",{"_index":2430,"title":{},"body":{"injectables/JobsService.html":{}}}],["fall",{"_index":2232,"title":{},"body":{"controllers/JobsController.html":{}}}],["fallback",{"_index":851,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["false",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"classes/Attachment.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserSettingsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UsersService.html":{}}}],["false})@apiquery({name",{"_index":3501,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["false})@prop({type",{"_index":379,"title":{},"body":{"classes/Attachment.html":{}}}],["fate",{"_index":2592,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["feel",{"_index":4520,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":15,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"controllers/PublishedDataController.html":{},"dependencies.html":{}}}],["field",{"_index":3277,"title":{},"body":{"injectables/PoliciesService.html":{},"index.html":{}}}],["field.enum",{"_index":3836,"title":{},"body":{"injectables/SamplesService.html":{}}}],["field.enum.ts",{"_index":4454,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fields",{"_index":443,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FullQueryInterceptor.html":{},"classes/HistoryClass.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/IScientificFilter.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"classes/QueryableClass.html":{},"injectables/RegisteredInterceptor.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"injectables/SamplesService.html":{},"index.html":{}}}],["fields.scientific",{"_index":1851,"title":{},"body":{"injectables/FullQueryInterceptor.html":{}}}],["fields[key",{"_index":3847,"title":{},"body":{"injectables/SamplesService.html":{}}}],["fieldsprojection",{"_index":1636,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/InstrumentsService.html":{},"injectables/OrigDatablocksService.html":{}}}],["fieldsprojection).exec",{"_index":1658,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/InstrumentsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Attachment.html":{},"modules/AttachmentsModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateInitialDatasetDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"modules/DatablocksModule.html":{},"injectables/DatablocksService.html":{},"classes/DatasetListDto.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"classes/HistoryClass.html":{},"injectables/HistoryInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IDatasetList.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/ISampleFields.html":{},"interfaces/IScientificFilter.html":{},"classes/InitialDataset.html":{},"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"injectables/InstrumentsService.html":{},"interfaces/JWTUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapAuthGuard.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Logbook.html":{},"controllers/LogbooksController.html":{},"modules/LogbooksModule.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"modules/PoliciesModule.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"classes/QueryableClass.html":{},"injectables/RegisteredInterceptor.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"classes/TechniqueClass.html":{},"injectables/UTCTimeInterceptor.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatablockDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateInstrumentDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateOrigDatablockDto.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdatePublishedDataDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUserIdentityDto.html":{},"classes/UpdateUserSettingsDto.html":{},"classes/UpdateWherePolicyDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"classes/UserIdentity.html":{},"interfaces/UserPayload.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["file.'})@isoptional()@isstring()@isnotempty",{"_index":1059,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{}}}],["file.'})@prop({type",{"_index":1481,"title":{},"body":{"classes/Datablock.html":{},"classes/OrigDatablock.html":{}}}],["filename",{"_index":3981,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["filepath",{"_index":4322,"title":{},"body":{"injectables/UsersService.html":{}}}],["files",{"_index":1071,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/Datablock.html":{},"classes/DatasetListDto.html":{},"interfaces/IDatasetList.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/PublishedData.html":{},"classes/UpdateDatasetDto.html":{}}}],["files'})@prop({type",{"_index":3439,"title":{},"body":{"classes/PublishedData.html":{}}}],["fileserver",{"_index":2621,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["filesystem",{"_index":1453,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{}}}],["filesystem.'})@isstring()@isoptional",{"_index":1460,"title":{},"body":{"classes/DataFileDto.html":{}}}],["filesystem.'})@prop({type",{"_index":1432,"title":{},"body":{"classes/DataFile.html":{}}}],["filter",{"_index":505,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["filter((key",{"_index":1713,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["filter((name",{"_index":2536,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["filter((r",{"_index":2680,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["filter.'})@apiquery({name",{"_index":2026,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/OrigDatablocksController.html":{}}}],["filter.fields",{"_index":1637,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["filter.filter",{"_index":3551,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["filter.limit",{"_index":3274,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["filter.order",{"_index":3276,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["filter.order.split",{"_index":3278,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["filter.replace(/{\"and\":\\[/g",{"_index":1822,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["filter.replace(/{\"inq\":/g",{"_index":1820,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["filter.replace(/{\"nin\":/g",{"_index":1821,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["filter.replace(/{\"or\":\\[/g",{"_index":1823,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["filter.skip",{"_index":3275,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["filter.where",{"_index":1635,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["filterdescription",{"_index":2055,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/OrigDatablocksController.html":{}}}],["filteredlogbook",{"_index":4256,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["filterexample",{"_index":2056,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/OrigDatablocksController.html":{}}}],["filterexample})@apiresponse({status",{"_index":2028,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/OrigDatablocksController.html":{}}}],["filterkey",{"_index":1722,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["filterpipe",{"_index":1795,"title":{"injectables/FilterPipe.html":{}},"body":{"injectables/FilterPipe.html":{},"controllers/PoliciesController.html":{}}}],["filterquery",{"_index":503,"title":{},"body":{"injectables/AttachmentsService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/IScientificFilter.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"injectables/UserIdentitiesService.html":{},"injectables/UsersService.html":{}}}],["filterquery.$text",{"_index":3848,"title":{},"body":{"injectables/SamplesService.html":{}}}],["filters",{"_index":1600,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/SamplesService.html":{},"controllers/UserIdentitiesController.html":{}}}],["filters.facets",{"_index":1653,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{}}}],["filters.fields",{"_index":1651,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{},"injectables/SamplesService.html":{}}}],["filters.fields.metadatakey",{"_index":1717,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["filters.interface",{"_index":1626,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/JobsService.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/SamplesService.html":{}}}],["filters.interface.ts",{"_index":1926,"title":{},"body":{"interfaces/IDatasetFields.html":{},"interfaces/IDateRange.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/ISampleFields.html":{}}}],["filters.interface.ts:19",{"_index":1933,"title":{},"body":{"interfaces/IDatasetFields.html":{}}}],["filters.limits",{"_index":1709,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["final",{"_index":2458,"title":{},"body":{"injectables/JobsService.html":{}}}],["find",{"_index":855,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/DatasetsService.html":{},"injectables/OidcStrategy.html":{},"injectables/RolesService.html":{},"index.html":{}}}],["find((c",{"_index":2914,"title":{},"body":{"injectables/OidcAuthGuard.html":{}}}],["find(filter",{"_index":3734,"title":{},"body":{"injectables/RolesService.html":{}}}],["find(whereclause",{"_index":1650,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/PublishedDataService.html":{}}}],["find(wherefilter",{"_index":1643,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/InstrumentsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/SamplesService.html":{}}}],["find(wherefilters",{"_index":2381,"title":{},"body":{"injectables/JobsService.html":{}}}],["findall",{"_index":491,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["findall(@query(\"filter",{"_index":2070,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{}}}],["findall(filter",{"_index":502,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["findall(request",{"_index":3135,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["findalluserroles",{"_index":3720,"title":{},"body":{"injectables/RolesService.html":{}}}],["findalluserroles(filter",{"_index":3736,"title":{},"body":{"injectables/RolesService.html":{}}}],["findbyid",{"_index":1972,"title":{},"body":{"injectables/InitialDatasetsService.html":{},"controllers/InstrumentsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findbyid(@param(\"id",{"_index":2083,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/OrigDatablocksController.html":{}}}],["findbyid(id",{"_index":1978,"title":{},"body":{"injectables/InitialDatasetsService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/UsersService.html":{}}}],["findbyid(pid",{"_index":2018,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["findbyid(request",{"_index":4163,"title":{},"body":{"controllers/UsersController.html":{}}}],["findbyid2jwtuser",{"_index":4274,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid2jwtuser(id",{"_index":4295,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyidanddelete",{"_index":1563,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["findbyidanddelete(id",{"_index":1583,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["findbyidandreplace",{"_index":1564,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["findbyidandreplace(id",{"_index":1585,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["findbyidandupdate",{"_index":1565,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["findbyidandupdate(id",{"_index":1590,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["findbyiduseridentity",{"_index":4275,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyiduseridentity(userid",{"_index":4297,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyidusersettings",{"_index":4276,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyidusersettings(userid",{"_index":4299,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyname",{"_index":2704,"title":{},"body":{"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{}}}],["findbyname(name",{"_index":2707,"title":{},"body":{"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{}}}],["findone",{"_index":492,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"injectables/UsersService.html":{}}}],["findone(@param(\"id",{"_index":2311,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{}}}],["findone(@query(\"filter",{"_index":2078,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["findone(filter",{"_index":506,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"injectables/UserIdentitiesService.html":{},"injectables/UsersService.html":{}}}],["findone(headers",{"_index":4048,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["findone(id",{"_index":2194,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{}}}],["findoneanddelete",{"_index":4387,"title":{},"body":{"injectables/UsersService.html":{}}}],["findoneandremove",{"_index":493,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["findoneandremove(filter",{"_index":509,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["findoneandremoveusersettings",{"_index":4277,"title":{},"body":{"injectables/UsersService.html":{}}}],["findoneandremoveusersettings(userid",{"_index":4303,"title":{},"body":{"injectables/UsersService.html":{}}}],["findoneandreplace",{"_index":1676,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["findoneandupdate",{"_index":494,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/UsersService.html":{}}}],["findoneandupdate(filter",{"_index":511,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/PoliciesService.html":{},"injectables/SamplesService.html":{}}}],["findoneandupdateusersettings",{"_index":4278,"title":{},"body":{"injectables/UsersService.html":{}}}],["findoneandupdateusersettings(userid",{"_index":4305,"title":{},"body":{"injectables/UsersService.html":{}}}],["findoneuserrole",{"_index":3721,"title":{},"body":{"injectables/RolesService.html":{}}}],["findoneuserrole(filter",{"_index":3739,"title":{},"body":{"injectables/RolesService.html":{}}}],["findorcreate",{"_index":3722,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["findorcreate(createroledto",{"_index":3741,"title":{},"body":{"injectables/RolesService.html":{}}}],["findorcreate(createuserdto",{"_index":4307,"title":{},"body":{"injectables/UsersService.html":{}}}],["findorcreateuserrole",{"_index":3723,"title":{},"body":{"injectables/RolesService.html":{}}}],["findorcreateuserrole(createuserroledto",{"_index":3743,"title":{},"body":{"injectables/RolesService.html":{}}}],["finished",{"_index":2161,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{}}}],["finished.'})@prop({type",{"_index":2147,"title":{},"body":{"classes/Job.html":{}}}],["finishes",{"_index":1278,"title":{},"body":{"classes/CreateProposalDto.html":{},"classes/ProposalClass.html":{}}}],["finishes.'})@isoptional()@isdatestring",{"_index":1241,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["finishes.'})@prop({type",{"_index":3361,"title":{},"body":{"classes/ProposalClass.html":{}}}],["first",{"_index":1243,"title":{},"body":{"classes/CreateProposalDto.html":{},"controllers/InstrumentsController.html":{},"classes/ProposalClass.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["firstname",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateProposalDto.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"classes/ProposalClass.html":{},"controllers/PublishedDataController.html":{}}}],["firstvaluefrom",{"_index":60,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/LogbooksService.html":{},"controllers/PublishedDataController.html":{}}}],["fitness",{"_index":4762,"title":{},"body":{"license.html":{}}}],["flag",{"_index":437,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateSampleDto.html":{},"classes/Datablock.html":{},"classes/Job.html":{},"classes/LifecycleClass.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["flag.'})@prop({type",{"_index":2122,"title":{},"body":{"classes/Job.html":{}}}],["folder",{"_index":1451,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["folder.'})@isstring",{"_index":1462,"title":{},"body":{"classes/DataFileDto.html":{}}}],["folder.'})@prop({type",{"_index":1436,"title":{},"body":{"classes/DataFile.html":{}}}],["follow",{"_index":4692,"title":{},"body":{"index.html":{}}}],["following",{"_index":1877,"title":{},"body":{"classes/HistoryClass.html":{},"controllers/JobsController.html":{},"index.html":{},"license.html":{}}}],["forbidden",{"_index":4078,"title":{},"body":{"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["forbiddenexception",{"_index":4055,"title":{},"body":{"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["forbiddenexception(\"access",{"_index":4077,"title":{},"body":{"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["foreignfield",{"_index":3095,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["form",{"_index":3508,"title":{},"body":{"controllers/PublishedDataController.html":{},"index.html":{},"license.html":{}}}],["format",{"_index":1077,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/Job.html":{},"classes/MeasurementPeriodClass.html":{},"injectables/PoliciesService.html":{},"classes/UpdateDatasetDto.html":{}}}],["formatcamelcase",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["formatcamelcase(string",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["formatphysicalquantitiesinterceptor",{"_index":1825,"title":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{}},"body":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"controllers/InstrumentsController.html":{}}}],["formatphysicalquantitiesinterceptor(\"custommetadata",{"_index":2062,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["formatphysicalquantitiesinterceptor())@patch(':id",{"_index":2036,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["formatphysicalquantitiesinterceptor())@post",{"_index":2011,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["formats",{"_index":4587,"title":{},"body":{"index.html":{}}}],["formdata",{"_index":3560,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["formdata.abstract",{"_index":3567,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["formdata.description",{"_index":3562,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["formdata.resourcetype",{"_index":3561,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["formdata.thumbnail",{"_index":3570,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["formdata.title",{"_index":3565,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["formpopulate",{"_index":3493,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["formpopulate(@query(\"pid",{"_index":3559,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["formpopulate(pid",{"_index":3506,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["formregistrationxml",{"_index":4502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["formregistrationxml(publisheddata",{"_index":3585,"title":{},"body":{"controllers/PublishedDataController.html":{},"miscellaneous/functions.html":{}}}],["forms",{"_index":4739,"title":{},"body":{"license.html":{}}}],["forwardref",{"_index":1540,"title":{},"body":{"modules/DatasetsModule.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{}}}],["found",{"_index":1679,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/LdapStrategy.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["founduser",{"_index":2569,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["framework",{"_index":4720,"title":{},"body":{"index.html":{}}}],["free",{"_index":3933,"title":{},"body":{"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["frontend",{"_index":470,"title":{},"body":{"classes/Attachment.html":{},"controllers/UserIdentitiesController.html":{},"index.html":{}}}],["frontend.'})@prop({type",{"_index":376,"title":{},"body":{"classes/Attachment.html":{}}}],["fs",{"_index":2369,"title":{},"body":{"injectables/JobsService.html":{},"controllers/PublishedDataController.html":{},"injectables/UsersService.html":{}}}],["fs.existssync(filepath",{"_index":4324,"title":{},"body":{"injectables/UsersService.html":{}}}],["fs.readfilesync(filepath",{"_index":4325,"title":{},"body":{"injectables/UsersService.html":{}}}],["full",{"_index":1661,"title":{},"body":{"injectables/DatasetsService.html":{},"classes/LifecycleClass.html":{},"classes/PublishedData.html":{},"index.html":{}}}],["fulldoi",{"_index":3588,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["fulldoi}\\nurl=${this.configservice.get",{"_index":3608,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["fullfacet",{"_index":1566,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{}}}],["fullfacet(filters",{"_index":1597,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{}}}],["fullfacetfiles",{"_index":2939,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["fullfacetfiles(filters",{"_index":2963,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["fullquery",{"_index":1567,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{},"injectables/SamplesService.html":{}}}],["fullquery(filter",{"_index":1601,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{},"injectables/SamplesService.html":{}}}],["fullquery(filters",{"_index":2198,"title":{},"body":{"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{}}}],["fullqueryfiles",{"_index":2940,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["fullqueryfiles(filters",{"_index":2979,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["fullqueryfileslist",{"_index":3067,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["fullqueryfileslist(filter",{"_index":3077,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["fullqueryinterceptor",{"_index":1842,"title":{"injectables/FullQueryInterceptor.html":{}},"body":{"injectables/FullQueryInterceptor.html":{}}}],["fully",{"_index":3908,"title":{},"body":{"classes/UpdateDatasetDto.html":{},"controllers/UserIdentitiesController.html":{}}}],["function",{"_index":43,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"modules/AttachmentsModule.html":{},"controllers/AuthController.html":{},"modules/DatasetsModule.html":{},"classes/Instrument.html":{},"modules/InstrumentsModule.html":{},"classes/LifecycleClass.html":{},"guards/PoliciesGuard.html":{},"modules/ProposalsModule.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"miscellaneous/typealiases.html":{}}}],["functional",{"_index":3296,"title":{},"body":{"injectables/PoliciesService.html":{},"index.html":{}}}],["functionalaccounts",{"_index":4320,"title":{},"body":{"injectables/UsersService.html":{}}}],["functionalaccounts.json",{"_index":4323,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["functionalaccounts.json.example",{"_index":4533,"title":{},"body":{"index.html":{}}}],["functionalaccounts.length",{"_index":4328,"title":{},"body":{"injectables/UsersService.html":{}}}],["functionalaccounts.map(async",{"_index":4330,"title":{},"body":{"injectables/UsersService.html":{}}}],["functionality",{"_index":4638,"title":{},"body":{"index.html":{}}}],["functions",{"_index":4500,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funding",{"_index":4717,"title":{},"body":{"index.html":{}}}],["further",{"_index":2976,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["future",{"_index":587,"title":{},"body":{"controllers/AuthController.html":{},"classes/LifecycleClass.html":{},"controllers/UserIdentitiesController.html":{}}}],["g",{"_index":3289,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["generated",{"_index":1350,"title":{},"body":{"classes/CreateSampleDto.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["gensalt",{"_index":4316,"title":{},"body":{"injectables/UsersService.html":{}}}],["genuuid",{"_index":2000,"title":{},"body":{"classes/Instrument.html":{},"classes/PublishedData.html":{}}}],["geo",{"_index":3348,"title":{},"body":{"classes/Policy.html":{}}}],["get(\"/:id",{"_index":3053,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{}}}],["get(\"/:id/authorization/dataset/create",{"_index":4233,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(\"/:id/settings",{"_index":4220,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(\"/:name",{"_index":2719,"title":{},"body":{"controllers/LogbooksController.html":{}}}],["get(\"/count",{"_index":3189,"title":{},"body":{"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{}}}],["get(\"/findone",{"_index":2075,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/UserIdentitiesController.html":{}}}],["get(\"/formpopulate",{"_index":3558,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["get(\"/fullfacet",{"_index":2308,"title":{},"body":{"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{}}}],["get(\"/fullfacet/files",{"_index":3049,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["get(\"/fullquery",{"_index":2303,"title":{},"body":{"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{}}}],["get(\"/fullquery/files",{"_index":3044,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["get(\"/isvalidemail",{"_index":4080,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["get(\":id",{"_index":2082,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/PoliciesController.html":{}}}],["get(\":id/useridentity",{"_index":4212,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(\"config",{"_index":160,"title":{},"body":{"controllers/AdminController.html":{}}}],["get(\"oidc",{"_index":629,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(\"oidc/callback",{"_index":637,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(\"theme",{"_index":163,"title":{},"body":{"controllers/AdminController.html":{}}}],["get(\"whoami",{"_index":654,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/:id')@apioperation({summary",{"_index":2957,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["get('/:id/authorization/dataset/create",{"_index":4145,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id/settings",{"_index":4167,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/count",{"_index":3131,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["get('/findone",{"_index":4050,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["get('/findone')@apioperation({summary",{"_index":2021,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["get('/formpopulate')@apiquery({name",{"_index":3507,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["get('/fullfacet",{"_index":2196,"title":{},"body":{"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{}}}],["get('/fullfacet/files",{"_index":2964,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["get('/fullquery",{"_index":2199,"title":{},"body":{"controllers/JobsController.html":{}}}],["get('/fullquery')@apiquery({name",{"_index":2966,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["get('/fullquery/files')@apiquery({name",{"_index":2980,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["get(':id",{"_index":2019,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/PoliciesController.html":{}}}],["get(':id/useridentity",{"_index":4170,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@apioperation({summary",{"_index":2954,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["get()@apiquery({name",{"_index":2013,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/PoliciesController.html":{}}}],["getaccessgroups",{"_index":24,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{}}}],["getaccessgroups(userpayload",{"_index":49,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"classes/AccessGroupService.html":{}}}],["getconfig",{"_index":144,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["getfilters",{"_index":3127,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["getfilters(headers",{"_index":3140,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["getpolicy",{"_index":2333,"title":{},"body":{"injectables/JobsService.html":{}}}],["getpolicy(datasetid",{"_index":2351,"title":{},"body":{"injectables/JobsService.html":{}}}],["getprofile",{"_index":2547,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["getprofile(payload",{"_index":2549,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["getrequest",{"_index":2500,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/OidcAuthGuard.html":{}}}],["getrequest(context",{"_index":2504,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/OidcAuthGuard.html":{}}}],["getschemapath",{"_index":1203,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{},"classes/Datablock.html":{},"classes/Logbook.html":{},"classes/OrigDatablock.html":{},"classes/ProposalClass.html":{}}}],["getschemapath(attachment",{"_index":3793,"title":{},"body":{"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["getschemapath(datafile",{"_index":1204,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{}}}],["getschemapath(dataset",{"_index":3795,"title":{},"body":{"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["getschemapath(message",{"_index":2696,"title":{},"body":{"classes/Logbook.html":{}}}],["getsettings",{"_index":4138,"title":{},"body":{"controllers/UsersController.html":{}}}],["getsettings(request",{"_index":4166,"title":{},"body":{"controllers/UsersController.html":{}}}],["getsubfieldcount",{"_index":3050,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["getters",{"_index":469,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/InitialDataset.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"classes/OrigDatablock.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/User.html":{},"classes/UserIdentity.html":{},"classes/UserSettings.html":{}}}],["gettheme",{"_index":145,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["getting",{"_index":4505,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuseridentity",{"_index":4139,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuseridentity(request",{"_index":4169,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserjwt",{"_index":4140,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserjwt(@req",{"_index":4205,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserjwt(request",{"_index":4172,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserphoto",{"_index":2918,"title":{},"body":{"injectables/OidcStrategy.html":{}}}],["getuserphoto(userinfo",{"_index":830,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["gid",{"_index":1422,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{}}}],["git",{"_index":4524,"title":{},"body":{"index.html":{}}}],["github",{"_index":4542,"title":{},"body":{"index.html":{}}}],["given",{"_index":1047,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/Datablock.html":{},"classes/UpdateDatasetDto.html":{}}}],["global",{"_index":1362,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["globalaccess",{"_index":3756,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["globally",{"_index":1260,"title":{},"body":{"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/Job.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["go",{"_index":4535,"title":{},"body":{"index.html":{}}}],["going",{"_index":585,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateCustomJwt.html":{}}}],["good",{"_index":2441,"title":{},"body":{"injectables/JobsService.html":{}}}],["good.length",{"_index":2453,"title":{},"body":{"injectables/JobsService.html":{}}}],["goods",{"_index":4776,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":4711,"title":{},"body":{"index.html":{}}}],["grant",{"_index":4726,"title":{},"body":{"index.html":{}}}],["graphql",{"_index":9,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["graphqltemplatequery",{"_index":42,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["graphs.'})@isoptional()@isstring({each",{"_index":3946,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["greater_than",{"_index":4498,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["group",{"_index":7,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"classes/Attachment.html":{},"modules/AuthModule.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["group.service",{"_index":54,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"modules/AuthModule.html":{},"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"injectables/UsersService.html":{}}}],["group.service.ts",{"_index":135,"title":{},"body":{"classes/AccessGroupService.html":{}}}],["group.service.ts:4",{"_index":137,"title":{},"body":{"classes/AccessGroupService.html":{}}}],["groups",{"_index":17,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/Attachment.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["gt",{"_index":3098,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["guard",{"_index":3202,"title":{"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{}},"body":{}}],["guards",{"_index":3203,"title":{},"body":{"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guards/jwt",{"_index":602,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/ldap.guard",{"_index":610,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/local",{"_index":599,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/oidc.guard",{"_index":614,"title":{},"body":{"controllers/AuthController.html":{}}}],["hacky",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["handle",{"_index":1951,"title":{},"body":{"interfaces/IPolicyHandler.html":{}}}],["handle(ability",{"_index":1952,"title":{},"body":{"interfaces/IPolicyHandler.html":{}}}],["handleaxiosrequesterror",{"_index":2749,"title":{},"body":{"injectables/LogbooksService.html":{},"controllers/PublishedDataController.html":{}}}],["handleaxiosrequesterror(err",{"_index":3620,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["handleaxiosrequesterror(error",{"_index":2761,"title":{},"body":{"injectables/LogbooksService.html":{},"controllers/PublishedDataController.html":{}}}],["handlebars",{"_index":2371,"title":{},"body":{"injectables/JobsService.html":{},"dependencies.html":{}}}],["handlebarsadapter",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["handled",{"_index":433,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/Job.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["handler",{"_index":3212,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handler(ability",{"_index":3221,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handler.handle(ability",{"_index":3223,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handler.interface",{"_index":3215,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handler.interface.ts",{"_index":1950,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"miscellaneous/typealiases.html":{}}}],["handler.interface.ts:4",{"_index":1953,"title":{},"body":{"interfaces/IPolicyHandler.html":{}}}],["handlerequest",{"_index":2501,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":2506,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handling",{"_index":3920,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["happen",{"_index":2476,"title":{},"body":{"injectables/JobsService.html":{}}}],["hash",{"_index":1057,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"injectables/UsersService.html":{}}}],["hashedpassword",{"_index":4371,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashing",{"_index":1188,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{}}}],["hashstring",{"_index":1428,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{}}}],["hasing",{"_index":1054,"title":{},"body":{"classes/CreateDatablockDto.html":{}}}],["haspermission",{"_index":3298,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["hdf5",{"_index":3979,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["header",{"_index":393,"title":{},"body":{"classes/Attachment.html":{}}}],["headers",{"_index":29,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"injectables/LogbooksService.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{}}}],["headers.filter",{"_index":4067,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["headers?.filter",{"_index":3164,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["headers?.where",{"_index":3165,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["helpers",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["here",{"_index":404,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["high",{"_index":3345,"title":{},"body":{"classes/Policy.html":{}}}],["his/her",{"_index":4073,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["history",{"_index":1673,"title":{},"body":{"injectables/DatasetsService.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{}}}],["historyclass",{"_index":1864,"title":{"classes/HistoryClass.html":{}},"body":{"classes/HistoryClass.html":{}}}],["historydocument",{"_index":1875,"title":{},"body":{"classes/HistoryClass.html":{},"miscellaneous/typealiases.html":{}}}],["historyinterceptor",{"_index":1888,"title":{"injectables/HistoryInterceptor.html":{}},"body":{"injectables/HistoryInterceptor.html":{},"controllers/PoliciesController.html":{}}}],["historyitem",{"_index":1773,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["historyitem[updatedfield",{"_index":1775,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["historyschema",{"_index":1886,"title":{},"body":{"classes/HistoryClass.html":{}}}],["hold",{"_index":4677,"title":{},"body":{"index.html":{}}}],["holder",{"_index":4751,"title":{},"body":{"license.html":{}}}],["holders",{"_index":4757,"title":{},"body":{"license.html":{}}}],["holds",{"_index":4511,"title":{},"body":{"index.html":{}}}],["home",{"_index":4691,"title":{},"body":{"index.html":{}}}],["hookstate",{"_index":2317,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["horizon",{"_index":4724,"title":{},"body":{"index.html":{}}}],["host",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["hosting",{"_index":3987,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["hostname",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["html",{"_index":2825,"title":{},"body":{"injectables/MailService.html":{}}}],["htmltemplate",{"_index":2487,"title":{},"body":{"injectables/JobsService.html":{}}}],["http",{"_index":4606,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/explorer",{"_index":4536,"title":{},"body":{"index.html":{}}}],["http://myscicat/api/v3/oidc/callback",{"_index":4632,"title":{},"body":{"index.html":{}}}],["http_max_redirects",{"_index":4604,"title":{},"body":{"index.html":{}}}],["http_timeout",{"_index":4609,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":597,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/UsersController.html":{}}}],["httpcode(200",{"_index":657,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["httpcode(httpstatus.created",{"_index":3013,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["httpcode(httpstatus.created)@post()@apioperation({summary",{"_index":2944,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["httpcode(httpstatus.ok",{"_index":3030,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{}}}],["httpexception",{"_index":2041,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{}}}],["httpmodule",{"_index":2729,"title":{},"body":{"modules/LogbooksModule.html":{},"modules/PublishedDataModule.html":{}}}],["httpmodule.registerasync",{"_index":2731,"title":{},"body":{"modules/LogbooksModule.html":{},"modules/PublishedDataModule.html":{}}}],["https://betterprogramming.pub/how",{"_index":4696,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com/openapi/decorators",{"_index":4709,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com/openapi/introduction",{"_index":4707,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com/openapi/types",{"_index":4708,"title":{},"body":{"index.html":{}}}],["https://github.com/auth0/node",{"_index":1031,"title":{},"body":{"classes/CreateCustomJwt.html":{}}}],["https://github.com/scicatproject/backend",{"_index":4517,"title":{},"body":{"index.html":{}}}],["https://github.com/scicatproject/scicat",{"_index":4526,"title":{},"body":{"index.html":{}}}],["https://identity.esss.dk/realm/ess",{"_index":4622,"title":{},"body":{"index.html":{}}}],["https://myscicatfrontend/auth",{"_index":4636,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/57324321/mongoose",{"_index":1686,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["httpservice",{"_index":35,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/LogbooksService.html":{},"controllers/PublishedDataController.html":{}}}],["httpstatus",{"_index":2042,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{}}}],["httpstatus.bad_request",{"_index":2068,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/PoliciesController.html":{}}}],["httpstatus.conflict",{"_index":2235,"title":{},"body":{"controllers/JobsController.html":{}}}],["httpstatus.created",{"_index":2287,"title":{},"body":{"controllers/JobsController.html":{}}}],["httpstatus.failed_dependency",{"_index":3624,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["httpstatus.ok",{"_index":3573,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["httpstatus.unauthorized",{"_index":2280,"title":{},"body":{"controllers/JobsController.html":{}}}],["i.e",{"_index":3909,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["iaxioserror",{"_index":1897,"title":{"interfaces/IAxiosError.html":{}},"body":{"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{}}}],["icount",{"_index":1915,"title":{"interfaces/ICount.html":{}},"body":{"interfaces/ICount.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{}}}],["id",{"_index":364,"title":{},"body":{"classes/Attachment.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{},"injectables/InitialDatasetsService.html":{},"controllers/InstrumentsController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/OidcStrategy.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"controllers/PublishedDataController.html":{},"classes/UpdateAttachmentDto.html":{},"classes/User.html":{},"classes/UserProfile.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["idatablockfields",{"_index":1923,"title":{"interfaces/IDatablockFields.html":{}},"body":{"interfaces/IDatablockFields.html":{}}}],["idatafilefilter",{"_index":1912,"title":{"interfaces/IDatafileFilter.html":{}},"body":{"interfaces/IAxiosError.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{}}}],["idatasetfields",{"_index":1625,"title":{"interfaces/IDatasetFields.html":{}},"body":{"injectables/DatasetsService.html":{},"injectables/FullQueryInterceptor.html":{},"interfaces/IDatasetFields.html":{},"injectables/JobsService.html":{}}}],["idatasetlist",{"_index":1130,"title":{"interfaces/IDatasetList.html":{}},"body":{"classes/CreateJobDto.html":{},"interfaces/IDatasetList.html":{}}}],["idaterange",{"_index":1937,"title":{"interfaces/IDateRange.html":{}},"body":{"interfaces/IDateRange.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{}}}],["ideally",{"_index":3940,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["identifier",{"_index":1046,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/Job.html":{},"classes/MeasurementPeriodClass.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/RelationshipClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/TechniqueClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["identifier'})@prop({type",{"_index":3433,"title":{},"body":{"classes/PublishedData.html":{}}}],["identities",{"_index":4060,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["identities.controller",{"_index":4267,"title":{},"body":{"modules/UsersModule.html":{}}}],["identities.controller.ts",{"_index":4045,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["identities.controller.ts:38",{"_index":4051,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["identities.controller.ts:93",{"_index":4054,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["identities.service",{"_index":4057,"title":{},"body":{"controllers/UserIdentitiesController.html":{},"modules/UsersModule.html":{}}}],["identities.service.ts",{"_index":4081,"title":{},"body":{"injectables/UserIdentitiesService.html":{}}}],["identities.service.ts:10",{"_index":4083,"title":{},"body":{"injectables/UserIdentitiesService.html":{}}}],["identities.service.ts:16",{"_index":4085,"title":{},"body":{"injectables/UserIdentitiesService.html":{}}}],["identity",{"_index":824,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["identity.dto",{"_index":773,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{},"classes/UpdateUserIdentityDto.html":{},"injectables/UsersService.html":{}}}],["identity.dto.ts",{"_index":1369,"title":{},"body":{"classes/CreateUserIdentityDto.html":{},"classes/UpdateUserIdentityDto.html":{}}}],["identity.dto.ts:12",{"_index":1372,"title":{},"body":{"classes/CreateUserIdentityDto.html":{}}}],["identity.dto.ts:15",{"_index":1373,"title":{},"body":{"classes/CreateUserIdentityDto.html":{}}}],["identity.dto.ts:18",{"_index":1374,"title":{},"body":{"classes/CreateUserIdentityDto.html":{}}}],["identity.dto.ts:21",{"_index":1375,"title":{},"body":{"classes/CreateUserIdentityDto.html":{}}}],["identity.dto.ts:6",{"_index":1370,"title":{},"body":{"classes/CreateUserIdentityDto.html":{}}}],["identity.dto.ts:9",{"_index":1371,"title":{},"body":{"classes/CreateUserIdentityDto.html":{}}}],["identity.schema",{"_index":902,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["identity.schema.ts",{"_index":4089,"title":{},"body":{"classes/UserIdentity.html":{},"miscellaneous/typealiases.html":{}}}],["identity.schema.ts:17",{"_index":4090,"title":{},"body":{"classes/UserIdentity.html":{}}}],["identity.schema.ts:20",{"_index":4091,"title":{},"body":{"classes/UserIdentity.html":{}}}],["identity.schema.ts:23",{"_index":4092,"title":{},"body":{"classes/UserIdentity.html":{}}}],["identity.schema.ts:26",{"_index":4093,"title":{},"body":{"classes/UserIdentity.html":{}}}],["identity.schema.ts:29",{"_index":4094,"title":{},"body":{"classes/UserIdentity.html":{}}}],["identity.schema.ts:32",{"_index":4095,"title":{},"body":{"classes/UserIdentity.html":{}}}],["identity.schema.ts:35",{"_index":4096,"title":{},"body":{"classes/UserIdentity.html":{}}}],["identity.schema.ts:38",{"_index":4097,"title":{},"body":{"classes/UserIdentity.html":{}}}],["identity.userid",{"_index":4076,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["idp",{"_index":110,"title":{},"body":{"injectables/AccessGroupFromPayloadService.html":{}}}],["idppayload",{"_index":72,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"classes/AccessGroupService.html":{}}}],["ids",{"_index":2174,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["ids.length",{"_index":2226,"title":{},"body":{"controllers/JobsController.html":{}}}],["ifacets",{"_index":1598,"title":{"interfaces/IFacets.html":{}},"body":{"injectables/DatasetsService.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{}}}],["ifilters",{"_index":1581,"title":{"interfaces/IFilters.html":{}},"body":{"injectables/DatasetsService.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/ProposalsService.html":{},"injectables/SamplesService.html":{}}}],["iformpopulatedata",{"_index":1921,"title":{"interfaces/IFormPopulateData.html":{}},"body":{"interfaces/ICount.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"controllers/PublishedDataController.html":{}}}],["ignored",{"_index":3352,"title":{},"body":{"classes/Policy.html":{}}}],["ignored'})@prop({type",{"_index":3326,"title":{},"body":{"classes/Policy.html":{}}}],["ignoreexpiration",{"_index":2527,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ilimitsfilter",{"_index":1907,"title":{"interfaces/ILimitsFilter.html":{}},"body":{"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{}}}],["image",{"_index":391,"title":{},"body":{"classes/Attachment.html":{},"classes/PublishedData.html":{},"index.html":{}}}],["implementation",{"_index":4507,"title":{},"body":{"index.html":{}}}],["implements",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCustomJwt.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{},"injectables/RegisteredInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{}}}],["implicitly",{"_index":2184,"title":{},"body":{"controllers/JobsController.html":{}}}],["implied",{"_index":4758,"title":{},"body":{"license.html":{}}}],["implying",{"_index":2126,"title":{},"body":{"classes/Job.html":{}}}],["import",{"_index":53,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Attachment.html":{},"modules/AttachmentsModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"modules/DatablocksModule.html":{},"injectables/DatablocksService.html":{},"classes/DatasetListDto.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"classes/HistoryClass.html":{},"injectables/HistoryInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/ISampleFields.html":{},"interfaces/IScientificFilter.html":{},"classes/InitialDataset.html":{},"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"injectables/InstrumentsService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapAuthGuard.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Logbook.html":{},"controllers/LogbooksController.html":{},"modules/LogbooksModule.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"modules/PoliciesModule.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"classes/QueryableClass.html":{},"injectables/RegisteredInterceptor.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"classes/TechniqueClass.html":{},"injectables/UTCTimeInterceptor.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatablockDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateInstrumentDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateOrigDatablockDto.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdatePublishedDataDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUserIdentityDto.html":{},"classes/UpdateUserSettingsDto.html":{},"classes/UpdateWherePolicyDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["important",{"_index":4508,"title":{},"body":{"index.html":{}}}],["imports",{"_index":181,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"modules/AuthModule.html":{},"modules/DatablocksModule.html":{},"modules/DatasetsModule.html":{},"modules/InitialDatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/JobsModule.html":{},"modules/LogbooksModule.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"modules/UsersModule.html":{}}}],["in.'})@apiresponse({status",{"_index":4175,"title":{},"body":{"controllers/UsersController.html":{}}}],["incidental",{"_index":4770,"title":{},"body":{"license.html":{}}}],["include",{"_index":1909,"title":{},"body":{"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/IScientificFilter.html":{},"controllers/JobsController.html":{}}}],["includepassword",{"_index":4301,"title":{},"body":{"injectables/UsersService.html":{}}}],["including",{"_index":932,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/UpdateDatasetDto.html":{},"license.html":{}}}],["inconsistencies",{"_index":3169,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["indefinitely",{"_index":4678,"title":{},"body":{"index.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/Attachment.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateInitialDatasetDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"injectables/DatablocksService.html":{},"classes/DatasetListDto.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"classes/HistoryClass.html":{},"injectables/HistoryInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IDatasetList.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/ISampleFields.html":{},"interfaces/IScientificFilter.html":{},"classes/InitialDataset.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"interfaces/JWTUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalStrategy.html":{},"classes/Logbook.html":{},"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"classes/QueryableClass.html":{},"injectables/RegisteredInterceptor.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"classes/TechniqueClass.html":{},"injectables/UTCTimeInterceptor.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdateWherePolicyDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"classes/UserIdentity.html":{},"interfaces/UserPayload.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":1932,"title":{},"body":{"interfaces/IDatasetFields.html":{}}}],["indexing",{"_index":2249,"title":{},"body":{"controllers/JobsController.html":{}}}],["indicate",{"_index":450,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["indicating",{"_index":2587,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["indication",{"_index":3463,"title":{},"body":{"classes/PublishedData.html":{}}}],["indirect",{"_index":4769,"title":{},"body":{"license.html":{}}}],["infersubjects",{"_index":874,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Attachment.html":{},"modules/AttachmentsModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateInitialDatasetDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"modules/DatablocksModule.html":{},"injectables/DatablocksService.html":{},"classes/DatasetListDto.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"classes/HistoryClass.html":{},"injectables/HistoryInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IDatasetList.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/ISampleFields.html":{},"interfaces/IScientificFilter.html":{},"classes/InitialDataset.html":{},"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"injectables/InstrumentsService.html":{},"interfaces/JWTUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapAuthGuard.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Logbook.html":{},"controllers/LogbooksController.html":{},"modules/LogbooksModule.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"modules/PoliciesModule.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"classes/QueryableClass.html":{},"injectables/RegisteredInterceptor.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"classes/TechniqueClass.html":{},"injectables/UTCTimeInterceptor.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatablockDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateInstrumentDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateOrigDatablockDto.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdatePublishedDataDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUserIdentityDto.html":{},"classes/UpdateUserSettingsDto.html":{},"classes/UpdateWherePolicyDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"classes/UserIdentity.html":{},"interfaces/UserPayload.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["information",{"_index":952,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateProposalDto.html":{},"classes/LifecycleClass.html":{},"classes/MeasurementPeriodClass.html":{},"controllers/OrigDatablocksController.html":{},"classes/ProposalClass.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["ingest",{"_index":2627,"title":{},"body":{"classes/LifecycleClass.html":{},"classes/Policy.html":{}}}],["ingestor",{"_index":4492,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inherited",{"_index":51,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/Attachment.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{}}}],["initial",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateInitialDatasetDto.html":{},"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{}}}],["initialdataset",{"_index":1757,"title":{"classes/InitialDataset.html":{}},"body":{"injectables/DatasetsService.html":{},"classes/InitialDataset.html":{},"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{}}}],["initialdataset.name",{"_index":1970,"title":{},"body":{"modules/InitialDatasetsModule.html":{}}}],["initialdatasetdocument",{"_index":1961,"title":{},"body":{"classes/InitialDataset.html":{},"injectables/InitialDatasetsService.html":{},"miscellaneous/typealiases.html":{}}}],["initialdatasetmodel",{"_index":1975,"title":{},"body":{"injectables/InitialDatasetsService.html":{}}}],["initialdatasetschema",{"_index":1962,"title":{},"body":{"classes/InitialDataset.html":{},"modules/InitialDatasetsModule.html":{}}}],["initialdatasetsmodule",{"_index":198,"title":{"modules/InitialDatasetsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatasetsModule.html":{},"modules/InitialDatasetsModule.html":{},"modules.html":{},"overview.html":{}}}],["initialdatasetsservice",{"_index":1573,"title":{"injectables/InitialDatasetsService.html":{}},"body":{"injectables/DatasetsService.html":{},"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{},"overview.html":{}}}],["initiating",{"_index":2133,"title":{},"body":{"classes/Job.html":{}}}],["inject",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"modules/AuthModule.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/HistoryInterceptor.html":{},"modules/LogbooksModule.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{},"modules/UsersModule.html":{}}}],["inject(datasetsservice",{"_index":1894,"title":{},"body":{"injectables/HistoryInterceptor.html":{}}}],["inject(request",{"_index":528,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"injectables/AdminService.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"injectables/InitialDatasetsService.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapAuthGuard.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/RegisteredInterceptor.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"injectables/UserIdentitiesService.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"injectables/AdminService.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"injectables/InitialDatasetsService.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapAuthGuard.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"injectables/OrigDatablocksService.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/RegisteredInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"injectables/UserIdentitiesService.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"injectables/AdminService.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"injectables/InitialDatasetsService.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapAuthGuard.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/RegisteredInterceptor.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"injectables/UserIdentitiesService.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injecting",{"_index":4705,"title":{},"body":{"index.html":{}}}],["injectmodel",{"_index":516,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/InitialDatasetsService.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"injectables/UserIdentitiesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(attachment.name",{"_index":527,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["injectmodel(datablock.name",{"_index":1517,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["injectmodel(datasetclass.name",{"_index":1628,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["injectmodel(initialdataset.name",{"_index":1980,"title":{},"body":{"injectables/InitialDatasetsService.html":{}}}],["injectmodel(instrument.name",{"_index":2107,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["injectmodel(job.name",{"_index":2374,"title":{},"body":{"injectables/JobsService.html":{}}}],["injectmodel(origdatablock.name",{"_index":3082,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["injectmodel(policy.name",{"_index":3256,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["injectmodel(proposalclass.name",{"_index":3406,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["injectmodel(publisheddata.name",{"_index":3668,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["injectmodel(role.name",{"_index":3753,"title":{},"body":{"injectables/RolesService.html":{}}}],["injectmodel(sampleclass.name",{"_index":3837,"title":{},"body":{"injectables/SamplesService.html":{}}}],["injectmodel(user.name",{"_index":4318,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectmodel(useridentity.name",{"_index":4087,"title":{},"body":{"injectables/UserIdentitiesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(userrole.name",{"_index":3754,"title":{},"body":{"injectables/RolesService.html":{}}}],["injectmodel(usersettings.name",{"_index":4319,"title":{},"body":{"injectables/UsersService.html":{}}}],["innovation",{"_index":4723,"title":{},"body":{"index.html":{}}}],["input",{"_index":1349,"title":{},"body":{"classes/CreateSampleDto.html":{},"classes/Job.html":{},"controllers/OrigDatablocksController.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["inputdatasets",{"_index":3121,"title":{},"body":{"classes/PartialUpdateRawDatasetDto.html":{}}}],["insert",{"_index":1631,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["inside",{"_index":1249,"title":{},"body":{"classes/CreateProposalDto.html":{},"classes/ProposalClass.html":{},"injectables/UsersService.html":{}}}],["install",{"_index":4529,"title":{},"body":{"index.html":{}}}],["installation",{"_index":4577,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1838,"title":{},"body":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"classes/Instrument.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/UTCTimeInterceptor.html":{},"index.html":{}}}],["instance.'})@prop({type",{"_index":1996,"title":{},"body":{"classes/Instrument.html":{}}}],["instances",{"_index":2903,"title":{},"body":{"injectables/MultiUTCTimeInterceptor.html":{}}}],["instances)*(ctx.data",{"_index":1732,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["instead",{"_index":2475,"title":{},"body":{"injectables/JobsService.html":{},"classes/UpdateDatasetDto.html":{}}}],["instrument",{"_index":883,"title":{"classes/Instrument.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"injectables/InstrumentsService.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OwnableDto.html":{},"classes/ProposalClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["instrument.'})@prop({type",{"_index":1992,"title":{},"body":{"classes/Instrument.html":{}}}],["instrument.dto",{"_index":2045,"title":{},"body":{"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"classes/UpdateInstrumentDto.html":{}}}],["instrument.dto.ts",{"_index":1110,"title":{},"body":{"classes/CreateInstrumentDto.html":{},"classes/UpdateInstrumentDto.html":{}}}],["instrument.dto.ts:12",{"_index":1118,"title":{},"body":{"classes/CreateInstrumentDto.html":{}}}],["instrument.dto.ts:19",{"_index":1116,"title":{},"body":{"classes/CreateInstrumentDto.html":{}}}],["instrument.dto.ts:28",{"_index":1114,"title":{},"body":{"classes/CreateInstrumentDto.html":{}}}],["instrument.name",{"_index":2097,"title":{},"body":{"modules/InstrumentsModule.html":{}}}],["instrument/findone",{"_index":2074,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["instrument_create",{"_index":4486,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instrument_delete",{"_index":4488,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instrument_read",{"_index":4482,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instrument_update",{"_index":4484,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instrumentcreate",{"_index":4485,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instrumentdelete",{"_index":4487,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instrumentdocument",{"_index":1998,"title":{},"body":{"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"miscellaneous/typealiases.html":{}}}],["instrumentfilter",{"_index":2071,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["instrumentfilters",{"_index":2079,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["instrumentgroup",{"_index":367,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{}}}],["instrumentmodel",{"_index":2101,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["instrumentpromise",{"_index":2111,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["instrumentpromise.exec",{"_index":2113,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["instrumentread",{"_index":4481,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["instruments",{"_index":2007,"title":{},"body":{"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{}}}],["instruments.controller",{"_index":2096,"title":{},"body":{"modules/InstrumentsModule.html":{}}}],["instruments.service",{"_index":2044,"title":{},"body":{"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{}}}],["instruments/instruments.module",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["instruments\\n",{"_index":2077,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["instrumentschema",{"_index":2002,"title":{},"body":{"classes/Instrument.html":{},"modules/InstrumentsModule.html":{}}}],["instrumentschema.index",{"_index":2004,"title":{},"body":{"classes/Instrument.html":{}}}],["instrumentscontroller",{"_index":2005,"title":{"controllers/InstrumentsController.html":{}},"body":{"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{}}}],["instrumentsmodule",{"_index":199,"title":{"modules/InstrumentsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InstrumentsModule.html":{},"modules.html":{},"overview.html":{}}}],["instrumentsservice",{"_index":2043,"title":{"injectables/InstrumentsService.html":{}},"body":{"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"injectables/InstrumentsService.html":{},"overview.html":{}}}],["instrumentupdate",{"_index":4483,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["integer",{"_index":4672,"title":{},"body":{"index.html":{}}}],["intentional",{"_index":2231,"title":{},"body":{"controllers/JobsController.html":{}}}],["intercept",{"_index":1395,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/RegisteredInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["intercept(context",{"_index":1398,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/RegisteredInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["interceptors/create",{"_index":4190,"title":{},"body":{"controllers/UsersController.html":{}}}],["interceptors/registered.interceptor",{"_index":3527,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["interceptors/users",{"_index":2713,"title":{},"body":{"controllers/LogbooksController.html":{}}}],["interface",{"_index":1896,"title":{"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IDatasetList.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/ISampleFields.html":{},"interfaces/IScientificFilter.html":{},"interfaces/JWTUser.html":{},"interfaces/UserPayload.html":{}},"body":{"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IDatasetList.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/ISampleFields.html":{},"interfaces/IScientificFilter.html":{},"interfaces/JWTUser.html":{},"interfaces/UserPayload.html":{}}}],["interfaces",{"_index":1898,"title":{},"body":{"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IDatasetList.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/ISampleFields.html":{},"interfaces/IScientificFilter.html":{},"interfaces/JWTUser.html":{},"interfaces/UserPayload.html":{},"overview.html":{}}}],["interfaces/dataset",{"_index":1144,"title":{},"body":{"classes/CreateJobDto.html":{},"injectables/DatasetsService.html":{},"injectables/FullQueryInterceptor.html":{}}}],["interfaces/jwt",{"_index":2524,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces/origdatablocks.interface",{"_index":3006,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{}}}],["interfaces/policy",{"_index":3154,"title":{},"body":{"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{}}}],["interfaces/proposal",{"_index":3405,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["interfaces/published",{"_index":3524,"title":{},"body":{"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{}}}],["interfaces/sample",{"_index":3834,"title":{},"body":{"injectables/SamplesService.html":{}}}],["interfaces/userpayload.interface",{"_index":58,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"classes/AccessGroupService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["internalservererrorexception",{"_index":769,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/LogbooksService.html":{},"injectables/OidcStrategy.html":{},"injectables/PoliciesService.html":{}}}],["internalservererrorexception(\"fetching",{"_index":2781,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["internalservererrorexception(\"logbook",{"_index":2763,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["internet",{"_index":1164,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Job.html":{},"classes/MeasurementPeriodClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["interruption",{"_index":4780,"title":{},"body":{"license.html":{}}}],["invalid",{"_index":3283,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["invalue",{"_index":1802,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["invalue.filter",{"_index":1811,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["investigator",{"_index":1275,"title":{},"body":{"classes/CreateProposalDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/ProposalClass.html":{}}}],["investigator.'})@isoptional()@isemail",{"_index":1255,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["investigator.'})@isoptional()@isstring",{"_index":1257,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["investigator.'})@prop({type",{"_index":3367,"title":{},"body":{"classes/ProposalClass.html":{}}}],["invoked",{"_index":630,"title":{},"body":{"controllers/AuthController.html":{}}}],["iorigdatablockfields",{"_index":1942,"title":{"interfaces/IOrigDatablockFields.html":{}},"body":{"interfaces/IOrigDatablockFields.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{}}}],["ipolicyfilter",{"_index":1944,"title":{"interfaces/IPolicyFilter.html":{}},"body":{"interfaces/IPolicyFilter.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{}}}],["ipolicyhandler",{"_index":1948,"title":{"interfaces/IPolicyHandler.html":{}},"body":{"interfaces/IPolicyHandler.html":{},"miscellaneous/typealiases.html":{}}}],["iproposalacceptedmessage",{"_index":247,"title":{"interfaces/IProposalAcceptedMessage.html":{}},"body":{"modules/AppModule.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{}}}],["iproposalfieldobject",{"_index":1939,"title":{"interfaces/IProposalFieldObject.html":{}},"body":{"interfaces/IDateRange.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{}}}],["iproposalfields",{"_index":1941,"title":{"interfaces/IProposalFields.html":{}},"body":{"interfaces/IDateRange.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"injectables/ProposalsService.html":{}}}],["iproposalmember",{"_index":1905,"title":{"interfaces/IProposalMember.html":{}},"body":{"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{}}}],["ipublisheddatafilters",{"_index":1920,"title":{"interfaces/IPublishedDataFilters.html":{}},"body":{"interfaces/ICount.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{}}}],["iregister",{"_index":1922,"title":{"interfaces/IRegister.html":{}},"body":{"interfaces/ICount.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"controllers/PublishedDataController.html":{}}}],["isadmin",{"_index":4248,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["isamplefields",{"_index":1956,"title":{"interfaces/ISampleFields.html":{}},"body":{"interfaces/ISampleFields.html":{},"injectables/SamplesService.html":{}}}],["isarray",{"_index":1082,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/DatasetListDto.html":{},"controllers/OrigDatablocksController.html":{},"classes/ProposalClass.html":{},"controllers/PublishedDataController.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["isarray()@arraynotempty()@validatenested({each",{"_index":1062,"title":{},"body":{"classes/CreateDatablockDto.html":{}}}],["isarray()@isoptional",{"_index":1220,"title":{},"body":{"classes/CreatePolicyDto.html":{}}}],["isarray()@isoptional()@validatenested({each",{"_index":1131,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isarray()@isstring({each",{"_index":1529,"title":{},"body":{"classes/DatasetListDto.html":{}}}],["isboolean",{"_index":1230,"title":{},"body":{"classes/CreatePolicyDto.html":{},"classes/CreateSampleDto.html":{}}}],["isboolean()@isoptional",{"_index":1218,"title":{},"body":{"classes/CreatePolicyDto.html":{}}}],["iscientificfilter",{"_index":1902,"title":{"interfaces/IScientificFilter.html":{}},"body":{"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/ISampleFields.html":{},"interfaces/IScientificFilter.html":{}}}],["isdatestring",{"_index":1143,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/DataFileDto.html":{}}}],["isdatestring()@isoptional",{"_index":1135,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreatePublishedDataDto.html":{}}}],["isemail",{"_index":1133,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateProposalDto.html":{}}}],["isint",{"_index":1083,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{}}}],["isnan(+signandverifyoptions.expiresin",{"_index":4404,"title":{},"body":{"injectables/UsersService.html":{}}}],["isnotempty",{"_index":1084,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/DatasetListDto.html":{}}}],["isnumber",{"_index":1231,"title":{},"body":{"classes/CreatePolicyDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/DataFileDto.html":{}}}],["isnumber()@isoptional",{"_index":1223,"title":{},"body":{"classes/CreatePolicyDto.html":{},"classes/CreatePublishedDataDto.html":{}}}],["isobject",{"_index":1119,"title":{},"body":{"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateSampleDto.html":{},"classes/UpdateWherePolicyDto.html":{}}}],["isobject()@isoptional",{"_index":1137,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isobject()@isoptional()@type(undefined",{"_index":4023,"title":{},"body":{"classes/UpdateWherePolicyDto.html":{}}}],["isoncentraldisk",{"_index":2583,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["isoptional",{"_index":1018,"title":{},"body":{"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateSampleDto.html":{},"classes/DataFileDto.html":{},"classes/OwnableDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdateWherePolicyDto.html":{}}}],["isoptional()@exclude",{"_index":3874,"title":{},"body":{"classes/UpdateAttachmentDto.html":{},"classes/UpdateProposalDto.html":{}}}],["isoptional()@isstring",{"_index":1004,"title":{},"body":{"classes/CreateAttachmentDto.html":{}}}],["ispublished",{"_index":965,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/CreateSampleDto.html":{},"interfaces/IDatasetFields.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"classes/UpdateDatasetDto.html":{},"miscellaneous/enumerations.html":{}}}],["isstring",{"_index":1002,"title":{},"body":{"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/DataFileDto.html":{},"classes/DatasetListDto.html":{},"classes/OwnableDto.html":{},"classes/UpdateWherePolicyDto.html":{}}}],["isstring()@isnotempty",{"_index":1531,"title":{},"body":{"classes/DatasetListDto.html":{}}}],["isstring()@isoptional",{"_index":1140,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/UpdateWherePolicyDto.html":{}}}],["isstring({each",{"_index":1300,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["issuer",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["issuer.discover",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["isvalid",{"_index":2941,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["isvalid(createorigdatablock",{"_index":2982,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["isvalidemail",{"_index":4047,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["isvalidemail(headers",{"_index":4052,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["it's",{"_index":633,"title":{},"body":{"controllers/AuthController.html":{}}}],["item",{"_index":986,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/OwnableDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["item.'})@isoptional()@isstring({each",{"_index":1010,"title":{},"body":{"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/OwnableDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["item.'})@isstring",{"_index":1016,"title":{},"body":{"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/OwnableDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["item.constructor",{"_index":987,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["items",{"_index":1191,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{},"classes/Datablock.html":{},"classes/Logbook.html":{},"classes/OrigDatablock.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{}}}],["iterate",{"_index":2414,"title":{},"body":{"injectables/JobsService.html":{}}}],["jest",{"_index":4565,"title":{},"body":{"index.html":{}}}],["job",{"_index":885,"title":{"classes/Job.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/LifecycleClass.html":{},"classes/Policy.html":{}}}],["job.dto",{"_index":2211,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":1123,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts:16",{"_index":1134,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:19",{"_index":1142,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:23",{"_index":1136,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:27",{"_index":1138,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:31",{"_index":1141,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:37",{"_index":1132,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:41",{"_index":1139,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.name",{"_index":2328,"title":{},"body":{"modules/JobsModule.html":{}}}],["job.publishjob(ctx.instance",{"_index":2222,"title":{},"body":{"controllers/JobsController.html":{}}}],["jobcount",{"_index":1386,"title":{},"body":{"classes/CreateUserSettingsDto.html":{},"classes/UserSettings.html":{}}}],["jobdata",{"_index":2393,"title":{},"body":{"injectables/JobsService.html":{}}}],["jobdocument",{"_index":2155,"title":{},"body":{"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"miscellaneous/typealiases.html":{}}}],["jobfinishednotification",{"_index":2460,"title":{},"body":{"injectables/JobsService.html":{}}}],["jobid",{"_index":2407,"title":{},"body":{"injectables/JobsService.html":{}}}],["joblogdata",{"_index":3124,"title":{},"body":{"classes/PartialUpdateRawDatasetDto.html":{}}}],["jobmodel",{"_index":2338,"title":{},"body":{"injectables/JobsService.html":{}}}],["jobparameters",{"_index":3123,"title":{},"body":{"classes/PartialUpdateRawDatasetDto.html":{}}}],["jobparams",{"_index":1127,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["jobqueue",{"_index":2223,"title":{},"body":{"controllers/JobsController.html":{}}}],["jobresultobject",{"_index":1128,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{}}}],["jobs",{"_index":1737,"title":{},"body":{"injectables/DatasetsService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UserSettings.html":{}}}],["jobs.'})@prop({type",{"_index":2144,"title":{},"body":{"classes/Job.html":{}}}],["jobs.controller",{"_index":2325,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":2210,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":2162,"title":{},"body":{"classes/Job.html":{},"modules/JobsModule.html":{}}}],["jobschema.index",{"_index":2164,"title":{},"body":{"classes/Job.html":{}}}],["jobscontroller",{"_index":2165,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobsmodule",{"_index":200,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":2209,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"overview.html":{}}}],["jobstatusmessage",{"_index":1129,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["jobstatusmessage.indexof(\"finishedsuccessful",{"_index":2431,"title":{},"body":{"injectables/JobsService.html":{}}}],["jobsubmissionnotification",{"_index":2406,"title":{},"body":{"injectables/JobsService.html":{}}}],["jobsubmitted",{"_index":2289,"title":{},"body":{"controllers/JobsController.html":{}}}],["jobtocreate",{"_index":2288,"title":{},"body":{"controllers/JobsController.html":{}}}],["jobtype",{"_index":2154,"title":{},"body":{"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"miscellaneous/enumerations.html":{}}}],["jobtype.archive",{"_index":2157,"title":{},"body":{"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["jobtype.public",{"_index":2159,"title":{},"body":{"classes/Job.html":{},"controllers/JobsController.html":{}}}],["jobtype.retrieve",{"_index":2158,"title":{},"body":{"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["join",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["join(__dirname",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["journal",{"_index":3452,"title":{},"body":{"classes/PublishedData.html":{}}}],["js",{"_index":4699,"title":{},"body":{"index.html":{}}}],["json",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateSampleDto.html":{},"classes/Instrument.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{}}}],["json.parse",{"_index":1744,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/PublishedDataController.html":{}}}],["json.parse(context.getargs()[1].req.query.fields",{"_index":3685,"title":{},"body":{"injectables/RegisteredInterceptor.html":{}}}],["json.parse(data",{"_index":4327,"title":{},"body":{"injectables/UsersService.html":{}}}],["json.parse(fields",{"_index":3545,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["json.parse(filter",{"_index":2072,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{}}}],["json.parse(filter.fields",{"_index":3553,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["json.parse(filter.filter",{"_index":3552,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["json.parse(filters",{"_index":2789,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["json.parse(filters.facets",{"_index":2309,"title":{},"body":{"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{}}}],["json.parse(filters.fields",{"_index":2305,"title":{},"body":{"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{}}}],["json.parse(filters.limits",{"_index":2306,"title":{},"body":{"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{}}}],["json.parse(headers.filter",{"_index":3173,"title":{},"body":{"controllers/PoliciesController.html":{},"controllers/UserIdentitiesController.html":{}}}],["json.parse(headers.where",{"_index":3175,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["json.parse(json.stringify(datacopy",{"_index":1749,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["json.parse(json.stringify(dataset.accessgroups",{"_index":3018,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["json.parse(json.stringify(filters.limits",{"_index":1710,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["json.parse(json.stringify(founduser",{"_index":2570,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["json.parse(json.stringify(historyitem).replace(/\\$/g",{"_index":1783,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["json.parse(json.stringify(req.body",{"_index":1746,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["json.parse(json.stringify(user",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["json.parse(json.stringify(vieweduser",{"_index":4240,"title":{},"body":{"controllers/UsersController.html":{}}}],["json.parse(limits",{"_index":3543,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["json.parse(queryfilter.filter",{"_index":3171,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["json.parse(queryfilters",{"_index":4066,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["json.parse(req.query.fields",{"_index":1850,"title":{},"body":{"injectables/FullQueryInterceptor.html":{}}}],["json.parse(stringfields",{"_index":2849,"title":{},"body":{"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{}}}],["json.parse(stringfilter",{"_index":2841,"title":{},"body":{"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{}}}],["json.parse(where",{"_index":3192,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["json.stringify",{"_index":3687,"title":{},"body":{"injectables/RegisteredInterceptor.html":{}}}],["json.stringify(dataset.datasetlifecycle",{"_index":1753,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["json.stringify(fields",{"_index":3686,"title":{},"body":{"injectables/RegisteredInterceptor.html":{}}}],["json.stringify(jsonfields",{"_index":2850,"title":{},"body":{"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{}}}],["json.stringify(jsonfilter",{"_index":2844,"title":{},"body":{"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{}}}],["json.stringify(message",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["json.stringify(req.body.datasetlifecycle",{"_index":1752,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["json.stringify(result",{"_index":2238,"title":{},"body":{"controllers/JobsController.html":{}}}],["jsonfields",{"_index":2848,"title":{},"body":{"injectables/MainDatasetsPublicInterceptor.html":{},"controllers/PublishedDataController.html":{},"injectables/SubDatasetsPublicInterceptor.html":{}}}],["jsonfilter",{"_index":2840,"title":{},"body":{"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{}}}],["jsonfilter.where",{"_index":2843,"title":{},"body":{"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{}}}],["jsonfilter.where.ispublished",{"_index":2842,"title":{},"body":{"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{}}}],["jsonfilters",{"_index":3550,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["jsonfilters.limits",{"_index":3555,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["jsonfilters.where",{"_index":3554,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["jsonheadersfilters",{"_index":3172,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["jsonheaderswherefilters",{"_index":3174,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["jsonqueryfilters",{"_index":3170,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["jsonuser",{"_index":826,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["jsonwebtoken#readme",{"_index":1035,"title":{},"body":{"classes/CreateCustomJwt.html":{}}}],["jsonwebtoken#readme'})@isoptional()@type(undefined)@isstring",{"_index":1032,"title":{},"body":{"classes/CreateCustomJwt.html":{}}}],["jwt",{"_index":702,"title":{},"body":{"modules/AuthModule.html":{},"classes/CreateUserJWT.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.dto",{"_index":4188,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["jwt.dto.ts",{"_index":1023,"title":{},"body":{"classes/CreateCustomJwt.html":{},"classes/CreateUserJWT.html":{}}}],["jwt.dto.ts:15",{"_index":1033,"title":{},"body":{"classes/CreateCustomJwt.html":{}}}],["jwt.dto.ts:5",{"_index":1378,"title":{},"body":{"classes/CreateUserJWT.html":{}}}],["jwt_expires_in",{"_index":4612,"title":{},"body":{"index.html":{}}}],["jwt_secret",{"_index":4611,"title":{},"body":{"index.html":{}}}],["jwtauthguard",{"_index":223,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{}}}],["jwtauthguard(ref",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtfromrequest",{"_index":2525,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":674,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["jwtmodule.registerasync",{"_index":694,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["jwtproperties",{"_index":4152,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["jwtservice",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["jwtsignoptions",{"_index":1024,"title":{},"body":{"classes/CreateCustomJwt.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["jwtstrategy",{"_index":666,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["jwtstring",{"_index":4397,"title":{},"body":{"injectables/UsersService.html":{}}}],["jwtuser",{"_index":520,"title":{"interfaces/JWTUser.html":{}},"body":{"injectables/AttachmentsService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"interfaces/JWTUser.html":{},"injectables/JwtStrategy.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["jwtuser)._id",{"_index":3290,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["jwtuser).username",{"_index":530,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["jwtuser).username.replace(\"ldap",{"_index":1787,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["jwtuser)?.username",{"_index":3268,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["k",{"_index":1754,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/UsersService.html":{}}}],["keep",{"_index":442,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["keephistory",{"_index":1568,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["keephistory(req",{"_index":1604,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["kept",{"_index":2478,"title":{},"body":{"injectables/JobsService.html":{}}}],["key",{"_index":1704,"title":{},"body":{"injectables/DatasetsService.html":{},"interfaces/IDatasetFields.html":{},"classes/Job.html":{},"injectables/SamplesService.html":{}}}],["key.tolowercase().includes(filterkey",{"_index":1724,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["keyof",{"_index":1776,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{}}}],["keys",{"_index":1691,"title":{},"body":{"injectables/DatasetsService.html":{},"classes/Job.html":{},"index.html":{}}}],["keytoword",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["keywords",{"_index":969,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/IDatasetFields.html":{},"classes/UpdateDatasetDto.html":{}}}],["kind",{"_index":4716,"title":{},"body":{"index.html":{}}}],["knowledge",{"_index":3945,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["known/openid",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["kubernetes",{"_index":4583,"title":{},"body":{"index.html":{}}}],["landing",{"_index":3479,"title":{},"body":{"classes/PublishedData.html":{},"index.html":{}}}],["large",{"_index":1741,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["last",{"_index":454,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateProposalDto.html":{},"classes/Datablock.html":{},"classes/LifecycleClass.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{}}}],["lastname",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateProposalDto.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"classes/ProposalClass.html":{},"controllers/PublishedDataController.html":{}}}],["latest",{"_index":2646,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["ldap",{"_index":556,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LdapStrategy.html":{},"index.html":{}}}],["ldap.${payload.displayname",{"_index":2556,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["ldap_bind_credentials",{"_index":4618,"title":{},"body":{"index.html":{}}}],["ldap_bind_dn",{"_index":4616,"title":{},"body":{"index.html":{}}}],["ldap_search_base",{"_index":4619,"title":{},"body":{"index.html":{}}}],["ldap_search_filter",{"_index":4620,"title":{},"body":{"index.html":{}}}],["ldap_url",{"_index":4615,"title":{},"body":{"index.html":{}}}],["ldapauth",{"_index":2552,"title":{},"body":{"injectables/LdapStrategy.html":{},"dependencies.html":{}}}],["ldapauthguard",{"_index":609,"title":{"injectables/LdapAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LdapAuthGuard.html":{}}}],["ldaplogin",{"_index":543,"title":{},"body":{"controllers/AuthController.html":{}}}],["ldaplogin(req",{"_index":550,"title":{},"body":{"controllers/AuthController.html":{}}}],["ldapprofile",{"_index":2576,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["ldapstrategy",{"_index":667,"title":{"injectables/LdapStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LdapStrategy.html":{},"overview.html":{}}}],["legacy",{"_index":580,"title":{},"body":{"controllers/AuthController.html":{}}}],["legend",{"_index":169,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"modules/DatablocksModule.html":{},"modules/DatasetsModule.html":{},"modules/InitialDatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/JobsModule.html":{},"modules/LogbooksModule.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["less",{"_index":3468,"title":{},"body":{"classes/PublishedData.html":{}}}],["less_than",{"_index":4499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["level",{"_index":3341,"title":{},"body":{"classes/Policy.html":{},"classes/UpdateDatasetDto.html":{}}}],["lhs",{"_index":1855,"title":{},"body":{"injectables/FullQueryInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{}}}],["lhs}.unit",{"_index":1858,"title":{},"body":{"injectables/FullQueryInterceptor.html":{}}}],["lhs}.value",{"_index":1859,"title":{},"body":{"injectables/FullQueryInterceptor.html":{}}}],["liability",{"_index":4783,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4767,"title":{},"body":{"license.html":{}}}],["license",{"_index":3886,"title":{"license.html":{}},"body":{"classes/UpdateDatasetDto.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":4710,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":2160,"title":{},"body":{"classes/Job.html":{}}}],["lifecycle.'})@prop({type",{"_index":2149,"title":{},"body":{"classes/Job.html":{}}}],["lifecycleclass",{"_index":2577,"title":{"classes/LifecycleClass.html":{}},"body":{"classes/LifecycleClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["lifecycledocument",{"_index":2651,"title":{},"body":{"classes/LifecycleClass.html":{},"miscellaneous/typealiases.html":{}}}],["lifecycleschema",{"_index":2661,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["lifetime",{"_index":3919,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["limit",{"_index":1638,"title":{},"body":{"injectables/DatasetsService.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/IScientificFilter.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/LogbooksService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{},"index.html":{}}}],["limit(limit",{"_index":1644,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["limited",{"_index":4760,"title":{},"body":{"license.html":{}}}],["limits",{"_index":1911,"title":{},"body":{"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/IScientificFilter.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{}}}],["line",{"_index":1817,"title":{},"body":{"injectables/FilterPipe.html":{},"injectables/JwtAuthGuard.html":{},"controllers/OrigDatablocksController.html":{},"injectables/PoliciesService.html":{},"controllers/PublishedDataController.html":{}}}],["link",{"_index":3429,"title":{},"body":{"classes/PublishedData.html":{},"index.html":{}}}],["list",{"_index":126,"title":{},"body":{"injectables/AccessGroupFromStaticValuesService.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"controllers/InstrumentsController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableDto.html":{},"classes/PublishedData.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{},"license.html":{}}}],["list.dto",{"_index":1147,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["list.dto.ts",{"_index":1528,"title":{},"body":{"classes/DatasetListDto.html":{}}}],["list.dto.ts:10",{"_index":1530,"title":{},"body":{"classes/DatasetListDto.html":{}}}],["list.dto.ts:6",{"_index":1532,"title":{},"body":{"classes/DatasetListDto.html":{}}}],["list.interface",{"_index":1145,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["list.interface.ts",{"_index":1936,"title":{},"body":{"interfaces/IDatasetList.html":{}}}],["listall",{"_index":4462,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["listed",{"_index":403,"title":{},"body":{"classes/Attachment.html":{},"injectables/CaslAbilityFactory.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"index.html":{}}}],["listing",{"_index":4688,"title":{},"body":{"index.html":{}}}],["listown",{"_index":4461,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["literal",{"_index":1799,"title":{},"body":{"injectables/FilterPipe.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IFilters.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IPublishedDataFilters.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/LogbooksService.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{}}}],["lm",{"_index":1708,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["lm.limit",{"_index":1711,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["load",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":1168,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"injectables/LocalStrategy.html":{},"classes/MeasurementPeriodClass.html":{},"classes/UpdateDatasetDto.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{}}}],["localauthguard",{"_index":598,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"controllers/UsersController.html":{}}}],["localfield",{"_index":3094,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["locally",{"_index":4564,"title":{},"body":{"index.html":{}}}],["localstrategy",{"_index":668,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["located",{"_index":4683,"title":{},"body":{"index.html":{}}}],["location",{"_index":2615,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["lodash",{"_index":1845,"title":{},"body":{"injectables/FullQueryInterceptor.html":{},"dependencies.html":{}}}],["logbook",{"_index":887,"title":{"classes/Logbook.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"classes/Logbook.html":{},"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{},"injectables/UsersLogbooksInterceptor.html":{},"index.html":{}}}],["logbook)?.name",{"_index":4260,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["logbook.messages.length",{"_index":2773,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["logbook[]).filter",{"_index":4257,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["logbook_base_url",{"_index":4642,"title":{},"body":{"index.html":{}}}],["logbook_enabled",{"_index":4640,"title":{},"body":{"index.html":{}}}],["logbook_password",{"_index":4644,"title":{},"body":{"index.html":{}}}],["logbook_username",{"_index":4643,"title":{},"body":{"index.html":{}}}],["logbookdocument",{"_index":2695,"title":{},"body":{"classes/Logbook.html":{},"miscellaneous/typealiases.html":{}}}],["logbookenabled",{"_index":1785,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/LogbooksService.html":{}}}],["logbooks",{"_index":2703,"title":{},"body":{"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{}}}],["logbooks.controller",{"_index":2728,"title":{},"body":{"modules/LogbooksModule.html":{}}}],["logbooks.interceptor",{"_index":2714,"title":{},"body":{"controllers/LogbooksController.html":{}}}],["logbooks.interceptor.ts",{"_index":4242,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["logbooks.interceptor.ts:12",{"_index":4244,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["logbooks.interceptor.ts:15",{"_index":4245,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["logbooks.service",{"_index":2710,"title":{},"body":{"controllers/LogbooksController.html":{},"modules/LogbooksModule.html":{}}}],["logbooks/${name}/message",{"_index":2798,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["logbooks/${name}?filter=${filters",{"_index":2787,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["logbooks/logbooks.module",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["logbookschema",{"_index":2698,"title":{},"body":{"classes/Logbook.html":{}}}],["logbookschema.index",{"_index":2700,"title":{},"body":{"classes/Logbook.html":{}}}],["logbookscontroller",{"_index":2701,"title":{"controllers/LogbooksController.html":{}},"body":{"controllers/LogbooksController.html":{},"modules/LogbooksModule.html":{}}}],["logbooksmodule",{"_index":201,"title":{"modules/LogbooksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatasetsModule.html":{},"modules/LogbooksModule.html":{},"modules.html":{},"overview.html":{}}}],["logbooksservice",{"_index":1574,"title":{"injectables/LogbooksService.html":{}},"body":{"injectables/DatasetsService.html":{},"controllers/LogbooksController.html":{},"modules/LogbooksModule.html":{},"injectables/LogbooksService.html":{},"overview.html":{}}}],["logbooksservice.findall",{"_index":2766,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["logbooksservice.findbyname",{"_index":2784,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["logbooksservice.login",{"_index":2762,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["logbooksservice.sendmessage",{"_index":2797,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["logged",{"_index":576,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["logger",{"_index":55,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"modules/AppModule.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/DatasetsService.html":{},"injectables/JobsService.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/OidcStrategy.html":{},"injectables/PoliciesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["logger.error",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["logger.error(\"dataset",{"_index":2472,"title":{},"body":{"injectables/JobsService.html":{}}}],["logger.error(\"failed",{"_index":2830,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.error(\"validation",{"_index":3300,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["logger.error(error",{"_index":2832,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.error(message",{"_index":2473,"title":{},"body":{"injectables/JobsService.html":{}}}],["logger.log",{"_index":81,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"modules/AppModule.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/JobsService.html":{},"injectables/LogbooksService.html":{},"injectables/PoliciesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["logger.log(\"adding",{"_index":3305,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["logger.log(\"created",{"_index":817,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["logger.log(\"fetching",{"_index":2765,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["logger.log(\"found",{"_index":2780,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["logger.log(\"returning",{"_index":2474,"title":{},"body":{"injectables/JobsService.html":{}}}],["logger.log(\"sending",{"_index":2827,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.log(`creating",{"_index":3760,"title":{},"body":{"injectables/RolesService.html":{}}}],["logger.log(filters",{"_index":2785,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["logger.warn",{"_index":1764,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/PoliciesService.html":{}}}],["login",{"_index":544,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LogbooksService.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["login(req",{"_index":563,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["login(user",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(username",{"_index":2742,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["logincallback",{"_index":545,"title":{},"body":{"controllers/AuthController.html":{}}}],["logincallback(@res",{"_index":638,"title":{},"body":{"controllers/AuthController.html":{}}}],["logincallback(res",{"_index":566,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout",{"_index":546,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["logout(@req",{"_index":659,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["logout(req",{"_index":570,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["logouturl",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":572,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["long",{"_index":1740,"title":{},"body":{"injectables/DatasetsService.html":{},"index.html":{}}}],["longterm",{"_index":2632,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["look",{"_index":1880,"title":{},"body":{"classes/HistoryClass.html":{},"controllers/OrigDatablocksController.html":{}}}],["looking",{"_index":2471,"title":{},"body":{"injectables/JobsService.html":{}}}],["lookup",{"_index":3093,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["loopback",{"_index":1807,"title":{},"body":{"injectables/FilterPipe.html":{},"controllers/UserIdentitiesController.html":{},"index.html":{}}}],["loss",{"_index":3343,"title":{},"body":{"classes/Policy.html":{},"license.html":{}}}],["low",{"_index":1559,"title":{},"body":{"modules/DatasetsModule.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{}}}],["lowercase",{"_index":1476,"title":{},"body":{"classes/Datablock.html":{},"classes/OrigDatablock.html":{}}}],["luck",{"_index":1683,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["luxon",{"_index":4427,"title":{},"body":{"dependencies.html":{}}}],["made",{"_index":1339,"title":{},"body":{"classes/CreateSampleDto.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{}}}],["mail.service",{"_index":998,"title":{},"body":{"modules/CommonModule.html":{}}}],["mailermodule",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermodule.forrootasync",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["mailerservice",{"_index":2821,"title":{},"body":{"injectables/MailService.html":{}}}],["mailservice",{"_index":996,"title":{"injectables/MailService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"overview.html":{}}}],["mailservice.sendmail",{"_index":2831,"title":{},"body":{"injectables/MailService.html":{}}}],["mailtext",{"_index":2824,"title":{},"body":{"injectables/MailService.html":{}}}],["main",{"_index":1238,"title":{},"body":{"classes/CreateProposalDto.html":{},"classes/ProposalClass.html":{}}}],["maindatasetspublicinterceptor",{"_index":2833,"title":{"injectables/MainDatasetsPublicInterceptor.html":{}},"body":{"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{}}}],["maintained",{"_index":428,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["make",{"_index":1804,"title":{},"body":{"injectables/FilterPipe.html":{},"controllers/JobsController.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{}}}],["makes",{"_index":408,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["manage",{"_index":4458,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manager",{"_index":1214,"title":{},"body":{"classes/CreatePolicyDto.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{}}}],["manually",{"_index":448,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["many",{"_index":848,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["map",{"_index":1846,"title":{},"body":{"injectables/FullQueryInterceptor.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["map((data",{"_index":1848,"title":{},"body":{"injectables/FullQueryInterceptor.html":{}}}],["map((od",{"_index":3024,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["map((ownergroup",{"_index":3286,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["map((payload",{"_index":4254,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["map((r",{"_index":2682,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["map((role",{"_index":2534,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["map((v",{"_index":923,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["mapping",{"_index":3767,"title":{},"body":{"injectables/RolesService.html":{}}}],["mapscientificquery",{"_index":3832,"title":{},"body":{"injectables/SamplesService.html":{}}}],["mapscientificquery(fields[key",{"_index":3850,"title":{},"body":{"injectables/SamplesService.html":{}}}],["markdatasetsasscheduled",{"_index":2334,"title":{},"body":{"injectables/JobsService.html":{}}}],["markdatasetsasscheduled(ids",{"_index":2353,"title":{},"body":{"injectables/JobsService.html":{}}}],["match",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrigDatablocksService.html":{}}}],["matches",{"_index":2023,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["matching",{"_index":92,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Attachment.html":{},"modules/AttachmentsModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateInitialDatasetDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"modules/DatablocksModule.html":{},"injectables/DatablocksService.html":{},"classes/DatasetListDto.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"classes/HistoryClass.html":{},"injectables/HistoryInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IDatasetList.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/ISampleFields.html":{},"interfaces/IScientificFilter.html":{},"classes/InitialDataset.html":{},"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"injectables/InstrumentsService.html":{},"interfaces/JWTUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapAuthGuard.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Logbook.html":{},"controllers/LogbooksController.html":{},"modules/LogbooksModule.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"modules/PoliciesModule.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"classes/QueryableClass.html":{},"injectables/RegisteredInterceptor.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"classes/TechniqueClass.html":{},"injectables/UTCTimeInterceptor.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatablockDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateInstrumentDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateOrigDatablockDto.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdatePublishedDataDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUserIdentityDto.html":{},"classes/UpdateUserSettingsDto.html":{},"classes/UpdateWherePolicyDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"classes/UserIdentity.html":{},"interfaces/UserPayload.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["materials",{"_index":4749,"title":{},"body":{"license.html":{}}}],["mathjs",{"_index":4429,"title":{},"body":{"dependencies.html":{}}}],["max",{"_index":1914,"title":{},"body":{"interfaces/IAxiosError.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"index.html":{}}}],["maxiv",{"_index":4715,"title":{},"body":{"index.html":{}}}],["maxlimit",{"_index":1702,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["maxredirects",{"_index":2734,"title":{},"body":{"modules/LogbooksModule.html":{},"modules/PublishedDataModule.html":{}}}],["mb",{"_index":3470,"title":{},"body":{"classes/PublishedData.html":{}}}],["mean",{"_index":3346,"title":{},"body":{"classes/Policy.html":{}}}],["meaning",{"_index":3925,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["measure",{"_index":4000,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["measurement",{"_index":1150,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateProposalDto.html":{},"classes/MeasurementPeriodClass.html":{},"classes/ProposalClass.html":{}}}],["measurementperiodclass",{"_index":1247,"title":{"classes/MeasurementPeriodClass.html":{}},"body":{"classes/CreateProposalDto.html":{},"classes/MeasurementPeriodClass.html":{},"classes/ProposalClass.html":{}}}],["measurementperioddocument",{"_index":2860,"title":{},"body":{"classes/MeasurementPeriodClass.html":{},"miscellaneous/typealiases.html":{}}}],["measurementperiodlist",{"_index":1234,"title":{},"body":{"classes/CreateProposalDto.html":{},"classes/ProposalClass.html":{}}}],["measurementperiodschema",{"_index":2861,"title":{},"body":{"classes/MeasurementPeriodClass.html":{},"classes/ProposalClass.html":{}}}],["medium",{"_index":3344,"title":{},"body":{"classes/Policy.html":{}}}],["member",{"_index":4521,"title":{},"body":{"index.html":{}}}],["members",{"_index":402,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["merchantability",{"_index":4761,"title":{},"body":{"license.html":{}}}],["mergedfilters",{"_index":3146,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["mergedfilters.where",{"_index":3181,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["mergedfilters.where[\"$or",{"_index":3182,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["message",{"_index":245,"title":{"classes/Message.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/DatasetsService.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/LifecycleClass.html":{},"classes/Logbook.html":{},"injectables/LogbooksService.html":{},"classes/Message.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"dependencies.html":{},"index.html":{}}}],["message.schema",{"_index":2694,"title":{},"body":{"classes/Logbook.html":{}}}],["messagecontent",{"_index":2867,"title":{"classes/MessageContent.html":{}},"body":{"classes/Message.html":{},"classes/MessageContent.html":{}}}],["messagecontentdocument",{"_index":2887,"title":{},"body":{"classes/MessageContent.html":{},"miscellaneous/typealiases.html":{}}}],["messagecontentschema",{"_index":2868,"title":{},"body":{"classes/Message.html":{},"classes/MessageContent.html":{}}}],["messagedocument",{"_index":2877,"title":{},"body":{"classes/Message.html":{},"miscellaneous/typealiases.html":{}}}],["messages",{"_index":2686,"title":{},"body":{"classes/Logbook.html":{},"injectables/LogbooksService.html":{}}}],["messages.sort((a",{"_index":2806,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["messageschema",{"_index":2693,"title":{},"body":{"classes/Logbook.html":{},"classes/Message.html":{}}}],["met",{"_index":4742,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":1353,"title":{},"body":{"classes/CreateSampleDto.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"classes/Instrument.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"dependencies.html":{},"index.html":{}}}],["metadata.'})@isobject()@isoptional",{"_index":1346,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["metadata.'})@isoptional()@isobject",{"_index":3970,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["metadata.'})@prop({type",{"_index":1987,"title":{},"body":{"classes/Instrument.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["metadata_keys_return_limit",{"_index":4645,"title":{},"body":{"index.html":{}}}],["metadata_parent_instances_return_limit",{"_index":4647,"title":{},"body":{"index.html":{}}}],["metadatakey",{"_index":1716,"title":{},"body":{"injectables/DatasetsService.html":{},"interfaces/IDatasetFields.html":{},"interfaces/ISampleFields.html":{},"injectables/SamplesService.html":{},"miscellaneous/enumerations.html":{}}}],["metadatakey.length",{"_index":1720,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["metadatakey.tolowercase",{"_index":1723,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["metadatakeys",{"_index":1569,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["metadatakeys(filters",{"_index":1606,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["metadatakeys.slice(0",{"_index":1726,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["metadatakeysreturnlimit",{"_index":1719,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["metadataparentinstancesreturnlimit",{"_index":1707,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["method",{"_index":632,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PublishedDataController.html":{}}}],["methods",{"_index":21,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"controllers/AdminController.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"interfaces/IPolicyHandler.html":{},"injectables/InitialDatasetsService.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/RegisteredInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{}}}],["metrics",{"_index":3913,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["migrate",{"_index":583,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserIdentitiesController.html":{},"dependencies.html":{},"index.html":{}}}],["migrate:db:downfor",{"_index":4687,"title":{},"body":{"index.html":{}}}],["migrate:db:status",{"_index":4690,"title":{},"body":{"index.html":{}}}],["migrate:db:upfor",{"_index":4685,"title":{},"body":{"index.html":{}}}],["migrating",{"_index":4679,"title":{},"body":{"index.html":{}}}],["migration",{"_index":1879,"title":{},"body":{"classes/HistoryClass.html":{},"index.html":{}}}],["migrations",{"_index":4684,"title":{},"body":{"index.html":{}}}],["mime",{"_index":392,"title":{},"body":{"classes/Attachment.html":{}}}],["min",{"_index":1913,"title":{},"body":{"interfaces/IAxiosError.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{}}}],["minimize",{"_index":1999,"title":{},"body":{"classes/Instrument.html":{},"classes/Policy.html":{}}}],["miscellaneous",{"_index":4446,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["missing",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"classes/UpdateDatasetDto.html":{}}}],["mocha",{"_index":4566,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1929,"title":{},"body":{"interfaces/IDatasetFields.html":{}}}],["model",{"_index":444,"title":{},"body":{"classes/Attachment.html":{},"injectables/AttachmentsService.html":{},"classes/Datablock.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/InitialDatasetsService.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"classes/QueryableClass.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"injectables/SamplesService.html":{},"injectables/UserIdentitiesService.html":{},"injectables/UsersService.html":{}}}],["models.'})@isenum(datasettype",{"_index":3997,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["modification",{"_index":4740,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1681,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/InstrumentsController.html":{},"controllers/OrigDatablocksController.html":{},"classes/Role.html":{},"classes/UserIdentity.html":{}}}],["modifiers",{"_index":1649,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{},"injectables/SamplesService.html":{}}}],["modifiers).exec",{"_index":2384,"title":{},"body":{"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{},"injectables/SamplesService.html":{}}}],["modifiers.limit",{"_index":3842,"title":{},"body":{"injectables/SamplesService.html":{}}}],["modifiers.skip",{"_index":3843,"title":{},"body":{"injectables/SamplesService.html":{}}}],["modifiers.sort",{"_index":3844,"title":{},"body":{"injectables/SamplesService.html":{}}}],["modify",{"_index":3336,"title":{},"body":{"classes/Policy.html":{}}}],["module",{"_index":165,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"modules/DatablocksModule.html":{},"modules/DatasetsModule.html":{},"modules/InitialDatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/JobsModule.html":{},"modules/LogbooksModule.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"modules/DatablocksModule.html":{},"modules/DatasetsModule.html":{},"modules/InitialDatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/JobsModule.html":{},"modules/LogbooksModule.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":167,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"modules/DatablocksModule.html":{},"modules/DatasetsModule.html":{},"modules/InitialDatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/JobsModule.html":{},"modules/LogbooksModule.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["mongo",{"_index":1809,"title":{},"body":{"injectables/FilterPipe.html":{},"controllers/OrigDatablocksController.html":{},"injectables/PoliciesService.html":{},"dependencies.html":{},"index.html":{}}}],["mongodb",{"_index":1688,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/OrigDatablocksController.html":{},"index.html":{}}}],["mongodb_uri",{"_index":4649,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":435,"title":{},"body":{"classes/Attachment.html":{},"injectables/AttachmentsService.html":{},"classes/BuildOpenIdClient.html":{},"classes/Datablock.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/IScientificFilter.html":{},"classes/InitialDataset.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"injectables/InstrumentsService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"classes/Logbook.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"classes/QueryableClass.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"injectables/SamplesService.html":{},"classes/TechniqueClass.html":{},"classes/User.html":{},"injectables/UserIdentitiesService.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose'})@prop({type",{"_index":3698,"title":{},"body":{"classes/Role.html":{}}}],["mongoose.'})@prop({type",{"_index":429,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["mongoose.document",{"_index":4040,"title":{},"body":{"classes/User.html":{},"classes/UserRole.html":{}}}],["mongoose.schema.types.objectid",{"_index":4098,"title":{},"body":{"classes/UserIdentity.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{}}}],["mongoosemodule",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"modules/DatablocksModule.html":{},"modules/DatasetsModule.html":{},"modules/InitialDatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/JobsModule.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":1502,"title":{},"body":{"modules/DatablocksModule.html":{},"modules/InitialDatasetsModule.html":{},"modules/JobsModule.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeatureasync",{"_index":480,"title":{},"body":{"modules/AttachmentsModule.html":{},"modules/DatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"injectables/DatasetsService.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"classes/PublishedData.html":{},"index.html":{}}}],["mount",{"_index":4554,"title":{},"body":{"index.html":{}}}],["move",{"_index":2457,"title":{},"body":{"injectables/JobsService.html":{}}}],["ms",{"_index":1029,"title":{},"body":{"classes/CreateCustomJwt.html":{},"index.html":{}}}],["msadlogin",{"_index":547,"title":{},"body":{"controllers/AuthController.html":{}}}],["msadlogin(req",{"_index":579,"title":{},"body":{"controllers/AuthController.html":{}}}],["msgtype",{"_index":2882,"title":{},"body":{"classes/MessageContent.html":{}}}],["much",{"_index":1739,"title":{},"body":{"injectables/DatasetsService.html":{},"classes/UpdateDatasetDto.html":{}}}],["multiple",{"_index":94,"title":{},"body":{"injectables/AccessGroupFromMultipleProvidersService.html":{},"index.html":{}}}],["multiutctimeinterceptor",{"_index":2890,"title":{"injectables/MultiUTCTimeInterceptor.html":{}},"body":{"injectables/MultiUTCTimeInterceptor.html":{}}}],["n",{"_index":3266,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["name",{"_index":39,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"modules/AttachmentsModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"modules/DatablocksModule.html":{},"injectables/DatablocksService.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"interfaces/IPolicyHandler.html":{},"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logbook.html":{},"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableDto.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"modules/PoliciesModule.html":{},"injectables/PoliciesService.html":{},"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"injectables/RegisteredInterceptor.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"classes/TechniqueClass.html":{},"injectables/UTCTimeInterceptor.html":{},"classes/UpdateDatasetDto.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["name.length",{"_index":2537,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["named",{"_index":846,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{},"index.html":{}}}],["names",{"_index":2125,"title":{},"body":{"classes/Job.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"license.html":{}}}],["names.slice(1).join",{"_index":3649,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["names[0",{"_index":3648,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["necessary",{"_index":4579,"title":{},"body":{"index.html":{}}}],["need",{"_index":441,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"controllers/JobsController.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"index.html":{}}}],["needed",{"_index":2572,"title":{},"body":{"injectables/LdapStrategy.html":{},"controllers/PublishedDataController.html":{},"index.html":{}}}],["needs",{"_index":2622,"title":{},"body":{"classes/LifecycleClass.html":{},"controllers/OrigDatablocksController.html":{}}}],["negligence",{"_index":4787,"title":{},"body":{"license.html":{}}}],["nest",{"_index":4698,"title":{},"body":{"index.html":{}}}],["nested",{"_index":4703,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":1403,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/RegisteredInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["nestjs",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/axios",{"_index":59,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"modules/LogbooksModule.html":{},"injectables/LogbooksService.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":56,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"modules/DatablocksModule.html":{},"injectables/DatablocksService.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapAuthGuard.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/LogbooksController.html":{},"modules/LogbooksModule.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"modules/PoliciesModule.html":{},"injectables/PoliciesService.html":{},"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"injectables/RegisteredInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":115,"title":{},"body":{"injectables/AccessGroupFromPayloadService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"modules/LogbooksModule.html":{},"injectables/LogbooksService.html":{},"injectables/OidcStrategy.html":{},"modules/PoliciesModule.html":{},"injectables/PoliciesService.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/OrigDatablocksService.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"guards/RolesGuard.html":{},"injectables/SamplesService.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":675,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateCustomJwt.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"classes/Attachment.html":{},"modules/AttachmentsModule.html":{},"injectables/AttachmentsService.html":{},"classes/DataFile.html":{},"classes/Datablock.html":{},"modules/DatablocksModule.html":{},"injectables/DatablocksService.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{},"classes/InitialDataset.html":{},"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"modules/InstrumentsModule.html":{},"injectables/InstrumentsService.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/LifecycleClass.html":{},"classes/Logbook.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"classes/OrigDatablock.html":{},"modules/OrigDatablocksModule.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"modules/PoliciesModule.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"classes/QueryableClass.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"classes/TechniqueClass.html":{},"classes/User.html":{},"injectables/UserIdentitiesService.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":671,"title":{},"body":{"modules/AuthModule.html":{},"classes/BuildOpenIdClient.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapAuthGuard.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":4416,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":152,"title":{},"body":{"controllers/AdminController.html":{},"classes/Attachment.html":{},"controllers/AuthController.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"classes/LifecycleClass.html":{},"classes/Logbook.html":{},"controllers/LogbooksController.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"controllers/PoliciesController.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"classes/QueryableClass.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/TechniqueClass.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatablockDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateInstrumentDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateOrigDatablockDto.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdatePublishedDataDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUserIdentityDto.html":{},"classes/UpdateUserSettingsDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["never",{"_index":4155,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["new",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{},"injectables/InitialDatasetsService.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalStrategy.html":{},"injectables/LogbooksService.html":{},"injectables/OidcStrategy.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["newuser",{"_index":814,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["newuser._id",{"_index":822,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["newuser.username",{"_index":818,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["next",{"_index":483,"title":{},"body":{"modules/AttachmentsModule.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"modules/DatasetsModule.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"modules/InstrumentsModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"controllers/OrigDatablocksController.html":{},"injectables/PoliciesService.html":{},"modules/ProposalsModule.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/RegisteredInterceptor.html":{},"modules/SamplesModule.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"injectables/UsersLogbooksInterceptor.html":{},"index.html":{},"properties.html":{}}}],["next.git",{"_index":4527,"title":{},"body":{"index.html":{}}}],["next.handle",{"_index":1841,"title":{},"body":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/RegisteredInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{}}}],["next.handle().pipe",{"_index":1408,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["next/scripts/replaceobjectids.sh",{"_index":3265,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["nin",{"_index":1814,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["node",{"_index":57,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"dependencies.html":{}}}],["nodemailer",{"_index":4433,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":944,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/Instrument.html":{}}}],["nonemptylogbooks",{"_index":2771,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["nonemptylogbooks.concat(emptylogbooks",{"_index":2779,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["nonexistfiles",{"_index":2266,"title":{},"body":{"controllers/JobsController.html":{}}}],["nonexistfiles.length",{"_index":2272,"title":{},"body":{"controllers/JobsController.html":{}}}],["note",{"_index":432,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"controllers/PoliciesController.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception",{"_index":1612,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/JobsService.html":{},"injectables/PoliciesService.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{}}}],["notfoundexception(`dataset",{"_index":1678,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["notice",{"_index":4746,"title":{},"body":{"license.html":{}}}],["notification",{"_index":2412,"title":{},"body":{"injectables/JobsService.html":{},"classes/Policy.html":{}}}],["notified",{"_index":3322,"title":{},"body":{"classes/Policy.html":{}}}],["notify",{"_index":2484,"title":{},"body":{"injectables/JobsService.html":{}}}],["now",{"_index":2454,"title":{},"body":{"injectables/JobsService.html":{},"classes/LifecycleClass.html":{},"controllers/UserIdentitiesController.html":{}}}],["now.getday",{"_index":2657,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["now.getfullyear",{"_index":2654,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["now.getmonth",{"_index":2656,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["npm",{"_index":4528,"title":{},"body":{"index.html":{}}}],["null",{"_index":161,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatasetsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/SamplesService.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{}}}],["number",{"_index":1028,"title":{},"body":{"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateUserSettingsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"injectables/FullQueryInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/IScientificFilter.html":{},"classes/Message.html":{},"classes/OrigDatablock.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"classes/UpdateDatasetDto.html":{},"classes/UserSettings.html":{},"index.html":{}}}],["number(process.env.policy_publication_shift",{"_index":2659,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["number(process.env.policy_retention_shift",{"_index":2655,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["numberoffiles",{"_index":1288,"title":{},"body":{"classes/CreatePublishedDataDto.html":{},"controllers/OrigDatablocksController.html":{},"classes/PublishedData.html":{},"classes/UpdateDatasetDto.html":{}}}],["numberoffilesarchived",{"_index":3887,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["numeric",{"_index":4704,"title":{},"body":{"index.html":{}}}],["oai",{"_index":4651,"title":{},"body":{"index.html":{}}}],["oai_provider_route",{"_index":4650,"title":{},"body":{"index.html":{}}}],["oaiprovider",{"_index":3628,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["oaiproviderroute",{"_index":3629,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["oaiserveruri",{"_index":3593,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["object",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateSampleDto.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"classes/LifecycleClass.html":{},"controllers/OrigDatablocksController.html":{},"classes/PublishedData.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{},"classes/UserSettings.html":{},"index.html":{}}}],["object.entries(roles",{"_index":4358,"title":{},"body":{"injectables/UsersService.html":{}}}],["object.keys(b).foreach((k",{"_index":4353,"title":{},"body":{"injectables/UsersService.html":{}}}],["object.keys(fields).foreach((key",{"_index":3845,"title":{},"body":{"injectables/SamplesService.html":{}}}],["object.keys(updatedfields).foreach((updatedfield",{"_index":1774,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["object.keys(updatedfields).map(async",{"_index":1792,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["objectid",{"_index":3260,"title":{},"body":{"injectables/PoliciesService.html":{},"injectables/UsersService.html":{}}}],["objects",{"_index":2124,"title":{},"body":{"classes/Job.html":{},"index.html":{}}}],["observable",{"_index":1404,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/RegisteredInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["obtain",{"_index":4624,"title":{},"body":{"index.html":{}}}],["obtained",{"_index":4594,"title":{},"body":{"index.html":{}}}],["occurred",{"_index":3622,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["od.datafilelist.length",{"_index":3028,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["od.size",{"_index":3025,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["office",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["official",{"_index":4512,"title":{},"body":{"index.html":{}}}],["officially",{"_index":4513,"title":{},"body":{"index.html":{}}}],["oidc",{"_index":631,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{},"index.html":{}}}],["oidc.${userprofile.username",{"_index":811,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["oidc_access_groups",{"_index":4637,"title":{},"body":{"index.html":{}}}],["oidc_callback_url",{"_index":4627,"title":{},"body":{"index.html":{}}}],["oidc_client_id",{"_index":4623,"title":{},"body":{"index.html":{}}}],["oidc_client_secret",{"_index":4625,"title":{},"body":{"index.html":{}}}],["oidc_issuer",{"_index":4621,"title":{},"body":{"index.html":{}}}],["oidc_scope",{"_index":4633,"title":{},"body":{"index.html":{}}}],["oidc_success_url",{"_index":4635,"title":{},"body":{"index.html":{}}}],["oidcauthguard",{"_index":613,"title":{"injectables/OidcAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/OidcAuthGuard.html":{}}}],["oidcconfig",{"_index":615,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["oidcconfig?.accessgroupproperty",{"_index":807,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["oidcconfig?.callbackurl",{"_index":794,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["oidcconfig?.clientid",{"_index":786,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["oidcconfig?.clientsecret",{"_index":788,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["oidcconfig?.issuer}/.well",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["oidcconfig?.scope",{"_index":795,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["oidclogin",{"_index":548,"title":{},"body":{"controllers/AuthController.html":{}}}],["oidcprofile",{"_index":837,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["oidcstrategy",{"_index":681,"title":{"injectables/OidcStrategy.html":{}},"body":{"modules/AuthModule.html":{},"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["oidcstrategyfactory",{"_index":687,"title":{},"body":{"modules/AuthModule.html":{}}}],["oidcsub",{"_index":67,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["old",{"_index":850,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{},"injectables/PoliciesService.html":{},"index.html":{}}}],["olddata",{"_index":2318,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["olddata.id",{"_index":2420,"title":{},"body":{"injectables/JobsService.html":{}}}],["olddata.jobstatusmessage",{"_index":2425,"title":{},"body":{"injectables/JobsService.html":{}}}],["omit",{"_index":622,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DatasetsService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["omittype",{"_index":1094,"title":{},"body":{"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{}}}],["omittype(createdatablockdto",{"_index":1097,"title":{},"body":{"classes/CreateDatasetDatablockDto.html":{}}}],["on.'})@isoptional()@isstring",{"_index":1013,"title":{},"body":{"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/OwnableDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["onapplicationbootstrap",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["one",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"classes/Attachment.html":{},"controllers/AuthController.html":{},"classes/CreateRelationshipDto.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{},"controllers/JobsController.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/RelationshipClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"index.html":{}}}],["one.'})@isstring",{"_index":1328,"title":{},"body":{"classes/CreateRelationshipDto.html":{}}}],["one.'})@prop({type",{"_index":3691,"title":{},"body":{"classes/RelationshipClass.html":{}}}],["ones",{"_index":2022,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["onevent",{"_index":2367,"title":{},"body":{"injectables/JobsService.html":{}}}],["onevent(\"jobcreated",{"_index":2388,"title":{},"body":{"injectables/JobsService.html":{}}}],["onevent(\"jobupdated",{"_index":2413,"title":{},"body":{"injectables/JobsService.html":{}}}],["onevent('jobcreated",{"_index":2362,"title":{},"body":{"injectables/JobsService.html":{}}}],["onevent('jobupdated",{"_index":2359,"title":{},"body":{"injectables/JobsService.html":{}}}],["onmoduleinit",{"_index":3236,"title":{},"body":{"injectables/PoliciesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["ontologies",{"_index":3944,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["openapi",{"_index":4706,"title":{},"body":{"index.html":{}}}],["openid",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["operators",{"_index":1808,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["option",{"_index":2633,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["optional",{"_index":41,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"classes/Attachment.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/Datablock.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/IProposalFields.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/ISampleFields.html":{},"injectables/InitialDatasetsService.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"interfaces/JWTUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalStrategy.html":{},"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"classes/MessageContent.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/RegisteredInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"interfaces/UserPayload.html":{},"classes/UserProfile.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["optionally",{"_index":3988,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["options",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IDateRange.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"index.html":{}}}],["orcid",{"_index":3954,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["orcidofowner",{"_index":3888,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["orcids",{"_index":3956,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["order",{"_index":1908,"title":{},"body":{"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/IScientificFilter.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{},"index.html":{}}}],["order\":\"ownergroup:desc\",\"skip\":0,\"limit\":25",{"_index":3137,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["organization",{"_index":4661,"title":{},"body":{"index.html":{}}}],["orig",{"_index":1066,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{}}}],["orig)datablock",{"_index":1452,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{}}}],["orig)datablock.'})@isstring()@isoptional",{"_index":1458,"title":{},"body":{"classes/DataFileDto.html":{}}}],["orig)datablock.'})@prop({type",{"_index":1429,"title":{},"body":{"classes/DataFile.html":{}}}],["origdatablock",{"_index":889,"title":{"classes/OrigDatablock.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{},"injectables/OrigDatablocksService.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{}}}],["origdatablock.dto",{"_index":1102,"title":{},"body":{"classes/CreateDatasetOrigDatablockDto.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"classes/UpdateOrigDatablockDto.html":{}}}],["origdatablock.dto.ts",{"_index":1187,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{},"classes/UpdateOrigDatablockDto.html":{}}}],["origdatablock.dto.ts:24",{"_index":1195,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{}}}],["origdatablock.dto.ts:32",{"_index":1201,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{}}}],["origdatablock.dto.ts:43",{"_index":1189,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{}}}],["origdatablock.dto.ts:55",{"_index":1194,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{}}}],["origdatablock.name",{"_index":3065,"title":{},"body":{"modules/OrigDatablocksModule.html":{}}}],["origdatablock.ts",{"_index":1100,"title":{},"body":{"classes/CreateDatasetOrigDatablockDto.html":{}}}],["origdatablockdocument",{"_index":2933,"title":{},"body":{"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"miscellaneous/typealiases.html":{}}}],["origdatablockmodel",{"_index":3070,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["origdatablockpromise",{"_index":3087,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["origdatablockpromise.exec",{"_index":3088,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["origdatablocks",{"_index":2251,"title":{},"body":{"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["origdatablocks.controller",{"_index":3064,"title":{},"body":{"modules/OrigDatablocksModule.html":{}}}],["origdatablocks.service",{"_index":3003,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{}}}],["origdatablocks/:id",{"_index":3052,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["origdatablocks/fullfacet",{"_index":3046,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["origdatablocks/fullfacet/files",{"_index":3048,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["origdatablocks/fullquery",{"_index":3041,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["origdatablocks/fullquery/files",{"_index":3043,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["origdatablocks/origdatablocks.module",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["origdatablocks\\n",{"_index":3039,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["origdatablockschema",{"_index":2934,"title":{},"body":{"classes/OrigDatablock.html":{},"modules/OrigDatablocksModule.html":{}}}],["origdatablockschema.index",{"_index":2936,"title":{},"body":{"classes/OrigDatablock.html":{}}}],["origdatablockscontroller",{"_index":2937,"title":{"controllers/OrigDatablocksController.html":{}},"body":{"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{}}}],["origdatablocksmodule",{"_index":202,"title":{"modules/OrigDatablocksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatasetsModule.html":{},"modules/JobsModule.html":{},"modules/OrigDatablocksModule.html":{},"modules.html":{},"overview.html":{}}}],["origdatablocksservice",{"_index":2215,"title":{"injectables/OrigDatablocksService.html":{}},"body":{"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{},"injectables/OrigDatablocksService.html":{},"overview.html":{}}}],["origdatablock})@apiresponse({status",{"_index":2987,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["origdataset",{"_index":2951,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["origin_server_ts",{"_index":2865,"title":{},"body":{"classes/Message.html":{}}}],["original",{"_index":2958,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["originaldatablocks",{"_index":2973,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["origindatablock",{"_index":2250,"title":{},"body":{"controllers/JobsController.html":{}}}],["origindatablocks",{"_index":2263,"title":{},"body":{"controllers/JobsController.html":{}}}],["os",{"_index":4572,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":4788,"title":{},"body":{"license.html":{}}}],["out",{"_index":178,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"modules/DatablocksModule.html":{},"modules/DatasetsModule.html":{},"modules/InitialDatasetsModule.html":{},"modules/InstrumentsModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"modules/LogbooksModule.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["out'})@httpcode(200)@post('logout",{"_index":577,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["outvalue",{"_index":1810,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["outvalue.filter",{"_index":1824,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["overview",{"_index":4537,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["overwriting",{"_index":1687,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["ownable",{"_index":2186,"title":{},"body":{"controllers/JobsController.html":{}}}],["ownableclass",{"_index":359,"title":{"classes/OwnableClass.html":{}},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["ownableclass:15",{"_index":422,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["ownableclass:26",{"_index":411,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["ownableclass:38",{"_index":414,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["ownabledto",{"_index":1001,"title":{"classes/OwnableDto.html":{}},"body":{"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/OwnableDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["ownabledto:11",{"_index":1017,"title":{},"body":{"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["ownabledto:22",{"_index":1011,"title":{},"body":{"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["ownabledto:31",{"_index":1014,"title":{},"body":{"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["ownabledto:66",{"_index":1199,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{}}}],["owner",{"_index":1197,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{},"classes/CreateSampleDto.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{}}}],["owneremail",{"_index":3241,"title":{},"body":{"injectables/PoliciesService.html":{},"classes/UpdateDatasetDto.html":{}}}],["owneremail.split",{"_index":3309,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["ownergroup",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"classes/Attachment.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/Datablock.html":{},"modules/DatasetsModule.html":{},"interfaces/IDatasetFields.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["ownergroup.trim().replace(new",{"_index":3287,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["ownergrouplist",{"_index":3253,"title":{},"body":{"injectables/PoliciesService.html":{},"classes/UpdateWherePolicyDto.html":{}}}],["ownergroups",{"_index":3285,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["ownergroups.map(async",{"_index":3293,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["owning",{"_index":1015,"title":{},"body":{"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/OwnableDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["owns",{"_index":416,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["p12151",{"_index":3110,"title":{},"body":{"classes/OwnableClass.html":{}}}],["p12151'})@prop({type",{"_index":421,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["package",{"_index":3964,"title":{"dependencies.html":{},"properties.html":{}},"body":{"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["packed",{"_index":1078,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/Datablock.html":{}}}],["packedsize",{"_index":1042,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/Datablock.html":{},"interfaces/IDatablockFields.html":{},"classes/UpdateDatasetDto.html":{}}}],["page",{"_index":3436,"title":{},"body":{"classes/PublishedData.html":{},"classes/UserSettings.html":{},"index.html":{}}}],["page'})@prop({type",{"_index":4124,"title":{},"body":{"classes/UserSettings.html":{}}}],["pairs",{"_index":2141,"title":{},"body":{"classes/Job.html":{}}}],["param",{"_index":2039,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{}}}],["param(\"id",{"_index":2087,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{}}}],["param(\"name",{"_index":2720,"title":{},"body":{"controllers/LogbooksController.html":{}}}],["parameter",{"_index":3284,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"interfaces/IPolicyHandler.html":{},"injectables/InitialDatasetsService.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/RegisteredInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["parameters'})@prop({type",{"_index":3337,"title":{},"body":{"classes/Policy.html":{}}}],["params",{"_index":792,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["parseboolean",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{}}}],["parseboolean(oidcconfig?.autologout",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{}}}],["parsedfilter",{"_index":2301,"title":{},"body":{"controllers/JobsController.html":{},"controllers/UserIdentitiesController.html":{}}}],["parsedfilter.where",{"_index":4068,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["parsedfilters",{"_index":2304,"title":{},"body":{"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{}}}],["parsedqueryfilters",{"_index":4065,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["parsedqueryfilters.where",{"_index":4069,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["parsedwhere",{"_index":3191,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["parseint(port",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["parseint(signandverifyoptions.expiresin",{"_index":4405,"title":{},"body":{"injectables/UsersService.html":{}}}],["parselimitfilters",{"_index":1618,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["parselimitfilters(filter.limits",{"_index":1641,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["parselimitfiltersforpipeline",{"_index":3081,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["parselimitfiltersforpipeline(filter.limits",{"_index":3091,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["parseuserinfo",{"_index":2919,"title":{},"body":{"injectables/OidcStrategy.html":{}}}],["parseuserinfo(userinfo",{"_index":836,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["partial",{"_index":2341,"title":{},"body":{"injectables/JobsService.html":{}}}],["partialtype",{"_index":3115,"title":{},"body":{"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatablockDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateInstrumentDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateOrigDatablockDto.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdatePublishedDataDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUserIdentityDto.html":{},"classes/UpdateUserSettingsDto.html":{}}}],["partialtype(createattachmentdto",{"_index":3879,"title":{},"body":{"classes/UpdateAttachmentDto.html":{}}}],["partialtype(createdatablockdto",{"_index":3881,"title":{},"body":{"classes/UpdateDatablockDto.html":{}}}],["partialtype(createdatasetdto",{"_index":3116,"title":{},"body":{"classes/PartialUpdateDatasetDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["partialtype(createinstrumentdto",{"_index":4006,"title":{},"body":{"classes/UpdateInstrumentDto.html":{}}}],["partialtype(createjobdto",{"_index":4008,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createpolicydto",{"_index":4011,"title":{},"body":{"classes/UpdatePolicyDto.html":{}}}],["partialtype(createproposaldto",{"_index":4014,"title":{},"body":{"classes/UpdateProposalDto.html":{}}}],["partialtype(createsampledto",{"_index":4017,"title":{},"body":{"classes/UpdateSampleDto.html":{}}}],["partialtype(createuseridentitydto",{"_index":4020,"title":{},"body":{"classes/UpdateUserIdentityDto.html":{}}}],["partialtype(createusersettingsdto",{"_index":4022,"title":{},"body":{"classes/UpdateUserSettingsDto.html":{}}}],["partialupdatedatasetdto",{"_index":1591,"title":{"classes/PartialUpdateDatasetDto.html":{}},"body":{"injectables/DatasetsService.html":{},"controllers/OrigDatablocksController.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["partialupdatederiveddatasetdto",{"_index":1593,"title":{"classes/PartialUpdateDerivedDatasetDto.html":{}},"body":{"injectables/DatasetsService.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{}}}],["partialupdaterawdatasetdto",{"_index":1592,"title":{"classes/PartialUpdateRawDatasetDto.html":{}},"body":{"injectables/DatasetsService.html":{},"classes/PartialUpdateRawDatasetDto.html":{}}}],["particular",{"_index":4763,"title":{},"body":{"license.html":{}}}],["party",{"_index":4596,"title":{},"body":{"index.html":{}}}],["pass",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{},"controllers/OrigDatablocksController.html":{},"index.html":{}}}],["passed",{"_index":2989,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["passport",{"_index":780,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":670,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":700,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":770,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["passportstrategy(strategy",{"_index":789,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["passreqtocallback",{"_index":796,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["password",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"classes/CreateUserDto.html":{},"classes/CredentialsDto.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogbooksService.html":{},"injectables/OidcStrategy.html":{},"controllers/PublishedDataController.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["patch",{"_index":1680,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{}}}],["patch(\"/:id",{"_index":3055,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{}}}],["patch(\"/:id/settings",{"_index":4228,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(\":id",{"_index":2086,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/PoliciesController.html":{}}}],["patch('/:id",{"_index":3519,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["patch('/:id')@apioperation({summary",{"_index":2996,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["patch('/:id/settings",{"_index":4180,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":2204,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PoliciesController.html":{}}}],["patcheddataset",{"_index":1689,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["patchsettings",{"_index":4141,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchsettings(request",{"_index":4179,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"classes/UpdateDatasetDto.html":{}}}],["paths",{"_index":2129,"title":{},"body":{"classes/Job.html":{}}}],["payload",{"_index":109,"title":{},"body":{"injectables/AccessGroupFromPayloadService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{},"interfaces/UserPayload.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{}}}],["payload._id",{"_index":2531,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.authstrategy",{"_index":2543,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.displayname",{"_index":2557,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["payload.email",{"_index":2542,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.mail",{"_index":2558,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["payload.samaccountname",{"_index":2564,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["payload.service.ts",{"_index":108,"title":{},"body":{"injectables/AccessGroupFromPayloadService.html":{}}}],["payload.service.ts:11",{"_index":113,"title":{},"body":{"injectables/AccessGroupFromPayloadService.html":{}}}],["payload.thumbnailphoto",{"_index":2566,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["payload.username",{"_index":2541,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload[accessgroupsproperty",{"_index":122,"title":{},"body":{"injectables/AccessGroupFromPayloadService.html":{}}}],["pending_registration",{"_index":3536,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["per",{"_index":4123,"title":{},"body":{"classes/UserSettings.html":{}}}],["performable",{"_index":2208,"title":{},"body":{"controllers/JobsController.html":{}}}],["performed",{"_index":1872,"title":{},"body":{"classes/HistoryClass.html":{},"controllers/JobsController.html":{}}}],["performed.'})@prop({type",{"_index":1870,"title":{},"body":{"classes/HistoryClass.html":{}}}],["period",{"_index":1156,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/MeasurementPeriodClass.html":{},"index.html":{}}}],["period.dto",{"_index":1272,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["period.dto.ts",{"_index":1151,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{}}}],["period.dto.ts:12",{"_index":1181,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{}}}],["period.dto.ts:20",{"_index":1183,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{}}}],["period.dto.ts:28",{"_index":1177,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{}}}],["period.dto.ts:37",{"_index":1160,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{}}}],["period.schema",{"_index":1271,"title":{},"body":{"classes/CreateProposalDto.html":{},"classes/ProposalClass.html":{}}}],["period.schema.ts",{"_index":2852,"title":{},"body":{"classes/MeasurementPeriodClass.html":{},"miscellaneous/typealiases.html":{}}}],["period.schema.ts:17",{"_index":2857,"title":{},"body":{"classes/MeasurementPeriodClass.html":{}}}],["period.schema.ts:25",{"_index":2858,"title":{},"body":{"classes/MeasurementPeriodClass.html":{}}}],["period.schema.ts:33",{"_index":2855,"title":{},"body":{"classes/MeasurementPeriodClass.html":{}}}],["period.schema.ts:41",{"_index":2854,"title":{},"body":{"classes/MeasurementPeriodClass.html":{}}}],["perm",{"_index":1423,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{}}}],["permission",{"_index":1439,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{},"license.html":{}}}],["permissions",{"_index":971,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["permitted",{"_index":4741,"title":{},"body":{"license.html":{}}}],["persistent",{"_index":1065,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/HistoryClass.html":{},"classes/RelationshipClass.html":{},"classes/TechniqueClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["person",{"_index":2132,"title":{},"body":{"classes/Job.html":{},"classes/UpdateDatasetDto.html":{}}}],["persons",{"_index":3959,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["persons.'})@isoptional()@isstring",{"_index":4002,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["pgroup",{"_index":420,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"injectables/JobsService.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["photo",{"_index":835,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{},"injectables/UsersService.html":{}}}],["physical",{"_index":1827,"title":{},"body":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"controllers/InstrumentsController.html":{}}}],["pi_email",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateProposalDto.html":{},"classes/ProposalClass.html":{}}}],["pi_firstname",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateProposalDto.html":{},"classes/ProposalClass.html":{}}}],["pi_lastname",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateProposalDto.html":{},"classes/ProposalClass.html":{}}}],["pico",{"_index":1697,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["pid",{"_index":486,"title":{},"body":{"modules/AttachmentsModule.html":{},"classes/CreateProposalDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/Datablock.html":{},"classes/DatasetListDto.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{},"interfaces/IDatasetList.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/ProposalClass.html":{},"controllers/PublishedDataController.html":{},"classes/RelationshipClass.html":{},"classes/TechniqueClass.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["pid_prefix",{"_index":4652,"title":{},"body":{"index.html":{}}}],["pidarray",{"_index":1289,"title":{},"body":{"classes/CreatePublishedDataDto.html":{},"classes/PublishedData.html":{}}}],["pids",{"_index":3441,"title":{},"body":{"classes/PublishedData.html":{}}}],["pipeline",{"_index":1654,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{}}}],["pipelinestage",{"_index":2372,"title":{},"body":{"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{}}}],["pipelinestages",{"_index":3092,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["pipetransform",{"_index":1803,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["place",{"_index":4546,"title":{},"body":{"index.html":{}}}],["places",{"_index":2624,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["plaintoinstance",{"_index":3007,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["please",{"_index":2974,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"injectables/PoliciesService.html":{},"index.html":{}}}],["pointing",{"_index":3435,"title":{},"body":{"classes/PublishedData.html":{}}}],["policies",{"_index":942,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"controllers/PoliciesController.html":{}}}],["policies.controller",{"_index":3229,"title":{},"body":{"modules/PoliciesModule.html":{}}}],["policies.decorator",{"_index":2051,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["policies.service",{"_index":3152,"title":{},"body":{"controllers/PoliciesController.html":{},"modules/PoliciesModule.html":{}}}],["policies/policies.module",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["policiescontroller",{"_index":3125,"title":{"controllers/PoliciesController.html":{}},"body":{"controllers/PoliciesController.html":{},"modules/PoliciesModule.html":{}}}],["policiesguard",{"_index":2047,"title":{"guards/PoliciesGuard.html":{}},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["policiesmodule",{"_index":203,"title":{"modules/PoliciesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatasetsModule.html":{},"modules/JobsModule.html":{},"modules/PoliciesModule.html":{},"modules.html":{},"overview.html":{}}}],["policiesservice",{"_index":1549,"title":{"injectables/PoliciesService.html":{}},"body":{"modules/DatasetsModule.html":{},"injectables/JobsService.html":{},"controllers/PoliciesController.html":{},"modules/PoliciesModule.html":{},"injectables/PoliciesService.html":{},"overview.html":{}}}],["policiesservice.adddefaultpolicy",{"_index":3306,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["policiesservice.updatewhere",{"_index":3301,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["policy",{"_index":891,"title":{"classes/Policy.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"modules/DatasetsModule.html":{},"injectables/JobsService.html":{},"classes/LifecycleClass.html":{},"controllers/PoliciesController.html":{},"modules/PoliciesModule.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{}}}],["policy.'})@prop({type",{"_index":2613,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["policy.dto",{"_index":3153,"title":{},"body":{"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateWherePolicyDto.html":{}}}],["policy.dto.ts",{"_index":1208,"title":{},"body":{"classes/CreatePolicyDto.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateWherePolicyDto.html":{}}}],["policy.dto.ts:13",{"_index":1226,"title":{},"body":{"classes/CreatePolicyDto.html":{},"classes/UpdateWherePolicyDto.html":{}}}],["policy.dto.ts:17",{"_index":1229,"title":{},"body":{"classes/CreatePolicyDto.html":{}}}],["policy.dto.ts:21",{"_index":1222,"title":{},"body":{"classes/CreatePolicyDto.html":{}}}],["policy.dto.ts:25",{"_index":1224,"title":{},"body":{"classes/CreatePolicyDto.html":{}}}],["policy.dto.ts:29",{"_index":1219,"title":{},"body":{"classes/CreatePolicyDto.html":{}}}],["policy.dto.ts:33",{"_index":1221,"title":{},"body":{"classes/CreatePolicyDto.html":{}}}],["policy.dto.ts:37",{"_index":1227,"title":{},"body":{"classes/CreatePolicyDto.html":{}}}],["policy.dto.ts:41",{"_index":1228,"title":{},"body":{"classes/CreatePolicyDto.html":{}}}],["policy.dto.ts:45",{"_index":1225,"title":{},"body":{"classes/CreatePolicyDto.html":{}}}],["policy.dto.ts:8",{"_index":4024,"title":{},"body":{"classes/UpdateWherePolicyDto.html":{}}}],["policy.manager.includes(email",{"_index":3314,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["policy.name",{"_index":3233,"title":{},"body":{"modules/PoliciesModule.html":{}}}],["policy.taperedundancy",{"_index":1558,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["policy_publication_shift",{"_index":4671,"title":{},"body":{"index.html":{}}}],["policy_retention_shift",{"_index":4674,"title":{},"body":{"index.html":{}}}],["policydocument",{"_index":1946,"title":{},"body":{"interfaces/IPolicyFilter.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"miscellaneous/typealiases.html":{}}}],["policyhandler",{"_index":1955,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{}}}],["policyhandlercallback",{"_index":1954,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"miscellaneous/typealiases.html":{}}}],["policyhandlers",{"_index":3216,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["policyhandlers.every((handler",{"_index":3217,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["policymodel",{"_index":3238,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["policyschema",{"_index":3230,"title":{},"body":{"modules/PoliciesModule.html":{},"classes/Policy.html":{}}}],["policyschema.index",{"_index":3354,"title":{},"body":{"classes/Policy.html":{}}}],["policyservice",{"_index":1553,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["policyservice.findone",{"_index":1555,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["policyusername",{"_index":3242,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["populate",{"_index":2411,"title":{},"body":{"injectables/JobsService.html":{}}}],["port",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["position",{"_index":3464,"title":{},"body":{"classes/PublishedData.html":{}}}],["posix",{"_index":1438,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{}}}],["possibility",{"_index":4793,"title":{},"body":{"license.html":{}}}],["post",{"_index":596,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["post(\"/:id/jwt",{"_index":4238,"title":{},"body":{"controllers/UsersController.html":{}}}],["post(\"/:id/register",{"_index":3578,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["post(\"/:id/resync",{"_index":3633,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["post(\"/:id/settings",{"_index":4216,"title":{},"body":{"controllers/UsersController.html":{}}}],["post(\"/isvalid",{"_index":3031,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["post(\"/updatewhere",{"_index":3195,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["post(\"jwt",{"_index":4204,"title":{},"body":{"controllers/UsersController.html":{}}}],["post(\"ldap",{"_index":627,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"login",{"_index":620,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["post(\"logout",{"_index":658,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["post(\"msad",{"_index":626,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/:id/jwt')@apioperation({summary",{"_index":4153,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/:id/register",{"_index":3511,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["post('/:id/resync",{"_index":3517,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["post('/:id/settings",{"_index":4161,"title":{},"body":{"controllers/UsersController.html":{}}}],["post_logout_redirect_uri",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["preferred",{"_index":4120,"title":{},"body":{"classes/UserSettings.html":{}}}],["prefix",{"_index":142,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"classes/CreateProposalDto.html":{},"classes/HistoryClass.html":{},"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"classes/ProposalClass.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["prefix/internal",{"_index":1262,"title":{},"body":{"classes/CreateProposalDto.html":{},"classes/ProposalClass.html":{}}}],["prepare",{"_index":4561,"title":{},"body":{"index.html":{}}}],["prepare:local",{"_index":4543,"title":{},"body":{"index.html":{}}}],["prepended",{"_index":1274,"title":{},"body":{"classes/CreateProposalDto.html":{},"classes/HistoryClass.html":{},"classes/ProposalClass.html":{}}}],["prepended.'})@isstring",{"_index":1264,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["prepended.'})@prop({type",{"_index":3371,"title":{},"body":{"classes/ProposalClass.html":{}}}],["present",{"_index":3160,"title":{},"body":{"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["preview",{"_index":3473,"title":{},"body":{"classes/PublishedData.html":{}}}],["previousvalue",{"_index":1779,"title":{},"body":{"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{}}}],["principal",{"_index":1254,"title":{},"body":{"classes/CreateProposalDto.html":{},"classes/ProposalClass.html":{}}}],["prior",{"_index":838,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{},"index.html":{},"license.html":{}}}],["private",{"_index":64,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/InitialDatasetsService.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogbooksService.html":{},"injectables/OidcStrategy.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["process.env.admin_groups",{"_index":910,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["process.env.create_dataset_groups",{"_index":920,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["process.env.delete_groups",{"_index":916,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["process.env.doi_prefix",{"_index":3482,"title":{},"body":{"classes/PublishedData.html":{}}}],["process.env.doi_prefix.replace",{"_index":3483,"title":{},"body":{"classes/PublishedData.html":{}}}],["process.env.host",{"_index":2365,"title":{},"body":{"injectables/JobsService.html":{}}}],["process.env.pid_prefix",{"_index":2001,"title":{},"body":{"classes/Instrument.html":{}}}],["procurement",{"_index":4774,"title":{},"body":{"license.html":{}}}],["products",{"_index":4755,"title":{},"body":{"license.html":{}}}],["profile",{"_index":779,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"classes/CreateUserIdentityDto.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"classes/UserIdentity.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["profile.displayname",{"_index":860,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["profile.email",{"_index":863,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["profile.emails",{"_index":861,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["profile.id",{"_index":856,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["profile.schema",{"_index":783,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"classes/CreateUserIdentityDto.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{},"classes/UserIdentity.html":{}}}],["profile.schema.ts",{"_index":4102,"title":{},"body":{"classes/UserProfile.html":{},"miscellaneous/typealiases.html":{}}}],["profile.schema.ts:12",{"_index":4105,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.schema.ts:15",{"_index":4109,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.schema.ts:18",{"_index":4108,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.schema.ts:21",{"_index":4107,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.schema.ts:24",{"_index":4106,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.schema.ts:27",{"_index":4103,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.schema.ts:9",{"_index":4104,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.thumbnailphoto",{"_index":864,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["profile.username",{"_index":857,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["profits",{"_index":4778,"title":{},"body":{"license.html":{}}}],["programme",{"_index":4721,"title":{},"body":{"index.html":{}}}],["project",{"_index":4530,"title":{},"body":{"index.html":{},"license.html":{}}}],["projection",{"_index":507,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["promise",{"_index":48,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"controllers/AdminController.html":{},"injectables/AdminService.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"injectables/InitialDatasetsService.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcStrategy.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"injectables/UTCTimeInterceptor.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{}}}],["promise.all",{"_index":1747,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/JobsController.html":{},"injectables/LocalStrategy.html":{},"injectables/PoliciesService.html":{},"controllers/PublishedDataController.html":{},"injectables/RolesService.html":{}}}],["promise.all(accountpromises",{"_index":4351,"title":{},"body":{"injectables/UsersService.html":{}}}],["promote",{"_index":4754,"title":{},"body":{"license.html":{}}}],["prop",{"_index":457,"title":{},"body":{"classes/Attachment.html":{},"classes/DataFile.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/InitialDataset.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"classes/LifecycleClass.html":{},"classes/Logbook.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/TechniqueClass.html":{},"classes/User.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{}}}],["prop([attachmentschema",{"_index":3794,"title":{},"body":{"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["prop([datasetschema",{"_index":3796,"title":{},"body":{"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["prop([messageschema",{"_index":2697,"title":{},"body":{"classes/Logbook.html":{}}}],["prop(undefined",{"_index":2874,"title":{},"body":{"classes/Message.html":{},"classes/MessageContent.html":{}}}],["prop({required",{"_index":2618,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["prop({type",{"_index":372,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/InitialDataset.html":{},"classes/Instrument.html":{},"classes/Message.html":{},"classes/OrigDatablock.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{}}}],["proper",{"_index":3996,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["properties",{"_index":360,"title":{"properties.html":{}},"body":{"classes/Attachment.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateInitialDatasetDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/DatasetListDto.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"classes/HistoryClass.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IDatasetList.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/ISampleFields.html":{},"interfaces/IScientificFilter.html":{},"classes/InitialDataset.html":{},"classes/Instrument.html":{},"interfaces/JWTUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/LifecycleClass.html":{},"classes/Logbook.html":{},"injectables/LogbooksService.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/TechniqueClass.html":{},"injectables/UTCTimeInterceptor.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdateWherePolicyDto.html":{},"classes/User.html":{},"classes/UserIdentity.html":{},"interfaces/UserPayload.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"properties.html":{}}}],["property",{"_index":426,"title":{},"body":{"classes/Attachment.html":{},"modules/AuthModule.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["propname",{"_index":1829,"title":{},"body":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{}}}],["proposal",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"classes/Attachment.html":{},"classes/CreateProposalDto.html":{},"classes/ProposalClass.html":{},"controllers/PublishedDataController.html":{},"dependencies.html":{}}}],["proposal.'})@isstring",{"_index":1268,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["proposal.'})@prop({type",{"_index":3375,"title":{},"body":{"classes/ProposalClass.html":{}}}],["proposal.abstract",{"_index":3568,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["proposal.dto",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProposalsService.html":{},"classes/UpdateProposalDto.html":{}}}],["proposal.dto.ts",{"_index":1232,"title":{},"body":{"classes/CreateProposalDto.html":{},"classes/UpdateProposalDto.html":{}}}],["proposal.dto.ts:103",{"_index":1267,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["proposal.dto.ts:112",{"_index":1242,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["proposal.dto.ts:125",{"_index":1253,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["proposal.dto.ts:24",{"_index":1265,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["proposal.dto.ts:33",{"_index":1256,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["proposal.dto.ts:42",{"_index":1258,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["proposal.dto.ts:51",{"_index":1259,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["proposal.dto.ts:59",{"_index":1240,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["proposal.dto.ts:68",{"_index":1245,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["proposal.dto.ts:77",{"_index":1246,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["proposal.dto.ts:85",{"_index":1269,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["proposal.dto.ts:9",{"_index":4013,"title":{},"body":{"classes/UpdateProposalDto.html":{}}}],["proposal.dto.ts:94",{"_index":1237,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["proposal.proposalid",{"_index":4253,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["proposal.title",{"_index":3566,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["proposal_accepted",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["proposalacceptedmessage",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["proposalacceptedmessage.abstract",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["proposalacceptedmessage.proposer?.email",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["proposalacceptedmessage.proposer?.firstname",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["proposalacceptedmessage.proposer?.lastname",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["proposalacceptedmessage.shortcode",{"_index":333,"title":{},"body":{"modules/AppModule.html":{}}}],["proposalacceptedmessage.title",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["proposalclass",{"_index":893,"title":{"classes/ProposalClass.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{}}}],["proposalclass.name",{"_index":3390,"title":{},"body":{"modules/ProposalsModule.html":{}}}],["proposaldocument",{"_index":3377,"title":{},"body":{"classes/ProposalClass.html":{},"injectables/ProposalsService.html":{},"miscellaneous/typealiases.html":{}}}],["proposalid",{"_index":69,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"modules/AppModule.html":{},"classes/Attachment.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateProposalDto.html":{},"injectables/DatasetsService.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateProposalDto.html":{}}}],["proposalids",{"_index":4251,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["proposalids.includes((payload",{"_index":4259,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["proposalids.includes(logbook?.name",{"_index":4258,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["proposalingestor",{"_index":4493,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["proposalmodel",{"_index":3395,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["proposals",{"_index":68,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"classes/CreateProposalDto.html":{},"classes/ProposalClass.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["proposals.controller",{"_index":3388,"title":{},"body":{"modules/ProposalsModule.html":{}}}],["proposals.map((proposal",{"_index":4252,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["proposals.service",{"_index":3387,"title":{},"body":{"modules/ProposalsModule.html":{}}}],["proposals/dto/create",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["proposals/proposals.module",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["proposals/proposals.service",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["proposalschema",{"_index":3378,"title":{},"body":{"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{}}}],["proposalschema.index",{"_index":3380,"title":{},"body":{"classes/ProposalClass.html":{}}}],["proposalscontroller",{"_index":3386,"title":{},"body":{"modules/ProposalsModule.html":{}}}],["proposalsmodule",{"_index":204,"title":{"modules/ProposalsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LogbooksModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules.html":{},"overview.html":{}}}],["proposalsservice",{"_index":252,"title":{"injectables/ProposalsService.html":{}},"body":{"modules/AppModule.html":{},"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"overview.html":{}}}],["proposer",{"_index":1276,"title":{},"body":{"classes/CreateProposalDto.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"classes/ProposalClass.html":{}}}],["proposer.'})@isemail",{"_index":1239,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["proposer.'})@isoptional()@isstring",{"_index":1244,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["proposer.'})@prop({type",{"_index":3359,"title":{},"body":{"classes/ProposalClass.html":{}}}],["protocol",{"_index":3989,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["protocol://]fileserver1.example.com'})@isoptional()@isfqdn",{"_index":3990,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["provide",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"classes/Attachment.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"index.html":{}}}],["provided",{"_index":1348,"title":{},"body":{"classes/CreateSampleDto.html":{},"injectables/DatasetsService.html":{},"controllers/InstrumentsController.html":{},"controllers/OrigDatablocksController.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"index.html":{},"license.html":{}}}],["provider",{"_index":821,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"classes/CreateUserIdentityDto.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{},"classes/UserIdentity.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["provider/access",{"_index":8,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"modules/AuthModule.html":{},"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":96,"title":{},"body":{"injectables/AccessGroupFromMultipleProvidersService.html":{},"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"modules/AuthModule.html":{},"classes/BuildOpenIdClient.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"modules/DatablocksModule.html":{},"modules/DatasetsModule.html":{},"modules/InitialDatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/JobsModule.html":{},"modules/LogbooksModule.html":{},"injectables/OidcStrategy.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers.service.ts",{"_index":95,"title":{},"body":{"injectables/AccessGroupFromMultipleProvidersService.html":{}}}],["providers.service.ts:9",{"_index":98,"title":{},"body":{"injectables/AccessGroupFromMultipleProvidersService.html":{}}}],["providing",{"_index":2025,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/OrigDatablocksController.html":{},"index.html":{}}}],["ps",{"_index":3027,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["psi",{"_index":3615,"title":{},"body":{"controllers/PublishedDataController.html":{},"index.html":{}}}],["psi/sls/tomcat",{"_index":1184,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/MeasurementPeriodClass.html":{}}}],["psi/sls/tomcat'})@isstring",{"_index":1180,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{}}}],["psi/sls/tomcat'})@prop({type",{"_index":2856,"title":{},"body":{"classes/MeasurementPeriodClass.html":{}}}],["public",{"_index":407,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"controllers/JobsController.html":{},"classes/LifecycleClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["public'})@prop({type",{"_index":3334,"title":{},"body":{"classes/Policy.html":{}}}],["public.interceptor.ts",{"_index":2835,"title":{},"body":{"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{}}}],["public.interceptor.ts:11",{"_index":2836,"title":{},"body":{"injectables/MainDatasetsPublicInterceptor.html":{}}}],["public.interceptor.ts:29",{"_index":3857,"title":{},"body":{"injectables/SubDatasetsPublicInterceptor.html":{}}}],["public_url_prefix",{"_index":4653,"title":{},"body":{"index.html":{}}}],["publication",{"_index":3444,"title":{},"body":{"classes/PublishedData.html":{}}}],["publications",{"_index":3451,"title":{},"body":{"classes/PublishedData.html":{}}}],["publicationyear",{"_index":1290,"title":{},"body":{"classes/CreatePublishedDataDto.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{}}}],["publicly",{"_index":1340,"title":{},"body":{"classes/CreateSampleDto.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{}}}],["publicurlprefix",{"_index":3609,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["publish",{"_index":2221,"title":{},"body":{"controllers/JobsController.html":{},"classes/PublishedData.html":{}}}],["publishable",{"_index":2584,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["published",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"classes/CreatePublishedDataDto.html":{},"controllers/JobsController.html":{},"classes/LifecycleClass.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"classes/UpdatePublishedDataDto.html":{},"index.html":{}}}],["published.'})@prop({type",{"_index":2637,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["publisheddata",{"_index":895,"title":{"classes/PublishedData.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"miscellaneous/functions.html":{}}}],["publisheddata.doi",{"_index":3589,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["publisheddata.name",{"_index":3656,"title":{},"body":{"modules/PublishedDataModule.html":{}}}],["publisheddata.pidarray.map(async",{"_index":3586,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["publisheddata.registeredtime",{"_index":3580,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["publisheddata.status",{"_index":3582,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["publisheddata/:id",{"_index":3572,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["publisheddata/:id/register",{"_index":3577,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["publisheddata/:id/resync",{"_index":3632,"title":{},"body":{"controllers/PublishedDataController.html":{},"index.html":{}}}],["publisheddata/count",{"_index":3549,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["publisheddata/formpopulate",{"_index":3557,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["publisheddatacontroller",{"_index":3491,"title":{"controllers/PublishedDataController.html":{}},"body":{"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{}}}],["publisheddatacontroller.register",{"_index":3621,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["publisheddatacontroller.resync",{"_index":3640,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["publisheddatadocument",{"_index":1918,"title":{},"body":{"interfaces/ICount.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"miscellaneous/typealiases.html":{}}}],["publisheddatafields",{"_index":3544,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["publisheddatafilters",{"_index":3541,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["publisheddatafilters.fields",{"_index":3547,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["publisheddatafilters.limits",{"_index":3546,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["publisheddatalimits",{"_index":3542,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["publisheddatamodel",{"_index":3661,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["publisheddatamodule",{"_index":205,"title":{"modules/PublishedDataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PublishedDataModule.html":{},"modules.html":{},"overview.html":{}}}],["publisheddataschema",{"_index":3488,"title":{},"body":{"classes/PublishedData.html":{},"modules/PublishedDataModule.html":{}}}],["publisheddataschema.index",{"_index":3490,"title":{},"body":{"classes/PublishedData.html":{}}}],["publisheddataservice",{"_index":3521,"title":{"injectables/PublishedDataService.html":{}},"body":{"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"overview.html":{}}}],["publishedon",{"_index":2585,"title":{},"body":{"classes/LifecycleClass.html":{},"controllers/PublishedDataController.html":{}}}],["publisher",{"_index":1291,"title":{},"body":{"classes/CreatePublishedDataDto.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{}}}],["publisher'})@prop({type",{"_index":3446,"title":{},"body":{"classes/PublishedData.html":{}}}],["publishingdate",{"_index":2658,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["publishjob",{"_index":2170,"title":{},"body":{"controllers/JobsController.html":{}}}],["purpose",{"_index":4764,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3928,"title":{},"body":{"classes/UpdateDatasetDto.html":{},"injectables/UsersService.html":{}}}],["pursued",{"_index":1179,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateProposalDto.html":{},"classes/MeasurementPeriodClass.html":{},"classes/ProposalClass.html":{}}}],["pushed",{"_index":3627,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["put",{"_index":1660,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{}}}],["put(\"/:id/settings",{"_index":4224,"title":{},"body":{"controllers/UsersController.html":{}}}],["put('/:id/settings",{"_index":4186,"title":{},"body":{"controllers/UsersController.html":{}}}],["quality",{"_index":3912,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["quantities.interceptor",{"_index":2054,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["quantities.interceptor.ts",{"_index":1828,"title":{},"body":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{}}}],["quantities.interceptor.ts:12",{"_index":1831,"title":{},"body":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{}}}],["quantities.interceptor.ts:18",{"_index":1832,"title":{},"body":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{}}}],["query",{"_index":46,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"index.html":{}}}],["query(\"fields",{"_index":3540,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["query(\"filter",{"_index":3538,"title":{},"body":{"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{}}}],["query(\"filters",{"_index":2721,"title":{},"body":{"controllers/LogbooksController.html":{}}}],["query(\"limits",{"_index":3539,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["query(new",{"_index":3185,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["queryable.schema",{"_index":3109,"title":{},"body":{"classes/OwnableClass.html":{}}}],["queryableclass",{"_index":430,"title":{"classes/QueryableClass.html":{}},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["queryableclass:15",{"_index":452,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["queryableclass:26",{"_index":456,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["queryableclass:40",{"_index":431,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["queryableclass:50",{"_index":455,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["queryfilter",{"_index":3136,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["queryfilter?.filter",{"_index":3163,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["queryfilters",{"_index":4049,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["queryoptions",{"_index":1613,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{},"injectables/SamplesService.html":{}}}],["questions",{"_index":4519,"title":{},"body":{"index.html":{}}}],["queue",{"_index":2182,"title":{},"body":{"controllers/JobsController.html":{}}}],["r",{"_index":2681,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["r.name",{"_index":2683,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["r.roleid",{"_index":2678,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["rabbitmq",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["rabbitmq.listenonbroadcast(async",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["rabbitmq.setup",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["rabbitmq_enabled",{"_index":4655,"title":{},"body":{"index.html":{}}}],["rabbitmq_hostname",{"_index":4657,"title":{},"body":{"index.html":{}}}],["rabbitmq_password",{"_index":4659,"title":{},"body":{"index.html":{}}}],["rabbitmq_username",{"_index":4658,"title":{},"body":{"index.html":{}}}],["rabbitmqenabled",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["rabbitmqmessagebroker",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["rate",{"_index":3914,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["raw",{"_index":1624,"title":{},"body":{"injectables/DatasetsService.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/PublishedData.html":{},"classes/UpdateDatasetDto.html":{},"miscellaneous/enumerations.html":{}}}],["re",{"_index":3430,"title":{},"body":{"classes/PublishedData.html":{}}}],["read",{"_index":399,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["readall",{"_index":4460,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["readfilesync",{"_index":2368,"title":{},"body":{"injectables/JobsService.html":{},"controllers/PublishedDataController.html":{}}}],["readfilesync(this.doiconfigpath).tostring",{"_index":3637,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["readonly",{"_index":70,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"controllers/AdminController.html":{},"classes/BuildOpenIdClient.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateInitialDatasetDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"classes/CredentialsDto.html":{},"classes/DataFileDto.html":{},"classes/DatasetListDto.html":{},"injectables/HistoryInterceptor.html":{},"controllers/InstrumentsController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/OidcStrategy.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdateWherePolicyDto.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["readown",{"_index":4459,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ready",{"_index":2639,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["realm",{"_index":4027,"title":{},"body":{"classes/User.html":{}}}],["record",{"_index":30,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"classes/AccessGroupService.html":{},"classes/Attachment.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserSettingsDto.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/LdapStrategy.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"injectables/OidcAuthGuard.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"controllers/PoliciesController.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"controllers/UserIdentitiesController.html":{},"classes/UserIdentity.html":{},"interfaces/UserPayload.html":{},"classes/UserProfile.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["redirect",{"_index":4631,"title":{},"body":{"index.html":{}}}],["redirect_uri",{"_index":793,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["redirects",{"_index":4605,"title":{},"body":{"index.html":{}}}],["redistribution",{"_index":4737,"title":{},"body":{"license.html":{}}}],["redistributions",{"_index":4743,"title":{},"body":{"license.html":{}}}],["reduce((ps",{"_index":3026,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["redundancy",{"_index":3342,"title":{},"body":{"classes/Policy.html":{}}}],["redundant",{"_index":3349,"title":{},"body":{"classes/Policy.html":{}}}],["ref",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"classes/Attachment.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/Datablock.html":{},"classes/Logbook.html":{},"classes/OrigDatablock.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UserIdentity.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{}}}],["refer",{"_index":1991,"title":{},"body":{"classes/Instrument.html":{},"controllers/OrigDatablocksController.html":{}}}],["referencefiles",{"_index":2267,"title":{},"body":{"controllers/JobsController.html":{}}}],["referencefiles.has(f",{"_index":2271,"title":{},"body":{"controllers/JobsController.html":{}}}],["referer",{"_index":2909,"title":{},"body":{"injectables/OidcAuthGuard.html":{}}}],["referred",{"_index":4514,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":4440,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{},"guards/RolesGuard.html":{}}}],["regex",{"_index":1940,"title":{},"body":{"interfaces/IDateRange.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"injectables/PoliciesService.html":{}}}],["regex.test(key",{"_index":1715,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["regexliteral",{"_index":1560,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["regexp",{"_index":3288,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["regexp(\".*_date",{"_index":1693,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["regexp(\"bw_measurement",{"_index":1698,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["regexp(\"entrych",{"_index":1695,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["regexp(\"fmc",{"_index":1696,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["regexp(\"linearity_measurement",{"_index":1699,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["regexp(\"pulse_measurement",{"_index":1700,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["regexp(\"runnumber",{"_index":1694,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["register",{"_index":3494,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["register(@param(\"id",{"_index":3579,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["register(id",{"_index":3510,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["register_doi_uri",{"_index":4660,"title":{},"body":{"index.html":{}}}],["register_metadata_uri",{"_index":4664,"title":{},"body":{"index.html":{}}}],["registerdatacitedoioptions",{"_index":3605,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["registerdatacitemetadataoptions",{"_index":3598,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["registerdoiuri",{"_index":3591,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["registerdoiuri}/${fulldoi",{"_index":3610,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["registered",{"_index":3484,"title":{},"body":{"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"injectables/RegisteredInterceptor.html":{}}}],["registered'})@prop({type",{"_index":3448,"title":{},"body":{"classes/PublishedData.html":{}}}],["registeredinterceptor",{"_index":3526,"title":{"injectables/RegisteredInterceptor.html":{}},"body":{"controllers/PublishedDataController.html":{},"injectables/RegisteredInterceptor.html":{}}}],["registeredtime",{"_index":1292,"title":{},"body":{"classes/CreatePublishedDataDto.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{}}}],["registermetadatauri",{"_index":3590,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["registermetadatauri}/${fulldoi",{"_index":3599,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["registers",{"_index":4662,"title":{},"body":{"index.html":{}}}],["related",{"_index":1324,"title":{},"body":{"classes/CreateRelationshipDto.html":{},"classes/PublishedData.html":{},"classes/RelationshipClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["relatedpublications",{"_index":1293,"title":{},"body":{"classes/CreatePublishedDataDto.html":{},"classes/PublishedData.html":{}}}],["relation",{"_index":1903,"title":{},"body":{"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/IScientificFilter.html":{}}}],["relation.enum",{"_index":1901,"title":{},"body":{"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{}}}],["relation.enum.ts",{"_index":4456,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["relationship",{"_index":1323,"title":{},"body":{"classes/CreateRelationshipDto.html":{},"classes/RelationshipClass.html":{}}}],["relationship.dto.ts",{"_index":1322,"title":{},"body":{"classes/CreateRelationshipDto.html":{}}}],["relationship.dto.ts:11",{"_index":1326,"title":{},"body":{"classes/CreateRelationshipDto.html":{}}}],["relationship.dto.ts:19",{"_index":1329,"title":{},"body":{"classes/CreateRelationshipDto.html":{}}}],["relationshipclass",{"_index":3688,"title":{"classes/RelationshipClass.html":{}},"body":{"classes/RelationshipClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["relationshipdocument",{"_index":3693,"title":{},"body":{"classes/RelationshipClass.html":{},"miscellaneous/typealiases.html":{}}}],["relationships",{"_index":3889,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["relationshipschema",{"_index":3694,"title":{},"body":{"classes/RelationshipClass.html":{}}}],["relative",{"_index":1434,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Job.html":{}}}],["release",{"_index":4584,"title":{},"body":{"index.html":{}}}],["releases",{"_index":624,"title":{},"body":{"controllers/AuthController.html":{}}}],["releases.'})@allowany()@useguards(ldapauthguard)@post('msad",{"_index":588,"title":{},"body":{"controllers/AuthController.html":{}}}],["relevant",{"_index":1155,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/MeasurementPeriodClass.html":{}}}],["remaining",{"_index":3329,"title":{},"body":{"classes/Policy.html":{}}}],["remove",{"_index":586,"title":{},"body":{"controllers/AuthController.html":{},"injectables/DatablocksService.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["remove(@param(\"id",{"_index":2091,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{}}}],["remove(filter",{"_index":1512,"title":{},"body":{"injectables/DatablocksService.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["remove(id",{"_index":2031,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{}}}],["removed",{"_index":2607,"title":{},"body":{"classes/LifecycleClass.html":{},"controllers/PublishedDataController.html":{}}}],["removed.'})@isstring",{"_index":3984,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["removeduseridentity",{"_index":4386,"title":{},"body":{"injectables/UsersService.html":{}}}],["removesettings",{"_index":4142,"title":{},"body":{"controllers/UsersController.html":{}}}],["removesettings(request",{"_index":4182,"title":{},"body":{"controllers/UsersController.html":{}}}],["removeuseridentity",{"_index":4279,"title":{},"body":{"injectables/UsersService.html":{}}}],["removeuseridentity(userid",{"_index":4310,"title":{},"body":{"injectables/UsersService.html":{}}}],["replace",{"_index":2451,"title":{},"body":{"injectables/JobsService.html":{}}}],["replace(/t",{"_index":2450,"title":{},"body":{"injectables/JobsService.html":{}}}],["replacelikeoperator",{"_index":2057,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/PoliciesController.html":{}}}],["replacelikeoperator(json.parse(filter",{"_index":2080,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["repo",{"_index":4518,"title":{},"body":{"index.html":{}}}],["repository",{"_index":4510,"title":{},"body":{"index.html":{}}}],["representation",{"_index":2952,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["reproduce",{"_index":4748,"title":{},"body":{"license.html":{}}}],["req",{"_index":562,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DatasetsService.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"controllers/JobsController.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"injectables/UTCTimeInterceptor.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["req.body",{"_index":1735,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{}}}],["req.body.$set",{"_index":1742,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["req.body.data",{"_index":1763,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["req.body.datasetlifecycle",{"_index":1750,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["req.body.datasetlifecycle[k",{"_index":1755,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["req.body.history",{"_index":1769,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["req.body.packedsize",{"_index":1771,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["req.body.size",{"_index":1770,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["req.body[this.propname",{"_index":1840,"title":{},"body":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{}}}],["req.body[this.subgroup",{"_index":2904,"title":{},"body":{"injectables/MultiUTCTimeInterceptor.html":{}}}],["req.logout(async",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{}}}],["req.query.fields",{"_index":1849,"title":{},"body":{"injectables/FullQueryInterceptor.html":{}}}],["req.query.where",{"_index":1734,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["req.user",{"_index":655,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DatasetsService.html":{},"guards/PoliciesGuard.html":{}}}],["request",{"_index":496,"title":{},"body":{"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["request.'})@prop({type",{"_index":2134,"title":{},"body":{"classes/Job.html":{}}}],["request.headers.authorization",{"_index":2512,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.headers[\"cookie",{"_index":2913,"title":{},"body":{"injectables/OidcAuthGuard.html":{}}}],["request.headers[\"referer",{"_index":2916,"title":{},"body":{"injectables/OidcAuthGuard.html":{}}}],["request.isauthenticated",{"_index":2837,"title":{},"body":{"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{}}}],["request.query.access_token",{"_index":2511,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.query.fields",{"_index":2847,"title":{},"body":{"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{}}}],["request.query.filter",{"_index":2839,"title":{},"body":{"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{}}}],["request.user",{"_index":2279,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PoliciesController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["requested",{"_index":2029,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{}}}],["requesting",{"_index":2276,"title":{},"body":{"controllers/JobsController.html":{}}}],["requests",{"_index":4607,"title":{},"body":{"index.html":{}}}],["required",{"_index":378,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserSettingsDto.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/InitialDataset.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"classes/LifecycleClass.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"controllers/PoliciesController.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"classes/QueryableClass.html":{},"classes/RelationshipClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/TechniqueClass.html":{},"classes/UpdateDatasetDto.html":{},"classes/User.html":{},"classes/UserSettings.html":{},"index.html":{}}}],["requiredroles",{"_index":3713,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":3716,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requirements",{"_index":3896,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["requires",{"_index":2631,"title":{},"body":{"classes/LifecycleClass.html":{},"index.html":{}}}],["res",{"_index":569,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/LogbooksService.html":{},"guards/PoliciesGuard.html":{},"controllers/PublishedDataController.html":{}}}],["res.data",{"_index":2760,"title":{},"body":{"injectables/LogbooksService.html":{},"controllers/PublishedDataController.html":{}}}],["res.data.event_id",{"_index":2800,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["res.data.filter",{"_index":2772,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["res.data.messages",{"_index":2792,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["res.data.messages.slice(skip",{"_index":2794,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["res.redirect(url.tostring",{"_index":652,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.req.headers[\"referer",{"_index":643,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.req.user",{"_index":1411,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{}}}],["res.status(httpstatus.bad_request",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{}}}],["research",{"_index":4722,"title":{},"body":{"index.html":{}}}],["reserved",{"_index":4736,"title":{},"body":{"license.html":{}}}],["reset",{"_index":177,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"modules/DatablocksModule.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"modules/InitialDatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"modules/LogbooksModule.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":4693,"title":{},"body":{"index.html":{}}}],["resourcetype",{"_index":1294,"title":{},"body":{"classes/CreatePublishedDataDto.html":{},"interfaces/ICount.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{}}}],["respect",{"_index":2602,"title":{},"body":{"classes/LifecycleClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["response",{"_index":32,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"classes/Attachment.html":{},"controllers/AuthController.html":{},"classes/BuildOpenIdClient.html":{},"classes/Datablock.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"injectables/LdapStrategy.html":{},"classes/MeasurementPeriodClass.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"controllers/UsersController.html":{}}}],["response.data",{"_index":90,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["responseprocessor",{"_index":31,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["result",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PoliciesController.html":{}}}],["result.length",{"_index":2234,"title":{},"body":{"controllers/JobsController.html":{}}}],["result[pid",{"_index":2268,"title":{},"body":{"controllers/JobsController.html":{}}}],["results",{"_index":91,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Attachment.html":{},"modules/AttachmentsModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateInitialDatasetDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"modules/DatablocksModule.html":{},"injectables/DatablocksService.html":{},"classes/DatasetListDto.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"classes/HistoryClass.html":{},"injectables/HistoryInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IDatasetList.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/ISampleFields.html":{},"interfaces/IScientificFilter.html":{},"classes/InitialDataset.html":{},"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"injectables/InstrumentsService.html":{},"interfaces/JWTUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapAuthGuard.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Logbook.html":{},"controllers/LogbooksController.html":{},"modules/LogbooksModule.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"modules/PoliciesModule.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"classes/QueryableClass.html":{},"injectables/RegisteredInterceptor.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"classes/TechniqueClass.html":{},"injectables/UTCTimeInterceptor.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatablockDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateInstrumentDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateOrigDatablockDto.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdatePublishedDataDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUserIdentityDto.html":{},"classes/UpdateUserSettingsDto.html":{},"classes/UpdateWherePolicyDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"classes/UserIdentity.html":{},"interfaces/UserPayload.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["results.reduce((a",{"_index":4352,"title":{},"body":{"injectables/UsersService.html":{}}}],["resync",{"_index":3495,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["resync(id",{"_index":3515,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["resyncoaipublication",{"_index":3638,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["retain",{"_index":4744,"title":{},"body":{"license.html":{}}}],["retention",{"_index":4675,"title":{},"body":{"index.html":{}}}],["retentiontime",{"_index":2653,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["retrievable",{"_index":2178,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/LifecycleClass.html":{},"miscellaneous/enumerations.html":{}}}],["retrieval",{"_index":2648,"title":{},"body":{"classes/LifecycleClass.html":{},"classes/Policy.html":{}}}],["retrieve",{"_index":2016,"title":{},"body":{"controllers/InstrumentsController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/LifecycleClass.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"miscellaneous/enumerations.html":{}}}],["retrieve\"].includes(jobtype",{"_index":2394,"title":{},"body":{"injectables/JobsService.html":{}}}],["retrieved",{"_index":1051,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/Datablock.html":{},"injectables/JobsService.html":{},"classes/LifecycleClass.html":{},"controllers/OrigDatablocksController.html":{}}}],["retrieved.'})@prop({default",{"_index":2640,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["retrieveemailnotification",{"_index":1215,"title":{},"body":{"classes/CreatePolicyDto.html":{},"injectables/JobsService.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{}}}],["retrieveemailstobenotified",{"_index":1216,"title":{},"body":{"classes/CreatePolicyDto.html":{},"injectables/JobsService.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{}}}],["retrieveemailstobenotified.join",{"_index":2486,"title":{},"body":{"injectables/JobsService.html":{}}}],["retrieveintegritycheck",{"_index":2586,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["retrievereturnmessage",{"_index":2439,"title":{},"body":{"injectables/JobsService.html":{},"classes/LifecycleClass.html":{}}}],["retrievestatusmessage",{"_index":2435,"title":{},"body":{"injectables/JobsService.html":{},"classes/LifecycleClass.html":{}}}],["retrieving",{"_index":2076,"title":{},"body":{"controllers/InstrumentsController.html":{},"classes/LifecycleClass.html":{},"controllers/OrigDatablocksController.html":{}}}],["return",{"_index":84,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"controllers/AdminController.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"injectables/InstrumentsService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalStrategy.html":{},"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{},"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"injectables/RegisteredInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["returned",{"_index":2024,"title":{},"body":{"controllers/InstrumentsController.html":{},"classes/LifecycleClass.html":{},"controllers/OrigDatablocksController.html":{},"index.html":{}}}],["returnlimit",{"_index":1718,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["returns",{"_index":47,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"controllers/AdminController.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"interfaces/IPolicyHandler.html":{},"injectables/InitialDatasetsService.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/RegisteredInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["returnurl",{"_index":649,"title":{},"body":{"controllers/AuthController.html":{}}}],["returnuser",{"_index":827,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["returnuser._id",{"_index":829,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["returnuser.userid",{"_index":828,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["reverse",{"_index":2778,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["rfc",{"_index":1166,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Job.html":{},"classes/MeasurementPeriodClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["rhs",{"_index":1904,"title":{},"body":{"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{}}}],["right",{"_index":4545,"title":{},"body":{"index.html":{}}}],["rights",{"_index":4735,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":4442,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":877,"title":{"classes/Role.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/UserRole.html":{},"injectables/UsersLogbooksInterceptor.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["role'})@prop({type",{"_index":3701,"title":{},"body":{"classes/Role.html":{}}}],["role.dto",{"_index":3750,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["role.dto.ts",{"_index":1331,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateUserRoleDto.html":{}}}],["role.dto.ts:5",{"_index":1332,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateUserRoleDto.html":{}}}],["role.dto.ts:8",{"_index":1381,"title":{},"body":{"classes/CreateUserRoleDto.html":{}}}],["role.enum",{"_index":3712,"title":{},"body":{"guards/RolesGuard.html":{}}}],["role.name",{"_index":2535,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{}}}],["role.schema",{"_index":2672,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/RolesService.html":{},"modules/UsersModule.html":{}}}],["role.schema.ts",{"_index":4113,"title":{},"body":{"classes/UserRole.html":{},"miscellaneous/typealiases.html":{}}}],["role.schema.ts:13",{"_index":4115,"title":{},"body":{"classes/UserRole.html":{}}}],["role.schema.ts:17",{"_index":4114,"title":{},"body":{"classes/UserRole.html":{}}}],["roledocument",{"_index":3703,"title":{},"body":{"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/typealiases.html":{}}}],["roleexists",{"_index":3724,"title":{},"body":{"injectables/RolesService.html":{}}}],["roleexists(filter",{"_index":3746,"title":{},"body":{"injectables/RolesService.html":{}}}],["rolegroups",{"_index":2679,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["roleid",{"_index":1380,"title":{},"body":{"classes/CreateUserRoleDto.html":{},"injectables/RolesService.html":{},"classes/UserRole.html":{},"injectables/UsersService.html":{}}}],["rolemodel",{"_index":3729,"title":{},"body":{"injectables/RolesService.html":{}}}],["rolenames",{"_index":2533,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["roles",{"_index":2529,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["roles.service",{"_index":4266,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["roles[\"globalaccess",{"_index":4341,"title":{},"body":{"injectables/UsersService.html":{}}}],["roles[\"globalaccess\"].push(user._id.tostring",{"_index":4342,"title":{},"body":{"injectables/UsersService.html":{}}}],["roles[role",{"_index":4338,"title":{},"body":{"injectables/UsersService.html":{}}}],["roles[role].push(user._id.tostring",{"_index":4339,"title":{},"body":{"injectables/UsersService.html":{}}}],["roles_key",{"_index":3710,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roleschema",{"_index":3704,"title":{},"body":{"classes/Role.html":{},"modules/UsersModule.html":{}}}],["rolesguard",{"_index":3706,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{}}}],["rolesservice",{"_index":2518,"title":{"injectables/RolesService.html":{}},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/RolesService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["room",{"_index":2796,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["roomid",{"_index":2687,"title":{},"body":{"classes/Logbook.html":{}}}],["root",{"_index":4531,"title":{},"body":{"index.html":{}}}],["route",{"_index":3630,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["run",{"_index":2423,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PoliciesService.html":{},"index.html":{}}}],["running",{"_index":4559,"title":{},"body":{"index.html":{}}}],["runs",{"_index":4581,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":61,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"injectables/HistoryInterceptor.html":{},"injectables/LogbooksService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"controllers/PublishedDataController.html":{},"injectables/RegisteredInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{},"injectables/UsersLogbooksInterceptor.html":{},"dependencies.html":{}}}],["s#%s",{"_index":2225,"title":{},"body":{"controllers/JobsController.html":{}}}],["safety",{"_index":2479,"title":{},"body":{"injectables/JobsService.html":{}}}],["same",{"_index":2065,"title":{},"body":{"controllers/InstrumentsController.html":{},"index.html":{}}}],["sample",{"_index":386,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateSampleDto.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"injectables/SamplesService.html":{},"index.html":{}}}],["sample.'})@isstring()@isoptional",{"_index":1337,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.'})@prop({type",{"_index":3784,"title":{},"body":{"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["sample.dto",{"_index":3833,"title":{},"body":{"injectables/SamplesService.html":{},"classes/UpdateSampleDto.html":{}}}],["sample.dto.ts",{"_index":1335,"title":{},"body":{"classes/CreateSampleDto.html":{},"classes/UpdateSampleDto.html":{}}}],["sample.dto.ts:14",{"_index":1352,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:23",{"_index":1343,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:32",{"_index":1338,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:42",{"_index":1347,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["sample.dto.ts:52",{"_index":1342,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["samplecharacteristics",{"_index":1336,"title":{},"body":{"classes/CreateSampleDto.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"injectables/SamplesService.html":{}}}],["sampleclass",{"_index":899,"title":{"classes/SampleClass.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{}}}],["sampleclass.name",{"_index":3817,"title":{},"body":{"modules/SamplesModule.html":{}}}],["sampleclass:20",{"_index":3802,"title":{},"body":{"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["sampleclass:30",{"_index":3807,"title":{},"body":{"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["sampleclass:38",{"_index":3805,"title":{},"body":{"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["sampleclass:46",{"_index":3803,"title":{},"body":{"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["sampleclass:55",{"_index":3806,"title":{},"body":{"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["sampleclass:64",{"_index":3804,"title":{},"body":{"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["sampledocument",{"_index":3791,"title":{},"body":{"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"injectables/SamplesService.html":{},"miscellaneous/typealiases.html":{}}}],["samplefield",{"_index":3835,"title":{},"body":{"injectables/SamplesService.html":{},"miscellaneous/enumerations.html":{}}}],["samplefield.characteristics",{"_index":3849,"title":{},"body":{"injectables/SamplesService.html":{}}}],["samplefield.text",{"_index":3846,"title":{},"body":{"injectables/SamplesService.html":{}}}],["sampleid",{"_index":365,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateSampleDto.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"modules/SamplesModule.html":{},"classes/UpdateAttachmentDto.html":{}}}],["samplemodel",{"_index":3822,"title":{},"body":{"injectables/SamplesService.html":{}}}],["samples",{"_index":3852,"title":{},"body":{"injectables/SamplesService.html":{}}}],["samples.controller",{"_index":3815,"title":{},"body":{"modules/SamplesModule.html":{}}}],["samples.service",{"_index":3814,"title":{},"body":{"modules/SamplesModule.html":{}}}],["samples/samples.module",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["sampleschema",{"_index":3797,"title":{},"body":{"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"modules/SamplesModule.html":{}}}],["sampleschema.index",{"_index":3799,"title":{},"body":{"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["samplescontroller",{"_index":3813,"title":{},"body":{"modules/SamplesModule.html":{}}}],["samplesmodule",{"_index":206,"title":{"modules/SamplesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SamplesModule.html":{},"modules.html":{},"overview.html":{}}}],["samplesservice",{"_index":3811,"title":{"injectables/SamplesService.html":{}},"body":{"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"overview.html":{}}}],["samplewithattachmentsanddatasets",{"_index":3792,"title":{"classes/SampleWithAttachmentsAndDatasets.html":{}},"body":{"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["sanitizedcreateuserdto",{"_index":4366,"title":{},"body":{"injectables/UsersService.html":{}}}],["scenario",{"_index":3162,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["scheduledforarchiving",{"_index":2463,"title":{},"body":{"injectables/JobsService.html":{}}}],["scheduledforretrieval",{"_index":2462,"title":{},"body":{"injectables/JobsService.html":{}}}],["schema",{"_index":458,"title":{},"body":{"classes/Attachment.html":{},"modules/AttachmentsModule.html":{},"classes/DataFile.html":{},"classes/Datablock.html":{},"modules/DatablocksModule.html":{},"modules/DatasetsModule.html":{},"classes/HistoryClass.html":{},"classes/InitialDataset.html":{},"modules/InitialDatasetsModule.html":{},"classes/Instrument.html":{},"modules/InstrumentsModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"classes/LifecycleClass.html":{},"classes/Logbook.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"classes/OrigDatablock.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{},"classes/PublishedData.html":{},"modules/PublishedDataModule.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"modules/SamplesModule.html":{},"classes/TechniqueClass.html":{},"classes/User.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["schema(https://mongoosejs.com/docs/guide.html#timestamps",{"_index":439,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["schema.pre(\"save",{"_index":482,"title":{},"body":{"modules/AttachmentsModule.html":{},"modules/DatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{}}}],["schemafactory",{"_index":459,"title":{},"body":{"classes/Attachment.html":{},"classes/DataFile.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/InitialDataset.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"classes/LifecycleClass.html":{},"classes/Logbook.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"classes/OrigDatablock.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/TechniqueClass.html":{},"classes/User.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{}}}],["schemafactory.createforclass",{"_index":2862,"title":{},"body":{"classes/MeasurementPeriodClass.html":{}}}],["schemafactory.createforclass(attachment",{"_index":472,"title":{},"body":{"classes/Attachment.html":{}}}],["schemafactory.createforclass(datablock",{"_index":1494,"title":{},"body":{"classes/Datablock.html":{}}}],["schemafactory.createforclass(datafile",{"_index":1456,"title":{},"body":{"classes/DataFile.html":{}}}],["schemafactory.createforclass(historyclass",{"_index":1887,"title":{},"body":{"classes/HistoryClass.html":{}}}],["schemafactory.createforclass(initialdataset",{"_index":1963,"title":{},"body":{"classes/InitialDataset.html":{}}}],["schemafactory.createforclass(instrument",{"_index":2003,"title":{},"body":{"classes/Instrument.html":{}}}],["schemafactory.createforclass(job",{"_index":2163,"title":{},"body":{"classes/Job.html":{}}}],["schemafactory.createforclass(lifecycleclass",{"_index":2662,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["schemafactory.createforclass(logbook",{"_index":2699,"title":{},"body":{"classes/Logbook.html":{}}}],["schemafactory.createforclass(message",{"_index":2879,"title":{},"body":{"classes/Message.html":{}}}],["schemafactory.createforclass(messagecontent",{"_index":2889,"title":{},"body":{"classes/MessageContent.html":{}}}],["schemafactory.createforclass(origdatablock",{"_index":2935,"title":{},"body":{"classes/OrigDatablock.html":{}}}],["schemafactory.createforclass(policy",{"_index":3353,"title":{},"body":{"classes/Policy.html":{}}}],["schemafactory.createforclass(proposalclass",{"_index":3379,"title":{},"body":{"classes/ProposalClass.html":{}}}],["schemafactory.createforclass(publisheddata",{"_index":3489,"title":{},"body":{"classes/PublishedData.html":{}}}],["schemafactory.createforclass(relationshipclass",{"_index":3695,"title":{},"body":{"classes/RelationshipClass.html":{}}}],["schemafactory.createforclass(role",{"_index":3705,"title":{},"body":{"classes/Role.html":{}}}],["schemafactory.createforclass(sampleclass",{"_index":3798,"title":{},"body":{"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["schemafactory.createforclass(techniqueclass",{"_index":3866,"title":{},"body":{"classes/TechniqueClass.html":{}}}],["schemafactory.createforclass(user",{"_index":4042,"title":{},"body":{"classes/User.html":{}}}],["schemafactory.createforclass(useridentity",{"_index":4100,"title":{},"body":{"classes/UserIdentity.html":{}}}],["schemafactory.createforclass(userprofile",{"_index":4112,"title":{},"body":{"classes/UserProfile.html":{}}}],["schemafactory.createforclass(userrole",{"_index":4117,"title":{},"body":{"classes/UserRole.html":{}}}],["schemafactory.createforclass(usersettings",{"_index":4132,"title":{},"body":{"classes/UserSettings.html":{}}}],["schemas",{"_index":4539,"title":{},"body":{"index.html":{}}}],["schemas/attachment.schema",{"_index":479,"title":{},"body":{"modules/AttachmentsModule.html":{},"injectables/AttachmentsService.html":{}}}],["schemas/datablock.schema",{"_index":1501,"title":{},"body":{"modules/DatablocksModule.html":{},"injectables/DatablocksService.html":{}}}],["schemas/dataset.schema",{"_index":1542,"title":{},"body":{"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"injectables/FullQueryInterceptor.html":{}}}],["schemas/initial",{"_index":1968,"title":{},"body":{"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{}}}],["schemas/instrument.schema",{"_index":2053,"title":{},"body":{"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"injectables/InstrumentsService.html":{}}}],["schemas/job.schema",{"_index":2212,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schemas/logbook.schema",{"_index":2711,"title":{},"body":{"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["schemas/measurement",{"_index":1270,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["schemas/message.schema",{"_index":2750,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["schemas/origdatablock.schema",{"_index":3005,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{},"injectables/OrigDatablocksService.html":{}}}],["schemas/policy.schema",{"_index":1947,"title":{},"body":{"interfaces/IPolicyFilter.html":{},"controllers/PoliciesController.html":{},"modules/PoliciesModule.html":{},"injectables/PoliciesService.html":{}}}],["schemas/proposal.schema",{"_index":3389,"title":{},"body":{"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{}}}],["schemas/published",{"_index":1919,"title":{},"body":{"interfaces/ICount.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{}}}],["schemas/role.schema",{"_index":3751,"title":{},"body":{"injectables/RolesService.html":{},"modules/UsersModule.html":{}}}],["schemas/sample.schema",{"_index":3816,"title":{},"body":{"modules/SamplesModule.html":{},"injectables/SamplesService.html":{}}}],["schemas/user",{"_index":1376,"title":{},"body":{"classes/CreateUserIdentityDto.html":{},"injectables/RolesService.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["schemas/user.schema",{"_index":4058,"title":{},"body":{"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["scicat",{"_index":1995,"title":{},"body":{"classes/Instrument.html":{},"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/PoliciesService.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["scicat,user",{"_index":4591,"title":{},"body":{"index.html":{}}}],["scicatuser",{"_index":1295,"title":{},"body":{"classes/CreatePublishedDataDto.html":{},"classes/PublishedData.html":{}}}],["scientific",{"_index":1852,"title":{},"body":{"injectables/FullQueryInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"classes/UpdateDatasetDto.html":{}}}],["scientific.foreach",{"_index":1854,"title":{},"body":{"injectables/FullQueryInterceptor.html":{}}}],["scientificmetadata",{"_index":970,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/DatasetsService.html":{},"injectables/FullQueryInterceptor.html":{},"classes/UpdateDatasetDto.html":{}}}],["scientificrelation",{"_index":1900,"title":{},"body":{"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"miscellaneous/enumerations.html":{}}}],["scope",{"_index":514,"title":{},"body":{"injectables/AttachmentsService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/DatasetsService.html":{},"injectables/OidcStrategy.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["scope.request",{"_index":526,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/DatasetsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["script",{"_index":3263,"title":{},"body":{"injectables/PoliciesService.html":{},"index.html":{}}}],["scripts",{"_index":4682,"title":{},"body":{"index.html":{}}}],["search",{"_index":2969,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"injectables/SamplesService.html":{},"index.html":{}}}],["searching",{"_index":2256,"title":{},"body":{"controllers/JobsController.html":{}}}],["seconds",{"_index":4613,"title":{},"body":{"index.html":{}}}],["secret",{"_index":695,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["secretorkey",{"_index":2528,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["see",{"_index":4072,"title":{},"body":{"controllers/UserIdentitiesController.html":{},"index.html":{}}}],["seen",{"_index":1431,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{}}}],["select",{"_index":4034,"title":{},"body":{"classes/User.html":{}}}],["selected",{"_index":2127,"title":{},"body":{"classes/Job.html":{}}}],["selected.'})@prop({type",{"_index":2130,"title":{},"body":{"classes/Job.html":{}}}],["semantic",{"_index":3924,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["semicolons.'})@isemail",{"_index":3905,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["semicolons.'})@isoptional()@isemail",{"_index":3962,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["semicolons.'})@isoptional()@isstring",{"_index":3957,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["semicolons.'})@isstring",{"_index":3960,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["send",{"_index":2416,"title":{},"body":{"injectables/JobsService.html":{}}}],["sendemail",{"_index":2335,"title":{},"body":{"injectables/JobsService.html":{}}}],["sendemail(to",{"_index":2356,"title":{},"body":{"injectables/JobsService.html":{}}}],["sender",{"_index":2810,"title":{},"body":{"injectables/LogbooksService.html":{},"classes/Message.html":{}}}],["sendfinishjobemail",{"_index":2336,"title":{},"body":{"injectables/JobsService.html":{}}}],["sendfinishjobemail(context",{"_index":2358,"title":{},"body":{"injectables/JobsService.html":{}}}],["sending",{"_index":2795,"title":{},"body":{"injectables/LogbooksService.html":{},"injectables/MailService.html":{}}}],["sendmail",{"_index":2819,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmail(to",{"_index":2823,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmessage",{"_index":2738,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["sendmessage(name",{"_index":2744,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["sendstartjobemail",{"_index":2337,"title":{},"body":{"injectables/JobsService.html":{}}}],["sendstartjobemail(context",{"_index":2361,"title":{},"body":{"injectables/JobsService.html":{}}}],["sent",{"_index":2227,"title":{},"body":{"controllers/JobsController.html":{},"injectables/LogbooksService.html":{},"classes/Policy.html":{},"index.html":{}}}],["sent:\\n",{"_index":2237,"title":{},"body":{"controllers/JobsController.html":{}}}],["separated",{"_index":3904,"title":{},"body":{"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["server",{"_index":1185,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/LifecycleClass.html":{},"classes/MeasurementPeriodClass.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["server.'})@isdatestring",{"_index":1176,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFileDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["server.'})@prop({type",{"_index":1447,"title":{},"body":{"classes/DataFile.html":{},"classes/MeasurementPeriodClass.html":{}}}],["service",{"_index":13,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["services",{"_index":4777,"title":{},"body":{"license.html":{}}}],["session",{"_index":703,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{},"index.html":{}}}],["set",{"_index":438,"title":{},"body":{"classes/Attachment.html":{},"modules/AttachmentsModule.html":{},"controllers/AuthController.html":{},"classes/Datablock.html":{},"modules/DatasetsModule.html":{},"modules/InstrumentsModule.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/LifecycleClass.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"modules/SamplesModule.html":{},"index.html":{}}}],["set([...currentgroups",{"_index":2540,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["set([role",{"_index":4346,"title":{},"body":{"injectables/UsersService.html":{}}}],["setting",{"_index":4064,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["settings",{"_index":1414,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{}}}],["settings.dto",{"_index":1406,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{},"classes/UpdateUserSettingsDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["settings.dto.ts",{"_index":1383,"title":{},"body":{"classes/CreateUserSettingsDto.html":{},"classes/UpdateUserSettingsDto.html":{}}}],["settings.dto.ts:11",{"_index":1389,"title":{},"body":{"classes/CreateUserSettingsDto.html":{}}}],["settings.dto.ts:14",{"_index":1390,"title":{},"body":{"classes/CreateUserSettingsDto.html":{}}}],["settings.dto.ts:5",{"_index":1391,"title":{},"body":{"classes/CreateUserSettingsDto.html":{}}}],["settings.dto.ts:8",{"_index":1387,"title":{},"body":{"classes/CreateUserSettingsDto.html":{}}}],["settings.interceptor",{"_index":4191,"title":{},"body":{"controllers/UsersController.html":{}}}],["settings.interceptor.ts",{"_index":1394,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{}}}],["settings.interceptor.ts:13",{"_index":1397,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{}}}],["settings.interceptor.ts:15",{"_index":1401,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{}}}],["settings.schema",{"_index":904,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["settings.schema.ts",{"_index":4118,"title":{},"body":{"classes/UserSettings.html":{},"miscellaneous/typealiases.html":{}}}],["settings.schema.ts:15",{"_index":4119,"title":{},"body":{"classes/UserSettings.html":{}}}],["settings.schema.ts:17",{"_index":4126,"title":{},"body":{"classes/UserSettings.html":{}}}],["settings.schema.ts:25",{"_index":4122,"title":{},"body":{"classes/UserSettings.html":{}}}],["settings.schema.ts:33",{"_index":4125,"title":{},"body":{"classes/UserSettings.html":{}}}],["settings.schema.ts:41",{"_index":4127,"title":{},"body":{"classes/UserSettings.html":{}}}],["settings.schema.ts:45",{"_index":4128,"title":{},"body":{"classes/UserSettings.html":{}}}],["setup",{"_index":4541,"title":{},"body":{"index.html":{}}}],["sha",{"_index":1426,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{}}}],["sha2",{"_index":1477,"title":{},"body":{"classes/Datablock.html":{},"classes/OrigDatablock.html":{}}}],["shall",{"_index":4766,"title":{},"body":{"license.html":{}}}],["shallow",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared",{"_index":3972,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["sharedwith",{"_index":966,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"interfaces/IDatasetFields.html":{},"classes/UpdateDatasetDto.html":{}}}],["short",{"_index":2601,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["shortcode",{"_index":1906,"title":{},"body":{"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{}}}],["show",{"_index":375,"title":{},"body":{"classes/Attachment.html":{}}}],["signandverifyoptions",{"_index":4394,"title":{},"body":{"injectables/UsersService.html":{}}}],["signandverifyoptions.expiresin",{"_index":4401,"title":{},"body":{"injectables/UsersService.html":{}}}],["signandverifyoptions.secret",{"_index":4406,"title":{},"body":{"injectables/UsersService.html":{}}}],["signoptions",{"_index":697,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["similar",{"_index":2652,"title":{},"body":{"classes/LifecycleClass.html":{},"index.html":{}}}],["similar.'})@prop({default",{"_index":2635,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["single",{"_index":1762,"title":{},"body":{"injectables/DatasetsService.html":{},"classes/UpdateDatasetDto.html":{}}}],["site",{"_index":1866,"title":{},"body":{"classes/HistoryClass.html":{},"index.html":{}}}],["size",{"_index":1043,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"injectables/JobsService.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"classes/PublishedData.html":{},"classes/UpdateDatasetDto.html":{}}}],["sizeofarchive",{"_index":1296,"title":{},"body":{"classes/CreatePublishedDataDto.html":{},"classes/PublishedData.html":{}}}],["skip",{"_index":1639,"title":{},"body":{"injectables/DatasetsService.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/IScientificFilter.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/LogbooksService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["skip(skip",{"_index":1645,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["slash",{"_index":4602,"title":{},"body":{"index.html":{}}}],["slashes",{"_index":3983,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["slice(0",{"_index":1725,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["small",{"_index":388,"title":{},"body":{"classes/Attachment.html":{},"classes/PublishedData.html":{}}}],["smtp",{"_index":4666,"title":{},"body":{"index.html":{}}}],["smtp_host",{"_index":4665,"title":{},"body":{"index.html":{}}}],["smtp_message_from",{"_index":4667,"title":{},"body":{"index.html":{}}}],["smtp_port",{"_index":4669,"title":{},"body":{"index.html":{}}}],["smtp_secure",{"_index":4670,"title":{},"body":{"index.html":{}}}],["smtpmessagefrom",{"_index":2331,"title":{},"body":{"injectables/JobsService.html":{}}}],["software",{"_index":4756,"title":{},"body":{"license.html":{}}}],["software/duo",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["some/path/to/sourcefolder",{"_index":3978,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["somecollections",{"_index":1703,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["sort",{"_index":1640,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/LogbooksService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["sort(sort",{"_index":1646,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["sorted",{"_index":2805,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["sorted.reverse",{"_index":2817,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["sortfield",{"_index":2788,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["sortfield.indexof",{"_index":2791,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["sortfield.split",{"_index":2804,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["sortmessages",{"_index":2801,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["sortmessages(res.data.messages",{"_index":2793,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"classes/Attachment.html":{},"modules/AttachmentsModule.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateInitialDatasetDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"modules/DatablocksModule.html":{},"injectables/DatablocksService.html":{},"classes/DatasetListDto.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"classes/HistoryClass.html":{},"injectables/HistoryInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IDatasetList.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/ISampleFields.html":{},"interfaces/IScientificFilter.html":{},"classes/InitialDataset.html":{},"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"injectables/InstrumentsService.html":{},"interfaces/JWTUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapAuthGuard.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Logbook.html":{},"controllers/LogbooksController.html":{},"modules/LogbooksModule.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"modules/PoliciesModule.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"modules/ProposalsModule.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"classes/QueryableClass.html":{},"injectables/RegisteredInterceptor.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"modules/SamplesModule.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"classes/TechniqueClass.html":{},"injectables/UTCTimeInterceptor.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatablockDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateInstrumentDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateOrigDatablockDto.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdatePublishedDataDto.html":{},"classes/UpdateSampleDto.html":{},"classes/UpdateUserIdentityDto.html":{},"classes/UpdateUserSettingsDto.html":{},"classes/UpdateWherePolicyDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"classes/UserIdentity.html":{},"interfaces/UserPayload.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["sourcefolder",{"_index":2397,"title":{},"body":{"injectables/JobsService.html":{},"classes/UpdateDatasetDto.html":{}}}],["sourcefolder.'})@isoptional()@isstring",{"_index":3931,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["sourcefolderhost",{"_index":3890,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["space",{"_index":4634,"title":{},"body":{"index.html":{}}}],["sparse",{"_index":383,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/TechniqueClass.html":{}}}],["spec.ts",{"_index":4385,"title":{},"body":{"injectables/UsersService.html":{}}}],["special",{"_index":406,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"license.html":{}}}],["specific",{"_index":1867,"title":{},"body":{"classes/HistoryClass.html":{},"license.html":{}}}],["specified",{"_index":1196,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{},"classes/Job.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{}}}],["specified'})@get('/:id",{"_index":3504,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["specified.'})@apiparam({name",{"_index":2959,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{}}}],["specify",{"_index":4585,"title":{},"body":{"index.html":{}}}],["split",{"_index":922,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/JobsService.html":{},"injectables/OidcAuthGuard.html":{},"injectables/PoliciesService.html":{}}}],["src/.../action.enum.ts",{"_index":4448,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../attachment.schema.ts",{"_index":4807,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../casl",{"_index":4806,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../configuration.ts",{"_index":4820,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../datablock.schema.ts",{"_index":4808,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../datafile.schema.ts",{"_index":4809,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../dataset",{"_index":4451,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../dataset.schema.ts",{"_index":4810,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../history.schema.ts",{"_index":4811,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../initial",{"_index":4812,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../instrument.schema.ts",{"_index":4813,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../job",{"_index":4449,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../job.schema.ts",{"_index":4814,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../lifecycle.schema.ts",{"_index":4815,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../logbook.schema.ts",{"_index":4816,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../main.ts",{"_index":4501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../measurement",{"_index":4817,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../message",{"_index":4818,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../message.schema.ts",{"_index":4819,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../origdatablock.schema.ts",{"_index":4821,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../policy",{"_index":4823,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../policy.schema.ts",{"_index":4822,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../proposal.schema.ts",{"_index":4824,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../published",{"_index":4503,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../relationship.schema.ts",{"_index":4825,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../role.enum.ts",{"_index":4452,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.schema.ts",{"_index":4826,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../sample",{"_index":4453,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../sample.schema.ts",{"_index":4827,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../scientific",{"_index":4455,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../technique.schema.ts",{"_index":4828,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user",{"_index":4830,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.schema.ts",{"_index":4829,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/admin/admin.controller.ts",{"_index":141,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:13",{"_index":148,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:19",{"_index":150,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.module.ts",{"_index":179,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin/admin.service.ts",{"_index":182,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:11",{"_index":184,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:7",{"_index":183,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/app.module.ts",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:109",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["src/attachments/attachments.module",{"_index":1545,"title":{},"body":{"modules/DatasetsModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{}}}],["src/attachments/attachments.module.ts",{"_index":477,"title":{},"body":{"modules/AttachmentsModule.html":{}}}],["src/attachments/attachments.service",{"_index":3529,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["src/attachments/attachments.service.ts",{"_index":489,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/attachments/attachments.service.ts:13",{"_index":497,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/attachments/attachments.service.ts:19",{"_index":501,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/attachments/attachments.service.ts:27",{"_index":504,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/attachments/attachments.service.ts:33",{"_index":508,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/attachments/attachments.service.ts:40",{"_index":513,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/attachments/attachments.service.ts:54",{"_index":510,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["src/attachments/dto/create",{"_index":999,"title":{},"body":{"classes/CreateAttachmentDto.html":{}}}],["src/attachments/dto/update",{"_index":3873,"title":{},"body":{"classes/UpdateAttachmentDto.html":{}}}],["src/attachments/schemas/attachment.schema",{"_index":876,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["src/attachments/schemas/attachment.schema.ts",{"_index":358,"title":{},"body":{"classes/Attachment.html":{},"miscellaneous/typealiases.html":{}}}],["src/attachments/schemas/attachment.schema.ts:23",{"_index":384,"title":{},"body":{"classes/Attachment.html":{}}}],["src/attachments/schemas/attachment.schema.ts:28",{"_index":373,"title":{},"body":{"classes/Attachment.html":{}}}],["src/attachments/schemas/attachment.schema.ts:36",{"_index":396,"title":{},"body":{"classes/Attachment.html":{}}}],["src/attachments/schemas/attachment.schema.ts:43",{"_index":377,"title":{},"body":{"classes/Attachment.html":{}}}],["src/attachments/schemas/attachment.schema.ts:47",{"_index":381,"title":{},"body":{"classes/Attachment.html":{}}}],["src/attachments/schemas/attachment.schema.ts:51",{"_index":385,"title":{},"body":{"classes/Attachment.html":{}}}],["src/attachments/schemas/attachment.schema.ts:55",{"_index":387,"title":{},"body":{"classes/Attachment.html":{}}}],["src/auth/access",{"_index":6,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/auth/auth.controller",{"_index":4194,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/auth/auth.controller.ts",{"_index":541,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:106",{"_index":594,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:122",{"_index":578,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:42",{"_index":565,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:57",{"_index":589,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:72",{"_index":561,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:81",{"_index":591,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:88",{"_index":568,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":3231,"title":{},"body":{"modules/PoliciesModule.html":{}}}],["src/auth/auth.module.ts",{"_index":669,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service",{"_index":4192,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["src/auth/auth.service.ts",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:13",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:41",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:55",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:81",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorators/allow",{"_index":156,"title":{},"body":{"controllers/AdminController.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{}}}],["src/auth/dto/credentials.dto",{"_index":4193,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/auth/dto/credentials.dto.ts",{"_index":1417,"title":{},"body":{"classes/CredentialsDto.html":{}}}],["src/auth/dto/credentials.dto.ts:5",{"_index":1419,"title":{},"body":{"classes/CredentialsDto.html":{}}}],["src/auth/dto/credentials.dto.ts:8",{"_index":1418,"title":{},"body":{"classes/CredentialsDto.html":{}}}],["src/auth/guards/jwt",{"_index":2498,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{}}}],["src/auth/guards/ldap.guard.ts",{"_index":2544,"title":{},"body":{"injectables/LdapAuthGuard.html":{}}}],["src/auth/guards/local",{"_index":2663,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"controllers/UsersController.html":{}}}],["src/auth/guards/oidc.guard.ts",{"_index":2906,"title":{},"body":{"injectables/OidcAuthGuard.html":{}}}],["src/auth/guards/oidc.guard.ts:11",{"_index":2910,"title":{},"body":{"injectables/OidcAuthGuard.html":{}}}],["src/auth/guards/oidc.guard.ts:5",{"_index":2908,"title":{},"body":{"injectables/OidcAuthGuard.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":3707,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:10",{"_index":3709,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:7",{"_index":3708,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/interfaces/jwt",{"_index":521,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"interfaces/JWTUser.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{},"controllers/UserIdentitiesController.html":{}}}],["src/auth/interfaces/userpayload.interface",{"_index":4317,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/auth/interfaces/userpayload.interface.ts",{"_index":4101,"title":{},"body":{"interfaces/UserPayload.html":{}}}],["src/auth/role.enum",{"_index":878,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["src/auth/role.enum.ts",{"_index":4491,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":2517,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:11",{"_index":2519,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:24",{"_index":2521,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/ldap.strategy.ts",{"_index":2546,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["src/auth/strategies/ldap.strategy.ts:123",{"_index":2550,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["src/auth/strategies/ldap.strategy.ts:16",{"_index":2548,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["src/auth/strategies/ldap.strategy.ts:25",{"_index":2551,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":2665,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:14",{"_index":2667,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:25",{"_index":2669,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/oidc.strategy.ts",{"_index":765,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["src/auth/strategies/oidc.strategy.ts:135",{"_index":2921,"title":{},"body":{"injectables/OidcStrategy.html":{}}}],["src/auth/strategies/oidc.strategy.ts:144",{"_index":2922,"title":{},"body":{"injectables/OidcStrategy.html":{}}}],["src/auth/strategies/oidc.strategy.ts:27",{"_index":767,"title":{},"body":{"classes/BuildOpenIdClient.html":{}}}],["src/auth/strategies/oidc.strategy.ts:29",{"_index":768,"title":{},"body":{"classes/BuildOpenIdClient.html":{}}}],["src/auth/strategies/oidc.strategy.ts:44",{"_index":2924,"title":{},"body":{"injectables/OidcStrategy.html":{}}}],["src/auth/strategies/oidc.strategy.ts:45",{"_index":2920,"title":{},"body":{"injectables/OidcStrategy.html":{}}}],["src/auth/strategies/oidc.strategy.ts:68",{"_index":2923,"title":{},"body":{"injectables/OidcStrategy.html":{}}}],["src/casl/action.enum",{"_index":2052,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["src/casl/action.enum.ts",{"_index":4457,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/casl/casl",{"_index":685,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CaslAbilityFactory.html":{},"modules/DatasetsModule.html":{},"controllers/InstrumentsController.html":{},"modules/InstrumentsModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/LogbooksController.html":{},"modules/LogbooksModule.html":{},"controllers/OrigDatablocksController.html":{},"modules/OrigDatablocksModule.html":{},"controllers/PoliciesController.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/typealiases.html":{}}}],["src/casl/casl.module.ts",{"_index":991,"title":{},"body":{"modules/CaslModule.html":{}}}],["src/casl/decorators/check",{"_index":2050,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["src/casl/guards/policies.guard",{"_index":2048,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["src/casl/guards/policies.guard.ts",{"_index":3204,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["src/casl/guards/policies.guard.ts:14",{"_index":3209,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["src/casl/guards/policies.guard.ts:30",{"_index":3211,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["src/casl/guards/policies.guard.ts:8",{"_index":3207,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["src/casl/interfaces/policy",{"_index":1949,"title":{},"body":{"interfaces/IPolicyHandler.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/common.module",{"_index":2327,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/common/common.module.ts",{"_index":997,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/dto/datafile.dto",{"_index":1087,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{}}}],["src/common/dto/datafile.dto.ts",{"_index":1457,"title":{},"body":{"classes/DataFileDto.html":{}}}],["src/common/dto/datafile.dto.ts:11",{"_index":1463,"title":{},"body":{"classes/DataFileDto.html":{}}}],["src/common/dto/datafile.dto.ts:19",{"_index":1467,"title":{},"body":{"classes/DataFileDto.html":{}}}],["src/common/dto/datafile.dto.ts:28",{"_index":1468,"title":{},"body":{"classes/DataFileDto.html":{}}}],["src/common/dto/datafile.dto.ts:38",{"_index":1459,"title":{},"body":{"classes/DataFileDto.html":{}}}],["src/common/dto/datafile.dto.ts:47",{"_index":1469,"title":{},"body":{"classes/DataFileDto.html":{}}}],["src/common/dto/datafile.dto.ts:56",{"_index":1461,"title":{},"body":{"classes/DataFileDto.html":{}}}],["src/common/dto/datafile.dto.ts:65",{"_index":1465,"title":{},"body":{"classes/DataFileDto.html":{}}}],["src/common/dto/ownable.dto",{"_index":1020,"title":{},"body":{"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{}}}],["src/common/dto/ownable.dto.ts",{"_index":3111,"title":{},"body":{"classes/OwnableDto.html":{}}}],["src/common/dto/ownable.dto.ts:11",{"_index":3114,"title":{},"body":{"classes/OwnableDto.html":{}}}],["src/common/dto/ownable.dto.ts:22",{"_index":3112,"title":{},"body":{"classes/OwnableDto.html":{}}}],["src/common/dto/ownable.dto.ts:31",{"_index":3113,"title":{},"body":{"classes/OwnableDto.html":{}}}],["src/common/email",{"_index":2488,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/common/interceptors/format",{"_index":1826,"title":{},"body":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"controllers/InstrumentsController.html":{}}}],["src/common/interceptors/history.interceptor",{"_index":3155,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["src/common/interceptors/history.interceptor.ts",{"_index":1889,"title":{},"body":{"injectables/HistoryInterceptor.html":{}}}],["src/common/interceptors/history.interceptor.ts:12",{"_index":1891,"title":{},"body":{"injectables/HistoryInterceptor.html":{}}}],["src/common/interceptors/history.interceptor.ts:17",{"_index":1892,"title":{},"body":{"injectables/HistoryInterceptor.html":{}}}],["src/common/interceptors/multi",{"_index":2891,"title":{},"body":{"injectables/MultiUTCTimeInterceptor.html":{}}}],["src/common/interceptors/utc",{"_index":3868,"title":{},"body":{"injectables/UTCTimeInterceptor.html":{}}}],["src/common/interfaces/common.interface",{"_index":1614,"title":{},"body":{"injectables/DatasetsService.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/ISampleFields.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/ProposalsService.html":{},"injectables/SamplesService.html":{}}}],["src/common/interfaces/common.interface.ts",{"_index":1899,"title":{},"body":{"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{}}}],["src/common/mail.service",{"_index":2373,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/common/mail.service.ts",{"_index":2818,"title":{},"body":{"injectables/MailService.html":{}}}],["src/common/mail.service.ts:5",{"_index":2822,"title":{},"body":{"injectables/MailService.html":{}}}],["src/common/mail.service.ts:8",{"_index":2826,"title":{},"body":{"injectables/MailService.html":{}}}],["src/common/pipes/filter.pipe",{"_index":3156,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["src/common/pipes/filter.pipe.ts",{"_index":1796,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["src/common/pipes/filter.pipe.ts:11",{"_index":1801,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["src/common/schemas/datafile.schema",{"_index":1088,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/Datablock.html":{}}}],["src/common/schemas/datafile.schema.ts",{"_index":1420,"title":{},"body":{"classes/DataFile.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/schemas/datafile.schema.ts:17",{"_index":1437,"title":{},"body":{"classes/DataFile.html":{}}}],["src/common/schemas/datafile.schema.ts:28",{"_index":1444,"title":{},"body":{"classes/DataFile.html":{}}}],["src/common/schemas/datafile.schema.ts:40",{"_index":1448,"title":{},"body":{"classes/DataFile.html":{}}}],["src/common/schemas/datafile.schema.ts:52",{"_index":1430,"title":{},"body":{"classes/DataFile.html":{}}}],["src/common/schemas/datafile.schema.ts:63",{"_index":1449,"title":{},"body":{"classes/DataFile.html":{}}}],["src/common/schemas/datafile.schema.ts:74",{"_index":1433,"title":{},"body":{"classes/DataFile.html":{}}}],["src/common/schemas/datafile.schema.ts:85",{"_index":1441,"title":{},"body":{"classes/DataFile.html":{}}}],["src/common/schemas/ownable.schema",{"_index":462,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["src/common/schemas/ownable.schema.ts",{"_index":3105,"title":{},"body":{"classes/OwnableClass.html":{}}}],["src/common/schemas/ownable.schema.ts:15",{"_index":3108,"title":{},"body":{"classes/OwnableClass.html":{}}}],["src/common/schemas/ownable.schema.ts:26",{"_index":3106,"title":{},"body":{"classes/OwnableClass.html":{}}}],["src/common/schemas/ownable.schema.ts:38",{"_index":3107,"title":{},"body":{"classes/OwnableClass.html":{}}}],["src/common/schemas/queryable.schema",{"_index":2859,"title":{},"body":{"classes/MeasurementPeriodClass.html":{}}}],["src/common/schemas/queryable.schema.ts",{"_index":3676,"title":{},"body":{"classes/QueryableClass.html":{}}}],["src/common/schemas/queryable.schema.ts:15",{"_index":3678,"title":{},"body":{"classes/QueryableClass.html":{}}}],["src/common/schemas/queryable.schema.ts:26",{"_index":3680,"title":{},"body":{"classes/QueryableClass.html":{}}}],["src/common/schemas/queryable.schema.ts:40",{"_index":3677,"title":{},"body":{"classes/QueryableClass.html":{}}}],["src/common/schemas/queryable.schema.ts:50",{"_index":3679,"title":{},"body":{"classes/QueryableClass.html":{}}}],["src/common/scientific",{"_index":4495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/utils",{"_index":525,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/AuthService.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/FullQueryInterceptor.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/LogbooksService.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["src/config/configuration",{"_index":616,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"controllers/JobsController.html":{},"injectables/OidcStrategy.html":{}}}],["src/config/configuration.ts",{"_index":4576,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["src/config/doiconfig.local.json",{"_index":3534,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["src/datablocks/datablocks.module",{"_index":1547,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["src/datablocks/datablocks.module.ts",{"_index":1499,"title":{},"body":{"modules/DatablocksModule.html":{}}}],["src/datablocks/datablocks.service.ts",{"_index":1504,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["src/datablocks/datablocks.service.ts:13",{"_index":1506,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["src/datablocks/datablocks.service.ts:20",{"_index":1509,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["src/datablocks/datablocks.service.ts:28",{"_index":1510,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["src/datablocks/datablocks.service.ts:32",{"_index":1511,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["src/datablocks/datablocks.service.ts:38",{"_index":1516,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["src/datablocks/datablocks.service.ts:54",{"_index":1513,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["src/datablocks/dto/create",{"_index":1037,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{}}}],["src/datablocks/dto/update",{"_index":3880,"title":{},"body":{"classes/UpdateDatablockDto.html":{}}}],["src/datablocks/interfaces/datablocks.interface.ts",{"_index":1924,"title":{},"body":{"interfaces/IDatablockFields.html":{}}}],["src/datablocks/schemas/datablock.schema",{"_index":880,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{}}}],["src/datablocks/schemas/datablock.schema.ts",{"_index":1470,"title":{},"body":{"classes/Datablock.html":{},"miscellaneous/typealiases.html":{}}}],["src/datablocks/schemas/datablock.schema.ts:108",{"_index":1482,"title":{},"body":{"classes/Datablock.html":{}}}],["src/datablocks/schemas/datablock.schema.ts:26",{"_index":1471,"title":{},"body":{"classes/Datablock.html":{}}}],["src/datablocks/schemas/datablock.schema.ts:34",{"_index":1484,"title":{},"body":{"classes/Datablock.html":{}}}],["src/datablocks/schemas/datablock.schema.ts:48",{"_index":1473,"title":{},"body":{"classes/Datablock.html":{}}}],["src/datablocks/schemas/datablock.schema.ts:60",{"_index":1488,"title":{},"body":{"classes/Datablock.html":{}}}],["src/datablocks/schemas/datablock.schema.ts:72",{"_index":1486,"title":{},"body":{"classes/Datablock.html":{}}}],["src/datablocks/schemas/datablock.schema.ts:84",{"_index":1479,"title":{},"body":{"classes/Datablock.html":{}}}],["src/datablocks/schemas/datablock.schema.ts:96",{"_index":1490,"title":{},"body":{"classes/Datablock.html":{}}}],["src/datasets/dataset",{"_index":4490,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/datasets/datasets.module",{"_index":2326,"title":{},"body":{"modules/JobsModule.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{}}}],["src/datasets/datasets.module.ts",{"_index":1538,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["src/datasets/datasets.service",{"_index":1893,"title":{},"body":{"injectables/HistoryInterceptor.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{}}}],["src/datasets/datasets.service.ts",{"_index":1561,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["src/datasets/datasets.service.ts:104",{"_index":1599,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["src/datasets/datasets.service.ts:120",{"_index":1609,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["src/datasets/datasets.service.ts:129",{"_index":1596,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["src/datasets/datasets.service.ts:138",{"_index":1577,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["src/datasets/datasets.service.ts:149",{"_index":1589,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["src/datasets/datasets.service.ts:191",{"_index":1595,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["src/datasets/datasets.service.ts:226",{"_index":1584,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["src/datasets/datasets.service.ts:231",{"_index":1607,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["src/datasets/datasets.service.ts:293",{"_index":1605,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["src/datasets/datasets.service.ts:358",{"_index":1611,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["src/datasets/datasets.service.ts:43",{"_index":1575,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["src/datasets/datasets.service.ts:53",{"_index":1580,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["src/datasets/datasets.service.ts:63",{"_index":1582,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["src/datasets/datasets.service.ts:81",{"_index":1603,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["src/datasets/dto/create",{"_index":1321,"title":{},"body":{"classes/CreateRelationshipDto.html":{},"classes/CreateTechniqueDto.html":{}}}],["src/datasets/dto/update",{"_index":3009,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["src/datasets/interceptors/datasets",{"_index":2834,"title":{},"body":{"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{}}}],["src/datasets/interceptors/fullquery.interceptor.ts",{"_index":1843,"title":{},"body":{"injectables/FullQueryInterceptor.html":{}}}],["src/datasets/interceptors/fullquery.interceptor.ts:15",{"_index":1844,"title":{},"body":{"injectables/FullQueryInterceptor.html":{}}}],["src/datasets/interfaces/dataset",{"_index":1925,"title":{},"body":{"interfaces/IDatasetFields.html":{},"injectables/JobsService.html":{}}}],["src/datasets/schemas/dataset.schema",{"_index":882,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/JobsService.html":{},"controllers/PublishedDataController.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"controllers/UsersController.html":{}}}],["src/datasets/schemas/dataset.schema.ts",{"_index":4831,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/datasets/schemas/history.schema.ts",{"_index":1865,"title":{},"body":{"classes/HistoryClass.html":{},"miscellaneous/typealiases.html":{}}}],["src/datasets/schemas/history.schema.ts:36",{"_index":1869,"title":{},"body":{"classes/HistoryClass.html":{}}}],["src/datasets/schemas/history.schema.ts:60",{"_index":1871,"title":{},"body":{"classes/HistoryClass.html":{}}}],["src/datasets/schemas/history.schema.ts:72",{"_index":1874,"title":{},"body":{"classes/HistoryClass.html":{}}}],["src/datasets/schemas/lifecycle.schema.ts",{"_index":2578,"title":{},"body":{"classes/LifecycleClass.html":{},"miscellaneous/typealiases.html":{}}}],["src/datasets/schemas/lifecycle.schema.ts:10",{"_index":2619,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["src/datasets/schemas/lifecycle.schema.ts:103",{"_index":2630,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["src/datasets/schemas/lifecycle.schema.ts:113",{"_index":2606,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["src/datasets/schemas/lifecycle.schema.ts:123",{"_index":2650,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["src/datasets/schemas/lifecycle.schema.ts:133",{"_index":2600,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["src/datasets/schemas/lifecycle.schema.ts:143",{"_index":2645,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["src/datasets/schemas/lifecycle.schema.ts:151",{"_index":2617,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["src/datasets/schemas/lifecycle.schema.ts:161",{"_index":2644,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["src/datasets/schemas/lifecycle.schema.ts:19",{"_index":2589,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["src/datasets/schemas/lifecycle.schema.ts:28",{"_index":2641,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["src/datasets/schemas/lifecycle.schema.ts:37",{"_index":2636,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["src/datasets/schemas/lifecycle.schema.ts:46",{"_index":2610,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["src/datasets/schemas/lifecycle.schema.ts:66",{"_index":2597,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["src/datasets/schemas/lifecycle.schema.ts:86",{"_index":2614,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["src/datasets/schemas/lifecycle.schema.ts:94",{"_index":2638,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["src/datasets/schemas/relationship.schema.ts",{"_index":3689,"title":{},"body":{"classes/RelationshipClass.html":{},"miscellaneous/typealiases.html":{}}}],["src/datasets/schemas/relationship.schema.ts:15",{"_index":3690,"title":{},"body":{"classes/RelationshipClass.html":{}}}],["src/datasets/schemas/relationship.schema.ts:23",{"_index":3692,"title":{},"body":{"classes/RelationshipClass.html":{}}}],["src/datasets/schemas/technique.schema.ts",{"_index":3859,"title":{},"body":{"classes/TechniqueClass.html":{},"miscellaneous/typealiases.html":{}}}],["src/datasets/schemas/technique.schema.ts:16",{"_index":3863,"title":{},"body":{"classes/TechniqueClass.html":{}}}],["src/datasets/schemas/technique.schema.ts:24",{"_index":3861,"title":{},"body":{"classes/TechniqueClass.html":{}}}],["src/initial",{"_index":1104,"title":{},"body":{"classes/CreateInitialDatasetDto.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"classes/InitialDataset.html":{},"modules/InitialDatasetsModule.html":{},"injectables/InitialDatasetsService.html":{},"miscellaneous/typealiases.html":{}}}],["src/instruments/dto/create",{"_index":1109,"title":{},"body":{"classes/CreateInstrumentDto.html":{}}}],["src/instruments/dto/update",{"_index":4005,"title":{},"body":{"classes/UpdateInstrumentDto.html":{}}}],["src/instruments/instruments.controller.ts",{"_index":2006,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["src/instruments/instruments.controller.ts:110",{"_index":2030,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["src/instruments/instruments.controller.ts:121",{"_index":2020,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["src/instruments/instruments.controller.ts:133",{"_index":2037,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["src/instruments/instruments.controller.ts:156",{"_index":2033,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["src/instruments/instruments.controller.ts:52",{"_index":2012,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["src/instruments/instruments.controller.ts:78",{"_index":2017,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["src/instruments/instruments.module.ts",{"_index":2095,"title":{},"body":{"modules/InstrumentsModule.html":{}}}],["src/instruments/instruments.service.ts",{"_index":2098,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["src/instruments/instruments.service.ts:11",{"_index":2100,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["src/instruments/instruments.service.ts:17",{"_index":2102,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["src/instruments/instruments.service.ts:22",{"_index":2103,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["src/instruments/instruments.service.ts:39",{"_index":2104,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["src/instruments/instruments.service.ts:49",{"_index":2106,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["src/instruments/instruments.service.ts:58",{"_index":2105,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["src/instruments/schemas/instrument.schema",{"_index":884,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["src/instruments/schemas/instrument.schema.ts",{"_index":1985,"title":{},"body":{"classes/Instrument.html":{},"miscellaneous/typealiases.html":{}}}],["src/instruments/schemas/instrument.schema.ts:33",{"_index":1994,"title":{},"body":{"classes/Instrument.html":{}}}],["src/instruments/schemas/instrument.schema.ts:38",{"_index":1986,"title":{},"body":{"classes/Instrument.html":{}}}],["src/instruments/schemas/instrument.schema.ts:51",{"_index":1997,"title":{},"body":{"classes/Instrument.html":{}}}],["src/instruments/schemas/instrument.schema.ts:63",{"_index":1993,"title":{},"body":{"classes/Instrument.html":{}}}],["src/instruments/schemas/instrument.schema.ts:76",{"_index":1988,"title":{},"body":{"classes/Instrument.html":{}}}],["src/jobs/dto/create",{"_index":1122,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["src/jobs/dto/dataset",{"_index":1527,"title":{},"body":{"classes/DatasetListDto.html":{}}}],["src/jobs/dto/update",{"_index":4007,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["src/jobs/interfaces/dataset",{"_index":1935,"title":{},"body":{"interfaces/IDatasetList.html":{}}}],["src/jobs/job",{"_index":4489,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":2166,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:159",{"_index":2188,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:257",{"_index":2207,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:272",{"_index":2192,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:298",{"_index":2193,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:309",{"_index":2200,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:322",{"_index":2197,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:335",{"_index":2195,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:342",{"_index":2205,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:361",{"_index":2202,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:45",{"_index":2201,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:57",{"_index":2173,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:98",{"_index":2176,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":2324,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":2329,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:101",{"_index":2363,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:144",{"_index":2360,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:243",{"_index":2354,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:27",{"_index":2366,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:28",{"_index":2339,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:282",{"_index":2352,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:321",{"_index":2344,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:365",{"_index":2357,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:40",{"_index":2346,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:45",{"_index":2347,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:59",{"_index":2350,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:69",{"_index":2349,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:83",{"_index":2348,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:87",{"_index":2364,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:96",{"_index":2355,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schema",{"_index":886,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["src/jobs/schemas/job.schema.ts",{"_index":2118,"title":{},"body":{"classes/Job.html":{},"miscellaneous/typealiases.html":{}}}],["src/jobs/schemas/job.schema.ts:23",{"_index":2120,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:25",{"_index":2140,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:31",{"_index":2135,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:40",{"_index":2153,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:47",{"_index":2123,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:54",{"_index":2139,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:61",{"_index":2145,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:65",{"_index":2150,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:72",{"_index":2131,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:76",{"_index":2148,"title":{},"body":{"classes/Job.html":{}}}],["src/logbooks/interceptors/users",{"_index":4241,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["src/logbooks/logbooks.controller.ts",{"_index":2702,"title":{},"body":{"controllers/LogbooksController.html":{}}}],["src/logbooks/logbooks.controller.ts:28",{"_index":2706,"title":{},"body":{"controllers/LogbooksController.html":{}}}],["src/logbooks/logbooks.controller.ts:36",{"_index":2709,"title":{},"body":{"controllers/LogbooksController.html":{}}}],["src/logbooks/logbooks.module",{"_index":1548,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["src/logbooks/logbooks.module.ts",{"_index":2727,"title":{},"body":{"modules/LogbooksModule.html":{}}}],["src/logbooks/logbooks.service",{"_index":1619,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["src/logbooks/logbooks.service.ts",{"_index":2736,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["src/logbooks/logbooks.service.ts:128",{"_index":2745,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["src/logbooks/logbooks.service.ts:15",{"_index":2747,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["src/logbooks/logbooks.service.ts:16",{"_index":2746,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["src/logbooks/logbooks.service.ts:17",{"_index":2748,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["src/logbooks/logbooks.service.ts:18",{"_index":2739,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["src/logbooks/logbooks.service.ts:30",{"_index":2743,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["src/logbooks/logbooks.service.ts:43",{"_index":2740,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["src/logbooks/logbooks.service.ts:83",{"_index":2741,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["src/logbooks/schemas/logbook.schema",{"_index":888,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["src/logbooks/schemas/logbook.schema.ts",{"_index":2685,"title":{},"body":{"classes/Logbook.html":{},"miscellaneous/typealiases.html":{}}}],["src/logbooks/schemas/logbook.schema.ts:12",{"_index":2691,"title":{},"body":{"classes/Logbook.html":{}}}],["src/logbooks/schemas/logbook.schema.ts:16",{"_index":2692,"title":{},"body":{"classes/Logbook.html":{}}}],["src/logbooks/schemas/logbook.schema.ts:20",{"_index":2689,"title":{},"body":{"classes/Logbook.html":{}}}],["src/logbooks/schemas/message",{"_index":2880,"title":{},"body":{"classes/MessageContent.html":{},"miscellaneous/typealiases.html":{}}}],["src/logbooks/schemas/message.schema.ts",{"_index":2863,"title":{},"body":{"classes/Message.html":{},"miscellaneous/typealiases.html":{}}}],["src/logbooks/schemas/message.schema.ts:10",{"_index":2869,"title":{},"body":{"classes/Message.html":{}}}],["src/logbooks/schemas/message.schema.ts:13",{"_index":2870,"title":{},"body":{"classes/Message.html":{}}}],["src/logbooks/schemas/message.schema.ts:16",{"_index":2871,"title":{},"body":{"classes/Message.html":{}}}],["src/logbooks/schemas/message.schema.ts:19",{"_index":2872,"title":{},"body":{"classes/Message.html":{}}}],["src/logbooks/schemas/message.schema.ts:22",{"_index":2873,"title":{},"body":{"classes/Message.html":{}}}],["src/logbooks/schemas/message.schema.ts:29",{"_index":2875,"title":{},"body":{"classes/Message.html":{}}}],["src/main.ts",{"_index":4504,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/origdatablocks/dto/create",{"_index":1099,"title":{},"body":{"classes/CreateDatasetOrigDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{}}}],["src/origdatablocks/dto/update",{"_index":4009,"title":{},"body":{"classes/UpdateOrigDatablockDto.html":{}}}],["src/origdatablocks/interfaces/origdatablocks.interface.ts",{"_index":1943,"title":{},"body":{"interfaces/IOrigDatablockFields.html":{}}}],["src/origdatablocks/origdatablocks.controller.ts",{"_index":2938,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["src/origdatablocks/origdatablocks.controller.ts:109",{"_index":3001,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["src/origdatablocks/origdatablocks.controller.ts:149",{"_index":2990,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["src/origdatablocks/origdatablocks.controller.ts:190",{"_index":2956,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["src/origdatablocks/origdatablocks.controller.ts:217",{"_index":2978,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["src/origdatablocks/origdatablocks.controller.ts:249",{"_index":2981,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["src/origdatablocks/origdatablocks.controller.ts:266",{"_index":2962,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["src/origdatablocks/origdatablocks.controller.ts:282",{"_index":2965,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["src/origdatablocks/origdatablocks.controller.ts:317",{"_index":2961,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["src/origdatablocks/origdatablocks.controller.ts:347",{"_index":2999,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["src/origdatablocks/origdatablocks.controller.ts:381",{"_index":2994,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["src/origdatablocks/origdatablocks.controller.ts:77",{"_index":2953,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["src/origdatablocks/origdatablocks.module",{"_index":1546,"title":{},"body":{"modules/DatasetsModule.html":{},"modules/JobsModule.html":{}}}],["src/origdatablocks/origdatablocks.module.ts",{"_index":3063,"title":{},"body":{"modules/OrigDatablocksModule.html":{}}}],["src/origdatablocks/origdatablocks.service",{"_index":2216,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/origdatablocks/origdatablocks.service.ts",{"_index":3066,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["src/origdatablocks/origdatablocks.service.ts:115",{"_index":3075,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["src/origdatablocks/origdatablocks.service.ts:129",{"_index":3080,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["src/origdatablocks/origdatablocks.service.ts:143",{"_index":3079,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["src/origdatablocks/origdatablocks.service.ts:25",{"_index":3069,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["src/origdatablocks/origdatablocks.service.ts:32",{"_index":3071,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["src/origdatablocks/origdatablocks.service.ts:42",{"_index":3072,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["src/origdatablocks/origdatablocks.service.ts:61",{"_index":3073,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["src/origdatablocks/origdatablocks.service.ts:67",{"_index":3076,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["src/origdatablocks/origdatablocks.service.ts:81",{"_index":3078,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["src/origdatablocks/schemas/origdatablock.schema",{"_index":890,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{}}}],["src/origdatablocks/schemas/origdatablock.schema.ts",{"_index":2925,"title":{},"body":{"classes/OrigDatablock.html":{},"miscellaneous/typealiases.html":{}}}],["src/origdatablocks/schemas/origdatablock.schema.ts:27",{"_index":2926,"title":{},"body":{"classes/OrigDatablock.html":{}}}],["src/origdatablocks/schemas/origdatablock.schema.ts:35",{"_index":2930,"title":{},"body":{"classes/OrigDatablock.html":{}}}],["src/origdatablocks/schemas/origdatablock.schema.ts:47",{"_index":2932,"title":{},"body":{"classes/OrigDatablock.html":{}}}],["src/origdatablocks/schemas/origdatablock.schema.ts:59",{"_index":2927,"title":{},"body":{"classes/OrigDatablock.html":{}}}],["src/origdatablocks/schemas/origdatablock.schema.ts:71",{"_index":2929,"title":{},"body":{"classes/OrigDatablock.html":{}}}],["src/policies/dto/create",{"_index":1207,"title":{},"body":{"classes/CreatePolicyDto.html":{}}}],["src/policies/dto/update",{"_index":4010,"title":{},"body":{"classes/UpdatePolicyDto.html":{},"classes/UpdateWherePolicyDto.html":{}}}],["src/policies/interfaces/policy",{"_index":1945,"title":{},"body":{"interfaces/IPolicyFilter.html":{}}}],["src/policies/policies.controller.ts",{"_index":3126,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["src/policies/policies.controller.ts:107",{"_index":3134,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["src/policies/policies.controller.ts:120",{"_index":3138,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["src/policies/policies.controller.ts:138",{"_index":3132,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["src/policies/policies.controller.ts:148",{"_index":3151,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["src/policies/policies.controller.ts:158",{"_index":3139,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["src/policies/policies.controller.ts:165",{"_index":3144,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["src/policies/policies.controller.ts:175",{"_index":3142,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["src/policies/policies.controller.ts:46",{"_index":3141,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["src/policies/policies.controller.ts:80",{"_index":3147,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["src/policies/policies.module",{"_index":1551,"title":{},"body":{"modules/DatasetsModule.html":{},"modules/JobsModule.html":{}}}],["src/policies/policies.module.ts",{"_index":3228,"title":{},"body":{"modules/PoliciesModule.html":{}}}],["src/policies/policies.service",{"_index":1550,"title":{},"body":{"modules/DatasetsModule.html":{},"injectables/JobsService.html":{}}}],["src/policies/policies.service.ts",{"_index":3234,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["src/policies/policies.service.ts:101",{"_index":3246,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["src/policies/policies.service.ts:124",{"_index":3244,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["src/policies/policies.service.ts:129",{"_index":3247,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["src/policies/policies.service.ts:133",{"_index":3250,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["src/policies/policies.service.ts:145",{"_index":3249,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["src/policies/policies.service.ts:149",{"_index":3252,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["src/policies/policies.service.ts:217",{"_index":3243,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["src/policies/policies.service.ts:24",{"_index":3239,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["src/policies/policies.service.ts:261",{"_index":3255,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["src/policies/policies.service.ts:32",{"_index":3248,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["src/policies/policies.service.ts:83",{"_index":3245,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["src/policies/schemas/policy.schema",{"_index":892,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/JobsService.html":{}}}],["src/policies/schemas/policy.schema.ts",{"_index":3315,"title":{},"body":{"classes/Policy.html":{},"miscellaneous/typealiases.html":{}}}],["src/policies/schemas/policy.schema.ts:19",{"_index":3317,"title":{},"body":{"classes/Policy.html":{}}}],["src/policies/schemas/policy.schema.ts:26",{"_index":3338,"title":{},"body":{"classes/Policy.html":{}}}],["src/policies/schemas/policy.schema.ts:33",{"_index":3351,"title":{},"body":{"classes/Policy.html":{}}}],["src/policies/schemas/policy.schema.ts:40",{"_index":3327,"title":{},"body":{"classes/Policy.html":{}}}],["src/policies/schemas/policy.schema.ts:47",{"_index":3331,"title":{},"body":{"classes/Policy.html":{}}}],["src/policies/schemas/policy.schema.ts:54",{"_index":3320,"title":{},"body":{"classes/Policy.html":{}}}],["src/policies/schemas/policy.schema.ts:61",{"_index":3324,"title":{},"body":{"classes/Policy.html":{}}}],["src/policies/schemas/policy.schema.ts:68",{"_index":3339,"title":{},"body":{"classes/Policy.html":{}}}],["src/policies/schemas/policy.schema.ts:75",{"_index":3340,"title":{},"body":{"classes/Policy.html":{}}}],["src/policies/schemas/policy.schema.ts:82",{"_index":3335,"title":{},"body":{"classes/Policy.html":{}}}],["src/proposals/dto/create",{"_index":1149,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateProposalDto.html":{}}}],["src/proposals/dto/update",{"_index":4012,"title":{},"body":{"classes/UpdateProposalDto.html":{}}}],["src/proposals/interfaces/proposal",{"_index":1938,"title":{},"body":{"interfaces/IDateRange.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{}}}],["src/proposals/proposals.module",{"_index":2730,"title":{},"body":{"modules/LogbooksModule.html":{},"modules/PublishedDataModule.html":{}}}],["src/proposals/proposals.module.ts",{"_index":3385,"title":{},"body":{"modules/ProposalsModule.html":{}}}],["src/proposals/proposals.service",{"_index":3528,"title":{},"body":{"controllers/PublishedDataController.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["src/proposals/proposals.service.ts",{"_index":3392,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["src/proposals/proposals.service.ts:101",{"_index":3402,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["src/proposals/proposals.service.ts:21",{"_index":3394,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["src/proposals/proposals.service.ts:28",{"_index":3397,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["src/proposals/proposals.service.ts:36",{"_index":3398,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["src/proposals/proposals.service.ts:50",{"_index":3401,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["src/proposals/proposals.service.ts:64",{"_index":3400,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["src/proposals/proposals.service.ts:78",{"_index":3399,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["src/proposals/proposals.service.ts:84",{"_index":3404,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["src/proposals/schemas/measurement",{"_index":2851,"title":{},"body":{"classes/MeasurementPeriodClass.html":{},"miscellaneous/typealiases.html":{}}}],["src/proposals/schemas/proposal.schema",{"_index":894,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["src/proposals/schemas/proposal.schema.ts",{"_index":3355,"title":{},"body":{"classes/ProposalClass.html":{},"miscellaneous/typealiases.html":{}}}],["src/proposals/schemas/proposal.schema.ts:106",{"_index":3364,"title":{},"body":{"classes/ProposalClass.html":{}}}],["src/proposals/schemas/proposal.schema.ts:117",{"_index":3376,"title":{},"body":{"classes/ProposalClass.html":{}}}],["src/proposals/schemas/proposal.schema.ts:128",{"_index":3358,"title":{},"body":{"classes/ProposalClass.html":{}}}],["src/proposals/schemas/proposal.schema.ts:139",{"_index":3374,"title":{},"body":{"classes/ProposalClass.html":{}}}],["src/proposals/schemas/proposal.schema.ts:150",{"_index":3362,"title":{},"body":{"classes/ProposalClass.html":{}}}],["src/proposals/schemas/proposal.schema.ts:163",{"_index":3366,"title":{},"body":{"classes/ProposalClass.html":{}}}],["src/proposals/schemas/proposal.schema.ts:34",{"_index":3372,"title":{},"body":{"classes/ProposalClass.html":{}}}],["src/proposals/schemas/proposal.schema.ts:39",{"_index":3356,"title":{},"body":{"classes/ProposalClass.html":{}}}],["src/proposals/schemas/proposal.schema.ts:51",{"_index":3368,"title":{},"body":{"classes/ProposalClass.html":{}}}],["src/proposals/schemas/proposal.schema.ts:62",{"_index":3369,"title":{},"body":{"classes/ProposalClass.html":{}}}],["src/proposals/schemas/proposal.schema.ts:73",{"_index":3370,"title":{},"body":{"classes/ProposalClass.html":{}}}],["src/proposals/schemas/proposal.schema.ts:84",{"_index":3360,"title":{},"body":{"classes/ProposalClass.html":{}}}],["src/proposals/schemas/proposal.schema.ts:95",{"_index":3363,"title":{},"body":{"classes/ProposalClass.html":{}}}],["src/published",{"_index":896,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/CreatePublishedDataDto.html":{},"interfaces/ICount.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"modules/PublishedDataModule.html":{},"injectables/PublishedDataService.html":{},"injectables/RegisteredInterceptor.html":{},"classes/UpdatePublishedDataDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/samples/dto/create",{"_index":1334,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["src/samples/dto/update",{"_index":4016,"title":{},"body":{"classes/UpdateSampleDto.html":{}}}],["src/samples/interfaces/sample",{"_index":1957,"title":{},"body":{"interfaces/ISampleFields.html":{}}}],["src/samples/sample",{"_index":4494,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/samples/samples.module.ts",{"_index":3812,"title":{},"body":{"modules/SamplesModule.html":{}}}],["src/samples/samples.service.ts",{"_index":3819,"title":{},"body":{"injectables/SamplesService.html":{}}}],["src/samples/samples.service.ts:138",{"_index":3826,"title":{},"body":{"injectables/SamplesService.html":{}}}],["src/samples/samples.service.ts:142",{"_index":3831,"title":{},"body":{"injectables/SamplesService.html":{}}}],["src/samples/samples.service.ts:155",{"_index":3829,"title":{},"body":{"injectables/SamplesService.html":{}}}],["src/samples/samples.service.ts:23",{"_index":3821,"title":{},"body":{"injectables/SamplesService.html":{}}}],["src/samples/samples.service.ts:30",{"_index":3824,"title":{},"body":{"injectables/SamplesService.html":{}}}],["src/samples/samples.service.ts:38",{"_index":3825,"title":{},"body":{"injectables/SamplesService.html":{}}}],["src/samples/samples.service.ts:52",{"_index":3827,"title":{},"body":{"injectables/SamplesService.html":{}}}],["src/samples/samples.service.ts:85",{"_index":3828,"title":{},"body":{"injectables/SamplesService.html":{}}}],["src/samples/schemas/sample.schema",{"_index":900,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["src/samples/schemas/sample.schema.ts",{"_index":3782,"title":{},"body":{"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"miscellaneous/typealiases.html":{}}}],["src/samples/schemas/sample.schema.ts:20",{"_index":3783,"title":{},"body":{"classes/SampleClass.html":{}}}],["src/samples/schemas/sample.schema.ts:30",{"_index":3790,"title":{},"body":{"classes/SampleClass.html":{}}}],["src/samples/schemas/sample.schema.ts:38",{"_index":3788,"title":{},"body":{"classes/SampleClass.html":{}}}],["src/samples/schemas/sample.schema.ts:46",{"_index":3785,"title":{},"body":{"classes/SampleClass.html":{}}}],["src/samples/schemas/sample.schema.ts:55",{"_index":3789,"title":{},"body":{"classes/SampleClass.html":{}}}],["src/samples/schemas/sample.schema.ts:64",{"_index":3787,"title":{},"body":{"classes/SampleClass.html":{}}}],["src/samples/schemas/sample.schema.ts:78",{"_index":3800,"title":{},"body":{"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["src/samples/schemas/sample.schema.ts:90",{"_index":3801,"title":{},"body":{"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["src/users/dto/create",{"_index":772,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["src/users/dto/update",{"_index":4019,"title":{},"body":{"classes/UpdateUserIdentityDto.html":{},"classes/UpdateUserSettingsDto.html":{}}}],["src/users/interceptors/create",{"_index":1393,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{}}}],["src/users/roles.service",{"_index":2523,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["src/users/roles.service.ts",{"_index":3718,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/users/roles.service.ts:10",{"_index":3728,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/users/roles.service.ts:16",{"_index":3745,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/users/roles.service.ts:23",{"_index":3747,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/users/roles.service.ts:28",{"_index":3749,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/users/roles.service.ts:35",{"_index":3731,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/users/roles.service.ts:42",{"_index":3742,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/users/roles.service.ts:52",{"_index":3733,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/users/roles.service.ts:64",{"_index":3744,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/users/roles.service.ts:82",{"_index":3738,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/users/roles.service.ts:86",{"_index":3740,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/users/roles.service.ts:92",{"_index":3737,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/users/roles.service.ts:98",{"_index":3735,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/users/schemas/role.schema",{"_index":2670,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/users/schemas/role.schema.ts",{"_index":3696,"title":{},"body":{"classes/Role.html":{},"miscellaneous/typealiases.html":{}}}],["src/users/schemas/role.schema.ts:15",{"_index":3697,"title":{},"body":{"classes/Role.html":{}}}],["src/users/schemas/role.schema.ts:19",{"_index":3702,"title":{},"body":{"classes/Role.html":{}}}],["src/users/schemas/role.schema.ts:27",{"_index":3699,"title":{},"body":{"classes/Role.html":{}}}],["src/users/schemas/role.schema.ts:35",{"_index":3700,"title":{},"body":{"classes/Role.html":{}}}],["src/users/schemas/user",{"_index":782,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"miscellaneous/typealiases.html":{}}}],["src/users/schemas/user.schema",{"_index":612,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":4025,"title":{},"body":{"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["src/users/schemas/user.schema.ts:15",{"_index":4028,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:17",{"_index":4033,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:21",{"_index":4036,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:25",{"_index":4037,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:29",{"_index":4035,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:33",{"_index":4031,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:37",{"_index":4032,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:41",{"_index":4039,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:45",{"_index":4029,"title":{},"body":{"classes/User.html":{}}}],["src/users/user",{"_index":4044,"title":{},"body":{"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{}}}],["src/users/users.controller.ts",{"_index":4134,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:113",{"_index":4165,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:132",{"_index":4171,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:151",{"_index":4162,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:171",{"_index":4168,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:190",{"_index":4187,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:213",{"_index":4181,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:236",{"_index":4184,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:256",{"_index":4146,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:284",{"_index":4178,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:305",{"_index":4159,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:57",{"_index":4150,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:91",{"_index":4176,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:99",{"_index":4177,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":3232,"title":{},"body":{"modules/PoliciesModule.html":{}}}],["src/users/users.module.ts",{"_index":4264,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":679,"title":{},"body":{"modules/AuthModule.html":{},"classes/BuildOpenIdClient.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"injectables/PoliciesService.html":{}}}],["src/users/users.service.ts",{"_index":4272,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:146",{"_index":4315,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:151",{"_index":4285,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:173",{"_index":4308,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:191",{"_index":4302,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:200",{"_index":4294,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:204",{"_index":4296,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:220",{"_index":4289,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:229",{"_index":4313,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:239",{"_index":4311,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:247",{"_index":4298,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:251",{"_index":4293,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:262",{"_index":4300,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:266",{"_index":4306,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:275",{"_index":4304,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:279",{"_index":4291,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:305",{"_index":4287,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:31",{"_index":4283,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:44",{"_index":4309,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":1154,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/MeasurementPeriodClass.html":{},"index.html":{}}}],["start:dev",{"_index":4534,"title":{},"body":{"index.html":{}}}],["started",{"_index":1182,"title":{"index.html":{},"license.html":{}},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/MeasurementPeriodClass.html":{},"index.html":{}}}],["starting",{"_index":4562,"title":{},"body":{"index.html":{}}}],["starts",{"_index":1277,"title":{},"body":{"classes/CreateProposalDto.html":{},"classes/ProposalClass.html":{}}}],["starts.'})@isoptional()@isdatestring",{"_index":1266,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["starts.'})@prop({type",{"_index":3373,"title":{},"body":{"classes/ProposalClass.html":{}}}],["starttime",{"_index":1235,"title":{},"body":{"classes/CreateProposalDto.html":{},"interfaces/IDateRange.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"classes/ProposalClass.html":{}}}],["state",{"_index":2177,"title":{},"body":{"controllers/JobsController.html":{}}}],["static",{"_index":124,"title":{},"body":{"injectables/AccessGroupFromStaticValuesService.html":{}}}],["staticaccessgroups",{"_index":130,"title":{},"body":{"injectables/AccessGroupFromStaticValuesService.html":{}}}],["status",{"_index":656,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreatePublishedDataDto.html":{},"injectables/DatasetsService.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/IScientificFilter.html":{},"controllers/InstrumentsController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"classes/LifecycleClass.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"injectables/RegisteredInterceptor.html":{},"classes/UpdateDatasetDto.html":{},"controllers/UsersController.html":{}}}],["statusmessage",{"_index":2421,"title":{},"body":{"injectables/JobsService.html":{}}}],["statusmessage[jobtype",{"_index":2467,"title":{},"body":{"injectables/JobsService.html":{}}}],["stays",{"_index":3603,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["still",{"_index":440,"title":{},"body":{"classes/Attachment.html":{},"classes/BuildOpenIdClient.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"index.html":{}}}],["storage",{"_index":2603,"title":{},"body":{"classes/LifecycleClass.html":{},"classes/Policy.html":{},"classes/UpdateDatasetDto.html":{}}}],["store",{"_index":4343,"title":{},"body":{"injectables/UsersService.html":{}}}],["stored",{"_index":1050,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/Datablock.html":{},"classes/LifecycleClass.html":{}}}],["stores",{"_index":3967,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["strategies/jwt.strategy",{"_index":676,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/ldap.strategy",{"_index":677,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":672,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/oidc.strategy",{"_index":682,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":636,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/BuildOpenIdClient.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"injectables/UsersService.html":{}}}],["strict",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"classes/HistoryClass.html":{},"license.html":{}}}],["string",{"_index":27,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"modules/AppModule.html":{},"classes/Attachment.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateInitialDatasetDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/DatasetListDto.html":{},"modules/DatasetsModule.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FullQueryInterceptor.html":{},"classes/HistoryClass.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IDatasetList.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/ISampleFields.html":{},"interfaces/IScientificFilter.html":{},"classes/InitialDataset.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"interfaces/JWTUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalStrategy.html":{},"classes/Logbook.html":{},"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"classes/QueryableClass.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"injectables/SamplesService.html":{},"classes/TechniqueClass.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdateWherePolicyDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"classes/UserIdentity.html":{},"interfaces/UserPayload.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stringadmingroups",{"_index":909,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["stringadmingroups.split(\",\").map((v",{"_index":912,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["stringcreatedatasetgroups",{"_index":919,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["stringdeletegroups",{"_index":915,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["stringdeletegroups.split(\",\").map((v",{"_index":918,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["stringfields",{"_index":2846,"title":{},"body":{"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{}}}],["stringfilter",{"_index":2838,"title":{},"body":{"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{}}}],["strings",{"_index":2971,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["string})@apibody({description",{"_index":2997,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["string})@apiresponse({status",{"_index":2960,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{}}}],["structure",{"_index":1882,"title":{},"body":{"classes/HistoryClass.html":{}}}],["sub",{"_index":844,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["subdatasetspublicinterceptor",{"_index":2845,"title":{"injectables/SubDatasetsPublicInterceptor.html":{}},"body":{"injectables/MainDatasetsPublicInterceptor.html":{},"injectables/SubDatasetsPublicInterceptor.html":{}}}],["subdocuments",{"_index":1685,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["subfield",{"_index":3074,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["subgroup",{"_index":2894,"title":{},"body":{"injectables/MultiUTCTimeInterceptor.html":{}}}],["subject",{"_index":2403,"title":{},"body":{"injectables/JobsService.html":{},"injectables/MailService.html":{}}}],["subjects",{"_index":907,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"miscellaneous/typealiases.html":{}}}],["submitted",{"_index":2404,"title":{},"body":{"injectables/JobsService.html":{}}}],["submitting",{"_index":2181,"title":{},"body":{"controllers/JobsController.html":{}}}],["subsitute",{"_index":1812,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["substitute",{"_index":4775,"title":{},"body":{"license.html":{}}}],["successful",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{},"classes/LifecycleClass.html":{},"injectables/PoliciesService.html":{},"index.html":{}}}],["successful.'})@prop({type",{"_index":2643,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["successfully",{"_index":2405,"title":{},"body":{"injectables/JobsService.html":{},"classes/PublishedData.html":{}}}],["such",{"_index":4794,"title":{},"body":{"license.html":{}}}],["suggested",{"_index":582,"title":{},"body":{"controllers/AuthController.html":{}}}],["summary",{"_index":623,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InstrumentsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{}}}],["super",{"_index":71,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{}}}],["super(configservice.get>(\"ldap",{"_index":2553,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["support",{"_index":3161,"title":{},"body":{"controllers/PoliciesController.html":{},"controllers/UserIdentitiesController.html":{},"modules.html":{}}}],["supported",{"_index":3168,"title":{},"body":{"controllers/PoliciesController.html":{},"index.html":{}}}],["supports",{"_index":2968,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"controllers/UserIdentitiesController.html":{}}}],["supposed",{"_index":2611,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["sure",{"_index":1805,"title":{},"body":{"injectables/FilterPipe.html":{},"controllers/PublishedDataController.html":{}}}],["svg",{"_index":4797,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":445,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"dependencies.html":{},"index.html":{}}}],["switch",{"_index":2230,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/LogbooksService.html":{}}}],["syncoaipublication",{"_index":3612,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["syntax",{"_index":1878,"title":{},"body":{"classes/HistoryClass.html":{},"controllers/OrigDatablocksController.html":{}}}],["system",{"_index":1049,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateSampleDto.html":{},"classes/Datablock.html":{},"classes/LifecycleClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["system'})@prop({type",{"_index":3424,"title":{},"body":{"classes/PublishedData.html":{}}}],["system.'})@isstring()@isoptional",{"_index":1351,"title":{},"body":{"classes/CreateSampleDto.html":{}}}],["system.'})@prop({required",{"_index":2649,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["system.'})@prop({type",{"_index":451,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["systems.'})@isoptional",{"_index":3921,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["t",{"_index":1835,"title":{},"body":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{}}}],["t)[this.propname",{"_index":1839,"title":{},"body":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{}}}],["table",{"_index":4131,"title":{},"body":{"classes/UserSettings.html":{}}}],["table'})@prop({type",{"_index":4121,"title":{},"body":{"classes/UserSettings.html":{}}}],["tags",{"_index":3939,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["take",{"_index":1738,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["taking",{"_index":1186,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/MeasurementPeriodClass.html":{}}}],["taking.'})@isoptional()@isstring",{"_index":1159,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{}}}],["taking.'})@prop({type",{"_index":2853,"title":{},"body":{"classes/MeasurementPeriodClass.html":{}}}],["tap",{"_index":1405,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{}}}],["tap(async",{"_index":1409,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{}}}],["tape",{"_index":2634,"title":{},"body":{"classes/LifecycleClass.html":{},"classes/Policy.html":{},"classes/UpdateDatasetDto.html":{}}}],["tape.'})@prop({type",{"_index":2609,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["tapecopies",{"_index":2143,"title":{},"body":{"classes/Job.html":{}}}],["taperedundancy",{"_index":1217,"title":{},"body":{"classes/CreatePolicyDto.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{}}}],["taxonomies",{"_index":3943,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["team",{"_index":4523,"title":{},"body":{"index.html":{}}}],["technique",{"_index":1358,"title":{},"body":{"classes/CreateTechniqueDto.html":{},"classes/TechniqueClass.html":{}}}],["technique.'})@isstring",{"_index":1356,"title":{},"body":{"classes/CreateTechniqueDto.html":{}}}],["technique.'})@prop({type",{"_index":3860,"title":{},"body":{"classes/TechniqueClass.html":{}}}],["technique.dto.ts",{"_index":1355,"title":{},"body":{"classes/CreateTechniqueDto.html":{}}}],["technique.dto.ts:12",{"_index":1360,"title":{},"body":{"classes/CreateTechniqueDto.html":{}}}],["technique.dto.ts:20",{"_index":1357,"title":{},"body":{"classes/CreateTechniqueDto.html":{}}}],["techniqueclass",{"_index":3858,"title":{"classes/TechniqueClass.html":{}},"body":{"classes/TechniqueClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["techniquedocument",{"_index":3864,"title":{},"body":{"classes/TechniqueClass.html":{},"miscellaneous/typealiases.html":{}}}],["techniques",{"_index":3891,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["techniques.'})@isoptional()@isarray()@validatenested({each",{"_index":3992,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["techniqueschema",{"_index":3865,"title":{},"body":{"classes/TechniqueClass.html":{}}}],["template",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["template.html",{"_index":2490,"title":{},"body":{"injectables/JobsService.html":{}}}],["templates",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["templates/job",{"_index":2489,"title":{},"body":{"injectables/JobsService.html":{}}}],["tempuseridentity",{"_index":4347,"title":{},"body":{"injectables/UsersService.html":{}}}],["test",{"_index":4557,"title":{},"body":{"index.html":{}}}],["test:api",{"_index":4563,"title":{},"body":{"index.html":{}}}],["test:api:jest",{"_index":4568,"title":{},"body":{"index.html":{}}}],["test:api:mocha",{"_index":4567,"title":{},"body":{"index.html":{}}}],["tested",{"_index":2183,"title":{},"body":{"controllers/JobsController.html":{}}}],["testing",{"_index":4383,"title":{},"body":{"injectables/UsersService.html":{}}}],["tests",{"_index":2642,"title":{},"body":{"classes/LifecycleClass.html":{},"index.html":{}}}],["text",{"_index":1930,"title":{},"body":{"interfaces/IDatasetFields.html":{},"interfaces/IDateRange.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/ISampleFields.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"classes/Logbook.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"injectables/SamplesService.html":{},"classes/UpdateDatasetDto.html":{},"miscellaneous/enumerations.html":{}}}],["text/plain;charset=utf",{"_index":3611,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["th",{"_index":4629,"title":{},"body":{"index.html":{}}}],["theme",{"_index":187,"title":{},"body":{"injectables/AdminService.html":{}}}],["theory",{"_index":4782,"title":{},"body":{"license.html":{}}}],["therefore",{"_index":417,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"index.html":{}}}],["third",{"_index":4595,"title":{},"body":{"index.html":{}}}],["this._id",{"_index":487,"title":{},"body":{"modules/AttachmentsModule.html":{},"modules/DatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{}}}],["this.accessgroupproviders",{"_index":103,"title":{},"body":{"injectables/AccessGroupFromMultipleProvidersService.html":{}}}],["this.accessgroupservice.getaccessgroups",{"_index":809,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["this.accessgroupservice.getaccessgroups(userpayload",{"_index":4336,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.adddefaultpolicy(ownergroup",{"_index":3295,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["this.additionallogouttasks(req",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.adminservice.getconfig",{"_index":162,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.gettheme",{"_index":164,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.apiurl",{"_index":86,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["this.applypolicyandsendemail",{"_index":2461,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.applypolicyandsendemail(jobtype",{"_index":2410,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.attachmentmodel",{"_index":532,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["this.attachmentmodel.find(filter).exec",{"_index":535,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["this.attachmentmodel.findone(filter",{"_index":536,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["this.attachmentmodel.findoneandremove(filter).exec",{"_index":539,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["this.attachmentsservice.findone",{"_index":3569,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["this.authservice.login(req.user",{"_index":621,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["this.authservice.login(res.req.user",{"_index":640,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(req",{"_index":660,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["this.authservice.validateuser(username",{"_index":2673,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.baseurl",{"_index":2752,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["this.callgraphqlapi(query",{"_index":78,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["this.caslabilityfactory.createforuser",{"_index":4071,"title":{},"body":{"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["this.caslabilityfactory.createforuser(user",{"_index":3176,"title":{},"body":{"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{}}}],["this.caslabilityfactory.createforuser(vieweduser",{"_index":4236,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.checkdatasetsexistence(ids",{"_index":2284,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.checkdatasetsstate(createjobdto.type",{"_index":2285,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.checkfilesexistence(createjobdto",{"_index":2286,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.checkpermission(request",{"_index":2282,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.checkuserauthorization",{"_index":4208,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.client",{"_index":798,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["this.client.userinfo(tokenset",{"_index":801,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["this.configservice.get",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatasetsService.html":{},"controllers/PublishedDataController.html":{},"injectables/SamplesService.html":{}}}],["this.configservice.get(\"defaultmanager",{"_index":3308,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["this.configservice.get(\"doipassword",{"_index":3597,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["this.configservice.get(\"doiusername",{"_index":3596,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["this.configservice.get(\"functionalaccounts",{"_index":4321,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.configservice.get(\"jwt.expiresin",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.configservice.get(\"jwt.neverexpires",{"_index":4402,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.configservice.get(\"jwt.secret",{"_index":4396,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.configservice.get(\"logbook.baseurl",{"_index":2753,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["this.configservice.get(\"logbook.enabled",{"_index":1786,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/LogbooksService.html":{}}}],["this.configservice.get(\"logbook.password",{"_index":2757,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["this.configservice.get(\"logbook.username",{"_index":2755,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["this.configservice.get(\"logouturl",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get(\"metadataparentinstancesreturnlimit",{"_index":1706,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/SamplesService.html":{}}}],["this.configservice.get(\"oaiproviderroute",{"_index":3594,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["this.configservice.get(\"oidc",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["this.configservice.get(\"oidc\")?.returnurl",{"_index":650,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get(\"oidc\")?.successurl",{"_index":642,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get(\"rabbitmq.enabled",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["this.configservice.get(\"rabbitmq.hostname",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["this.configservice.get(\"rabbitmq.password",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["this.configservice.get(\"rabbitmq.username",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["this.configservice.get(\"registerdoiuri",{"_index":3592,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["this.configservice.get(\"site",{"_index":3614,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["this.configservice.get(\"smtp.messagefrom",{"_index":2376,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.create(createroledto",{"_index":3766,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.create(createuserdto",{"_index":4376,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.create(defaultpolicy",{"_index":3312,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["this.createuseridentity(createuseridentity",{"_index":4350,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.createuserrole(createuserroledto",{"_index":3775,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.datablockmodel",{"_index":1520,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["this.datablockmodel.find(filter).exec",{"_index":1523,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["this.datablockmodel.findone(filter).exec",{"_index":1524,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["this.datablockmodel.findoneandremove(filter).exec",{"_index":1526,"title":{},"body":{"injectables/DatablocksService.html":{}}}],["this.datasetmodel",{"_index":1630,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["this.datasetmodel.aggregate(pipeline).exec",{"_index":1655,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["this.datasetmodel.count(wherefilter).exec",{"_index":1659,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["this.datasetmodel.findone",{"_index":1664,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["this.datasetmodel.findone(wherefilter",{"_index":1657,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["this.datasetmodel.findoneandremove",{"_index":1690,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["this.datasetsservice.findall(filter",{"_index":2228,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.datasetsservice.findall(filter)).map",{"_index":2432,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.datasetsservice.findall(filter)).map((dataset",{"_index":2395,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.datasetsservice.findbyidandupdate(pid",{"_index":3029,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{}}}],["this.datasetsservice.findone",{"_index":2469,"title":{},"body":{"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{}}}],["this.datasetsservice.keephistory(req",{"_index":1895,"title":{},"body":{"injectables/HistoryInterceptor.html":{}}}],["this.datasetsservice.updateall(filter",{"_index":2468,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.datekeys",{"_index":2902,"title":{},"body":{"injectables/MultiUTCTimeInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{}}}],["this.doi",{"_index":3657,"title":{},"body":{"modules/PublishedDataModule.html":{}}}],["this.domainname",{"_index":2402,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.eventemitter.emit(\"jobcreated",{"_index":2299,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.eventemitter.emit(\"jobupdated",{"_index":2316,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.execpolicyhandler(handler",{"_index":3218,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["this.findall",{"_index":1743,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["this.findall(filters",{"_index":3853,"title":{},"body":{"injectables/SamplesService.html":{}}}],["this.findbyidandupdate(dataset.pid",{"_index":1784,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["this.findbyiduseridentity(user._id",{"_index":4348,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findone",{"_index":2419,"title":{},"body":{"injectables/JobsService.html":{},"injectables/RolesService.html":{}}}],["this.findone(userfilter",{"_index":4375,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findoneuserrole(filter",{"_index":3774,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.findorcreate(createaccount",{"_index":4334,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.findorcreate(createrole",{"_index":3757,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.fullquery(filters",{"_index":1712,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["this.getfilters(headers",{"_index":3187,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["this.getpolicy(ids[0",{"_index":2409,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.getuserphoto(userinfo",{"_index":865,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["this.graphqltemplatequery.replace(\"{{userid",{"_index":76,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["this.headers",{"_index":89,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["this.httpservice.get",{"_index":2786,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["this.httpservice.get(this.baseurl",{"_index":2767,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["this.httpservice.post",{"_index":85,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/LogbooksService.html":{}}}],["this.httpservice.post(this.baseurl",{"_index":2758,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["this.httpservice.request",{"_index":3619,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["this.id",{"_index":488,"title":{},"body":{"modules/AttachmentsModule.html":{}}}],["this.initialdatasetmodel",{"_index":1982,"title":{},"body":{"injectables/InitialDatasetsService.html":{}}}],["this.initialdatasetmodel.findbyid(id",{"_index":1984,"title":{},"body":{"injectables/InitialDatasetsService.html":{}}}],["this.initialdatasetsservice.create",{"_index":1760,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["this.initialdatasetsservice.findbyid",{"_index":1758,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["this.instrumentmodel",{"_index":2112,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["this.instrumentmodel(createinstrumentdto",{"_index":2109,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["this.instrumentmodel.findone(wherefilter",{"_index":2114,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["this.instrumentmodel.findoneandremove(filter).exec",{"_index":2115,"title":{},"body":{"injectables/InstrumentsService.html":{}}}],["this.instrumentsservice.create",{"_index":2063,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["this.instrumentsservice.findall(instrumentfilter",{"_index":2073,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["this.instrumentsservice.findone",{"_index":2084,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["this.instrumentsservice.findone(instrumentfilters",{"_index":2081,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["this.instrumentsservice.remove",{"_index":2092,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["this.instrumentsservice.update",{"_index":2088,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["this.jobmodel",{"_index":2380,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel(createjobdto",{"_index":2377,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.aggregate(pipeline).exec",{"_index":2385,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find(filterquery",{"_index":2383,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findone(filter).exec",{"_index":2386,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findoneandremove(filter).exec",{"_index":2387,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(jobtocreate",{"_index":2292,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(parsedfilter",{"_index":2302,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone",{"_index":2312,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.fullfacet(parsedfilters",{"_index":2310,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.fullquery(parsedfilters",{"_index":2307,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove",{"_index":2320,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update",{"_index":2315,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":4398,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.sign(user",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.logbookenabled",{"_index":2751,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["this.logbooksservice.findall",{"_index":2718,"title":{},"body":{"controllers/LogbooksController.html":{}}}],["this.logbooksservice.findbyname(name",{"_index":2722,"title":{},"body":{"controllers/LogbooksController.html":{}}}],["this.logbooksservice.sendmessage(proposalid",{"_index":1794,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["this.login(this.username",{"_index":2764,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["this.mailerservice.sendmail",{"_index":2829,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendmail(to",{"_index":2497,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.markdatasetsasscheduled(ids",{"_index":2392,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.origdatablockmodel",{"_index":3084,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["this.origdatablockmodel.aggregate(pipeline).exec",{"_index":3102,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["this.origdatablockmodel.aggregate(pipelinestages).exec",{"_index":3101,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["this.origdatablockmodel.find(filterquery",{"_index":3090,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["this.origdatablockmodel.findone(filter).exec",{"_index":3089,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["this.origdatablockmodel.findoneandremove(filter).exec",{"_index":3104,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["this.origdatablocksservice.create",{"_index":3021,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["this.origdatablocksservice.findall",{"_index":2253,"title":{},"body":{"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{}}}],["this.origdatablocksservice.findall(parsedfilters",{"_index":3040,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["this.origdatablocksservice.findone",{"_index":3054,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["this.origdatablocksservice.fullfacet",{"_index":3051,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["this.origdatablocksservice.fullfacet(parsedfilters",{"_index":3047,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["this.origdatablocksservice.fullquery(parsedfilters",{"_index":3042,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["this.origdatablocksservice.fullqueryfileslist(parsedfilters",{"_index":3045,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["this.origdatablocksservice.remove",{"_index":3059,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["this.origdatablocksservice.update",{"_index":3056,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["this.ownergroup",{"_index":1556,"title":{},"body":{"modules/DatasetsModule.html":{}}}],["this.parseuserinfo(userinfo",{"_index":802,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["this.password",{"_index":2756,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["this.pid",{"_index":1554,"title":{},"body":{"modules/DatasetsModule.html":{},"modules/InstrumentsModule.html":{}}}],["this.policiesservice.count(parsedwhere",{"_index":3193,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["this.policiesservice.create(createpolicydto",{"_index":3184,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["this.policiesservice.findall(mergedfilters",{"_index":3188,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["this.policiesservice.findone",{"_index":2470,"title":{},"body":{"injectables/JobsService.html":{},"controllers/PoliciesController.html":{}}}],["this.policiesservice.remove",{"_index":3201,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["this.policiesservice.update",{"_index":3200,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["this.policiesservice.updatewhere",{"_index":3197,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["this.policymodel",{"_index":3257,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["this.policymodel.count(where).exec",{"_index":3279,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["this.policymodel.findone",{"_index":3304,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["this.policymodel.findone(filter).exec",{"_index":3280,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["this.policymodel.findoneandremove(filter).exec",{"_index":3282,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["this.propname",{"_index":1836,"title":{},"body":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{}}}],["this.proposalid",{"_index":3391,"title":{},"body":{"modules/ProposalsModule.html":{}}}],["this.proposalmodel",{"_index":3407,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["this.proposalmodel.aggregate(pipeline).exec",{"_index":3412,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["this.proposalmodel.find(filterquery",{"_index":3410,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["this.proposalmodel.findone(filter).exec",{"_index":3413,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["this.proposalmodel.findoneandremove(filter).exec",{"_index":3415,"title":{},"body":{"injectables/ProposalsService.html":{}}}],["this.proposalsservice.create",{"_index":350,"title":{},"body":{"modules/AppModule.html":{}}}],["this.proposalsservice.findall",{"_index":4250,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["this.proposalsservice.findone",{"_index":3564,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["this.publisheddatamodel",{"_index":3670,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["this.publisheddatamodel.count(filter).exec",{"_index":3672,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["this.publisheddatamodel.findone(filter).exec",{"_index":3673,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["this.publisheddatamodel.findoneandremove(filter).exec",{"_index":3675,"title":{},"body":{"injectables/PublishedDataService.html":{}}}],["this.publisheddataservice.count(publisheddatafilters",{"_index":3556,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["this.publisheddataservice.create",{"_index":3535,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["this.publisheddataservice.findall(publisheddatafilters",{"_index":3548,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["this.publisheddataservice.findone",{"_index":3574,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["this.publisheddataservice.remove",{"_index":3576,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["this.publisheddataservice.update",{"_index":3575,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["this.publishjob",{"_index":2298,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.referer[cookie",{"_index":2917,"title":{},"body":{"injectables/OidcAuthGuard.html":{}}}],["this.reflector.get",{"_index":2514,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":3714,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.request.user",{"_index":1518,"title":{},"body":{"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["this.request?.user",{"_index":529,"title":{},"body":{"injectables/AttachmentsService.html":{}}}],["this.responseprocessor(response",{"_index":80,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["this.roleexists",{"_index":3765,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel(createroledto",{"_index":3763,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.exists(filter).exec",{"_index":3758,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":3780,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone(filter).exec",{"_index":3776,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesservice.find",{"_index":2530,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.rolesservice.findalluserroles",{"_index":2675,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.rolesservice.findone",{"_index":2677,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.rolesservice.findorcreate(createrole",{"_index":4359,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.rolesservice.findorcreateuserrole(createuserrole",{"_index":4362,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.sampleid",{"_index":3818,"title":{},"body":{"modules/SamplesModule.html":{}}}],["this.samplemodel",{"_index":3839,"title":{},"body":{"injectables/SamplesService.html":{}}}],["this.samplemodel.find(filterquery",{"_index":3851,"title":{},"body":{"injectables/SamplesService.html":{}}}],["this.samplemodel.findone(filter).exec",{"_index":3854,"title":{},"body":{"injectables/SamplesService.html":{}}}],["this.samplemodel.findoneandremove(filter).exec",{"_index":3856,"title":{},"body":{"injectables/SamplesService.html":{}}}],["this.sendemail(to",{"_index":2485,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.smtpmessagefrom",{"_index":2375,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.staticaccessgroups",{"_index":133,"title":{},"body":{"injectables/AccessGroupFromStaticValuesService.html":{}}}],["this.staticaccessgroups.join",{"_index":132,"title":{},"body":{"injectables/AccessGroupFromStaticValuesService.html":{}}}],["this.subgroup",{"_index":2901,"title":{},"body":{"injectables/MultiUTCTimeInterceptor.html":{}}}],["this.updatedatasetsizeandfiles(dataset.pid",{"_index":3022,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["this.updatedatasetsizeandfiles(origdatablock.datasetid",{"_index":3057,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["this.updatehistory(req",{"_index":1761,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["this.updatemergedfiltersforlist",{"_index":3186,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["this.updateuseridentity(createuseridentity",{"_index":4349,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userexists(userfilter",{"_index":4374,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.useridentitiesservice.findone",{"_index":4075,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["this.useridentitymodel",{"_index":4380,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.useridentitymodel.findone",{"_index":4388,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.useridentitymodel.findone(filter).exec",{"_index":4088,"title":{},"body":{"injectables/UserIdentitiesService.html":{}}}],["this.usermodel(createuser",{"_index":4372,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel(sanitizedcreateuserdto",{"_index":4368,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.exists(filter",{"_index":4363,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id).exec",{"_index":4379,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone(filter).exec",{"_index":4378,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone(filter).select(\"+password\").exec",{"_index":4377,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.username",{"_index":2754,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["this.userroleexists(filter",{"_index":3773,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.userrolemodel(createuserroledto",{"_index":3771,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.userrolemodel.exists(filter).exec",{"_index":3759,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.userrolemodel.find(filter).exec",{"_index":3778,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.userrolemodel.findone(filter).exec",{"_index":3777,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.usersettingsmodel",{"_index":4390,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersettingsmodel.findone",{"_index":4392,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersettingsmodel.findoneandremove",{"_index":4393,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuser",{"_index":815,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["this.usersservice.createcustomjwt",{"_index":4239,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.createuseridentity(createuseridentity",{"_index":823,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["this.usersservice.createuserjwt(request.user",{"_index":4206,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.createusersettings",{"_index":1416,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{}}}],["this.usersservice.createusersettings(id",{"_index":4219,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyid(id",{"_index":4211,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyid(userid",{"_index":3292,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["this.usersservice.findbyid2jwtuser",{"_index":4235,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyiduseridentity",{"_index":2532,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{}}}],["this.usersservice.findbyiduseridentity(id",{"_index":4213,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyiduseridentity(user._id",{"_index":2684,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.usersservice.findbyiduseridentity(userid",{"_index":3291,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["this.usersservice.findbyidusersettings",{"_index":1412,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{}}}],["this.usersservice.findbyidusersettings(id",{"_index":4221,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(userfilter",{"_index":812,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["this.usersservice.findoneandremoveusersettings(id",{"_index":4232,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findoneandupdateusersettings",{"_index":4227,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateuseridentity",{"_index":825,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{}}}],["this.usersservice.userexists(userfilter",{"_index":2560,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["this.validatejob(jobtocreate",{"_index":2290,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.validatepermission",{"_index":3299,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["three",{"_index":4573,"title":{},"body":{"index.html":{}}}],["through",{"_index":555,"title":{},"body":{"controllers/AuthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PublishedDataController.html":{}}}],["throw",{"_index":816,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/DatasetsService.html":{},"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogbooksService.html":{},"injectables/OidcStrategy.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["thumbnail",{"_index":366,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreatePublishedDataDto.html":{},"interfaces/ICount.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"classes/PublishedData.html":{}}}],["thumbnail_url",{"_index":2888,"title":{},"body":{"classes/MessageContent.html":{}}}],["thumbnailphoto",{"_index":2565,"title":{},"body":{"injectables/LdapStrategy.html":{},"classes/UserProfile.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":424,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"classes/Job.html":{},"classes/LifecycleClass.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{}}}],["time.'})@prop({default",{"_index":2629,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["time.interceptor.ts",{"_index":2892,"title":{},"body":{"injectables/MultiUTCTimeInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{}}}],["time.interceptor.ts:12",{"_index":2898,"title":{},"body":{"injectables/MultiUTCTimeInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{}}}],["time.interceptor.ts:13",{"_index":2896,"title":{},"body":{"injectables/MultiUTCTimeInterceptor.html":{}}}],["time.interceptor.ts:18",{"_index":3870,"title":{},"body":{"injectables/UTCTimeInterceptor.html":{}}}],["time.interceptor.ts:20",{"_index":2897,"title":{},"body":{"injectables/MultiUTCTimeInterceptor.html":{}}}],["timeout",{"_index":2732,"title":{},"body":{"modules/LogbooksModule.html":{},"modules/PublishedDataModule.html":{},"index.html":{}}}],["times",{"_index":1169,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/MeasurementPeriodClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["timestamp",{"_index":2807,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["timestamps",{"_index":436,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UserIdentity.html":{}}}],["timezone",{"_index":1175,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/MeasurementPeriodClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["timezone/offset",{"_index":1171,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/MeasurementPeriodClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["title",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/IScientificFilter.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{}}}],["title'})@prop({type",{"_index":3476,"title":{},"body":{"classes/PublishedData.html":{}}}],["to.'})@isstring",{"_index":1067,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{}}}],["todo",{"_index":1665,"title":{},"body":{"injectables/DatasetsService.html":{},"controllers/JobsController.html":{}}}],["toisostring",{"_index":2449,"title":{},"body":{"injectables/JobsService.html":{}}}],["tojson",{"_index":468,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/InitialDataset.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"classes/OrigDatablock.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/User.html":{},"classes/UserIdentity.html":{},"classes/UserSettings.html":{}}}],["token",{"_index":639,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateCustomJwt.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["token.access_token",{"_index":645,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.userid",{"_index":647,"title":{},"body":{"controllers/AuthController.html":{}}}],["tokens",{"_index":4156,"title":{},"body":{"controllers/UsersController.html":{}}}],["tokenset",{"_index":778,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["tort",{"_index":4786,"title":{},"body":{"license.html":{}}}],["total",{"_index":1069,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/UpdateDatasetDto.html":{}}}],["touched",{"_index":1667,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["towards",{"_index":4681,"title":{},"body":{"index.html":{}}}],["trailing",{"_index":3982,"title":{},"body":{"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["transfer",{"_index":4697,"title":{},"body":{"index.html":{}}}],["transferred",{"_index":2628,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["transform",{"_index":1797,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["transform(invalue",{"_index":1798,"title":{},"body":{"injectables/FilterPipe.html":{}}}],["transformed",{"_index":1172,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/MeasurementPeriodClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["transformer",{"_index":1034,"title":{},"body":{"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreateProposalDto.html":{},"controllers/OrigDatablocksController.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdateWherePolicyDto.html":{},"dependencies.html":{}}}],["translated",{"_index":3267,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["transport",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["treated",{"_index":1767,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["trigger",{"_index":2296,"title":{},"body":{"controllers/JobsController.html":{},"classes/UpdateDatasetDto.html":{}}}],["true",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"classes/Attachment.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthService.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserSettingsDto.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"injectables/DatablocksService.html":{},"classes/DatasetListDto.html":{},"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{},"classes/InitialDataset.html":{},"classes/Instrument.html":{},"injectables/InstrumentsService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/LifecycleClass.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"classes/QueryableClass.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"classes/TechniqueClass.html":{},"classes/UpdateDatasetDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"classes/UserIdentity.html":{},"classes/UserSettings.html":{},"injectables/UsersService.html":{}}}],["true})@isoptional",{"_index":1301,"title":{},"body":{"classes/CreatePublishedDataDto.html":{}}}],["true})@isstring",{"_index":1115,"title":{},"body":{"classes/CreateInstrumentDto.html":{}}}],["true})@prop({type",{"_index":2119,"title":{},"body":{"classes/Job.html":{},"classes/UserSettings.html":{}}}],["true})@type(undefined",{"_index":1063,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreateProposalDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["trust",{"_index":3999,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["trustissuer",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["trustissuer.client",{"_index":784,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["trustissuer.metadata.end_session_endpoint",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{}}}],["try",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"controllers/InstrumentsController.html":{},"injectables/JobsService.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/PoliciesService.html":{},"controllers/PublishedDataController.html":{}}}],["ttl",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{}}}],["two",{"_index":3166,"title":{},"body":{"controllers/PoliciesController.html":{},"classes/Policy.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["type",{"_index":40,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/AccessGroupService.html":{},"modules/AppModule.html":{},"classes/Attachment.html":{},"injectables/AttachmentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateInitialDatasetDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"injectables/DatablocksService.html":{},"classes/DatasetListDto.html":{},"injectables/DatasetsService.html":{},"injectables/FilterPipe.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/FullQueryInterceptor.html":{},"classes/HistoryClass.html":{},"injectables/HistoryInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/ICount.html":{},"interfaces/IDatablockFields.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IDatasetList.html":{},"interfaces/IDateRange.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/IFormPopulateData.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IOrigDatablockFields.html":{},"interfaces/IPolicyFilter.html":{},"interfaces/IPolicyHandler.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{},"interfaces/IProposalMember.html":{},"interfaces/IPublishedDataFilters.html":{},"interfaces/IRegister.html":{},"interfaces/ISampleFields.html":{},"interfaces/IScientificFilter.html":{},"classes/InitialDataset.html":{},"injectables/InitialDatasetsService.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"interfaces/JWTUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"classes/LifecycleClass.html":{},"injectables/LocalStrategy.html":{},"classes/Logbook.html":{},"controllers/LogbooksController.html":{},"injectables/LogbooksService.html":{},"injectables/MailService.html":{},"injectables/MainDatasetsPublicInterceptor.html":{},"classes/MeasurementPeriodClass.html":{},"classes/Message.html":{},"classes/MessageContent.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/OidcAuthGuard.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"classes/QueryableClass.html":{},"injectables/RegisteredInterceptor.html":{},"classes/RelationshipClass.html":{},"classes/Role.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"injectables/SamplesService.html":{},"injectables/SubDatasetsPublicInterceptor.html":{},"classes/TechniqueClass.html":{},"injectables/UTCTimeInterceptor.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdateWherePolicyDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"classes/UserIdentity.html":{},"interfaces/UserPayload.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type.enum",{"_index":1621,"title":{},"body":{"injectables/DatasetsService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["type.enum.ts",{"_index":4450,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type:text/plain;charset=utf",{"_index":3606,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["typealiases",{"_index":4804,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":3220,"title":{},"body":{"guards/PoliciesGuard.html":{},"injectables/UsersService.html":{}}}],["types",{"_index":2241,"title":{},"body":{"controllers/JobsController.html":{}}}],["types(query",{"_index":3167,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["typescript",{"_index":1818,"title":{},"body":{"injectables/FilterPipe.html":{},"injectables/JwtAuthGuard.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"controllers/PublishedDataController.html":{}}}],["u",{"_index":2900,"title":{},"body":{"injectables/MultiUTCTimeInterceptor.html":{}}}],["ui",{"_index":4445,"title":{},"body":{"dependencies.html":{}}}],["uid",{"_index":1424,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{}}}],["unauthenticated",{"_index":2278,"title":{},"body":{"controllers/JobsController.html":{}}}],["unauthorized",{"_index":4079,"title":{},"body":{"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["unauthorizedexception",{"_index":2508,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PoliciesService.html":{}}}],["unauthorizedexception(\"user",{"_index":3269,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["unclear",{"_index":4639,"title":{},"body":{"index.html":{}}}],["uncompressed",{"_index":1442,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{}}}],["undefined",{"_index":119,"title":{},"body":{"injectables/AccessGroupFromPayloadService.html":{},"modules/AppModule.html":{},"classes/Attachment.html":{},"classes/CreateAttachmentDto.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"classes/LifecycleClass.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableClass.html":{},"classes/OwnableDto.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"injectables/SamplesService.html":{},"classes/UpdateDatasetDto.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"injectables/UsersService.html":{}}}],["undefined})@apiquery({name",{"_index":2975,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["undefined})@isoptional()@isobject",{"_index":1113,"title":{},"body":{"classes/CreateInstrumentDto.html":{}}}],["undefined})@prop(['messageschema",{"_index":2688,"title":{},"body":{"classes/Logbook.html":{}}}],["under",{"_index":3948,"title":{},"body":{"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["union",{"_index":4719,"title":{},"body":{"index.html":{}}}],["unique",{"_index":1045,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreateSampleDto.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/Instrument.html":{},"controllers/InstrumentsController.html":{},"classes/Job.html":{},"classes/OrigDatablock.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/User.html":{}}}],["uniquecreator",{"_index":3641,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["uniquecreator.map((author",{"_index":3646,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["uniqueitems",{"_index":1117,"title":{},"body":{"classes/CreateInstrumentDto.html":{}}}],["uniquename",{"_index":1112,"title":{},"body":{"classes/CreateInstrumentDto.html":{},"classes/Instrument.html":{}}}],["unit",{"_index":1856,"title":{},"body":{"injectables/FullQueryInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"index.html":{}}}],["unitrequested",{"_index":1861,"title":{},"body":{"injectables/FullQueryInterceptor.html":{}}}],["unknown",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/DatasetsService.html":{},"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IDatasetFields.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LifecycleClass.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"controllers/PublishedDataController.html":{},"injectables/SamplesService.html":{},"controllers/UsersController.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["unpacked.'})@isoptional()@isint",{"_index":3975,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["unrestricted",{"_index":418,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["unset",{"_index":3099,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["unsigned",{"_index":2866,"title":{},"body":{"classes/Message.html":{}}}],["unused",{"_index":3032,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["unwind",{"_index":3100,"title":{},"body":{"injectables/OrigDatablocksService.html":{}}}],["unwrapjson",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["unwrapjson(json",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["up",{"_index":3323,"title":{},"body":{"classes/Policy.html":{},"classes/PublishedData.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["update",{"_index":951,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/FullQueryInterceptor.html":{},"classes/HistoryClass.html":{},"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/LdapStrategy.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{},"classes/UpdateWherePolicyDto.html":{},"miscellaneous/enumerations.html":{}}}],["update(filter",{"_index":1514,"title":{},"body":{"injectables/DatablocksService.html":{},"injectables/InstrumentsService.html":{},"injectables/JobsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["update(id",{"_index":2034,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{}}}],["update(scientificmetadata",{"_index":1863,"title":{},"body":{"injectables/FullQueryInterceptor.html":{}}}],["update.'})@prop({type",{"_index":1873,"title":{},"body":{"classes/HistoryClass.html":{}}}],["updateall",{"_index":1570,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["updateall(filter",{"_index":1608,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["updatealltimestoutc",{"_index":2899,"title":{},"body":{"injectables/MultiUTCTimeInterceptor.html":{}}}],["updatealltimestoutc(this.datekeys",{"_index":2905,"title":{},"body":{"injectables/MultiUTCTimeInterceptor.html":{}}}],["updateattachmentdto",{"_index":512,"title":{"classes/UpdateAttachmentDto.html":{}},"body":{"injectables/AttachmentsService.html":{},"classes/UpdateAttachmentDto.html":{}}}],["updated",{"_index":453,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{},"injectables/JobsService.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["updatedat",{"_index":370,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/Job.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"classes/Role.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UserIdentity.html":{}}}],["updatedatablockdto",{"_index":1515,"title":{"classes/UpdateDatablockDto.html":{}},"body":{"injectables/DatablocksService.html":{},"classes/UpdateDatablockDto.html":{}}}],["updatedatasetdto",{"_index":1586,"title":{"classes/UpdateDatasetDto.html":{}},"body":{"injectables/DatasetsService.html":{},"controllers/OrigDatablocksController.html":{},"classes/PartialUpdateDatasetDto.html":{},"classes/UpdateDatasetDto.html":{}}}],["updatedatasetsizeandfiles",{"_index":2942,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["updatedatasetsizeandfiles(pid",{"_index":3000,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["updatedby",{"_index":371,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/QueryableClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["updateddataset",{"_index":1675,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["updateddatasetinput",{"_index":1669,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["updatederiveddatasetdto",{"_index":1588,"title":{},"body":{"injectables/DatasetsService.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{}}}],["updatedfield",{"_index":1793,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["updatedfields",{"_index":1772,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["updatedjob",{"_index":2314,"title":{},"body":{"controllers/JobsController.html":{}}}],["updatehistory",{"_index":1571,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["updatehistory(req",{"_index":1610,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["updateinstrumentdto",{"_index":2035,"title":{"classes/UpdateInstrumentDto.html":{}},"body":{"controllers/InstrumentsController.html":{},"injectables/InstrumentsService.html":{},"classes/UpdateInstrumentDto.html":{}}}],["updatejobdto",{"_index":2203,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["updatemany(filter",{"_index":1656,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["updatemergedfiltersforlist",{"_index":3128,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["updatemergedfiltersforlist(request",{"_index":3145,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["updateone",{"_index":3297,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["updateorigdatablockdto",{"_index":2995,"title":{"classes/UpdateOrigDatablockDto.html":{}},"body":{"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"classes/UpdateOrigDatablockDto.html":{}}}],["updateorigdatablockdto})@apiresponse({status",{"_index":2998,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["updatepolicydto",{"_index":3143,"title":{"classes/UpdatePolicyDto.html":{}},"body":{"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"classes/UpdatePolicyDto.html":{},"classes/UpdateWherePolicyDto.html":{}}}],["updateproposaldto",{"_index":3403,"title":{"classes/UpdateProposalDto.html":{}},"body":{"injectables/ProposalsService.html":{},"classes/UpdateProposalDto.html":{}}}],["updatepublisheddatadto",{"_index":3516,"title":{"classes/UpdatePublishedDataDto.html":{}},"body":{"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"classes/UpdatePublishedDataDto.html":{}}}],["updatequery",{"_index":1594,"title":{},"body":{"injectables/DatasetsService.html":{}}}],["updaterawdatasetdto",{"_index":1587,"title":{},"body":{"injectables/DatasetsService.html":{},"classes/PartialUpdateRawDatasetDto.html":{}}}],["updates",{"_index":1736,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/LocalStrategy.html":{},"controllers/OrigDatablocksController.html":{}}}],["updatesampledto",{"_index":3830,"title":{"classes/UpdateSampleDto.html":{}},"body":{"injectables/SamplesService.html":{},"classes/UpdateSampleDto.html":{}}}],["updatesettings",{"_index":4143,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatesettings(request",{"_index":4185,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatetimestoutc",{"_index":3871,"title":{},"body":{"injectables/UTCTimeInterceptor.html":{}}}],["updatetimestoutc(this.datekeys",{"_index":3872,"title":{},"body":{"injectables/UTCTimeInterceptor.html":{}}}],["updateuseridentity",{"_index":4280,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuseridentity(updateuseridentitydto",{"_index":4312,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuseridentitydto",{"_index":4018,"title":{"classes/UpdateUserIdentityDto.html":{}},"body":{"classes/UpdateUserIdentityDto.html":{},"injectables/UsersService.html":{}}}],["updateusersettingsdto",{"_index":4021,"title":{"classes/UpdateUserSettingsDto.html":{}},"body":{"classes/UpdateUserSettingsDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatewhere",{"_index":3129,"title":{},"body":{"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{}}}],["updatewhere(@body",{"_index":3196,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["updatewhere(ownergrouplist",{"_index":3251,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["updatewhere(updatewherepolicydto",{"_index":3148,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["updatewherepolicydto",{"_index":3149,"title":{"classes/UpdateWherePolicyDto.html":{}},"body":{"controllers/PoliciesController.html":{},"classes/UpdateWherePolicyDto.html":{}}}],["updatewherepolicydto.data",{"_index":3199,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["updatewherepolicydto.ownergrouplist",{"_index":3198,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["upon",{"_index":3318,"title":{},"body":{"classes/Policy.html":{}}}],["uri",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"controllers/PublishedDataController.html":{},"index.html":{}}}],["url",{"_index":641,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreatePublishedDataDto.html":{},"classes/MessageContent.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"index.html":{}}}],["url.searchparams.append",{"_index":648,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.append(\"access",{"_index":644,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.append(\"user",{"_index":646,"title":{},"body":{"controllers/AuthController.html":{}}}],["urls",{"_index":3450,"title":{},"body":{"classes/PublishedData.html":{}}}],["use",{"_index":849,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"classes/Instrument.html":{},"injectables/JobsService.html":{},"injectables/OidcStrategy.html":{},"classes/PublishedData.html":{},"controllers/UsersController.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":14,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"injectables/AccessGroupFromStaticValuesService.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateDatasetDatablockDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreateProposalDto.html":{},"classes/Datablock.html":{},"classes/MeasurementPeriodClass.html":{},"classes/OrigDatablock.html":{},"classes/ProposalClass.html":{},"controllers/PublishedDataController.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{},"license.html":{}}}],["used.'})@isoptional()@isstring",{"_index":3949,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["used.'})@isoptional()@isstring()@isnotempty",{"_index":1198,"title":{},"body":{"classes/CreateOrigDatablockDto.html":{}}}],["usedsoftware",{"_index":3122,"title":{},"body":{"classes/PartialUpdateRawDatasetDto.html":{}}}],["usefactory",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"modules/AuthModule.html":{},"modules/DatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/LogbooksModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"modules/UsersModule.html":{}}}],["useful",{"_index":3926,"title":{},"body":{"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["useguards",{"_index":595,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":653,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@apioperation({summary",{"_index":571,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get('whoami",{"_index":593,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(ldapauthguard",{"_index":625,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":619,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(oidcauthguard",{"_index":628,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(policiesguard",{"_index":2059,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["useguards(policiesguard)@checkpolicies(ability",{"_index":2009,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/LogbooksController.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{}}}],["useguards(policiesguard)@get('/isvalidemail",{"_index":4053,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["useinterceptors",{"_index":2040,"title":{},"body":{"controllers/InstrumentsController.html":{},"controllers/LogbooksController.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors(createusersettingsinterceptor",{"_index":4207,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors(createusersettingsinterceptor)@get('/:id",{"_index":4164,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors(historyinterceptor",{"_index":3194,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["useinterceptors(historyinterceptor)@httpcode(httpstatus.ok)@post('/updatewhere",{"_index":3150,"title":{},"body":{"controllers/PoliciesController.html":{}}}],["useinterceptors(new",{"_index":2010,"title":{},"body":{"controllers/InstrumentsController.html":{}}}],["useinterceptors(registeredinterceptor",{"_index":3537,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["useinterceptors(userslogbooksinterceptor",{"_index":2717,"title":{},"body":{"controllers/LogbooksController.html":{}}}],["useinterceptors(userslogbooksinterceptor)@get",{"_index":2705,"title":{},"body":{"controllers/LogbooksController.html":{}}}],["useinterceptors(userslogbooksinterceptor)@get('/:name",{"_index":2708,"title":{},"body":{"controllers/LogbooksController.html":{}}}],["usepkce",{"_index":797,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["user",{"_index":242,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"classes/Attachment.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserJWT.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/CredentialsDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MeasurementPeriodClass.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"controllers/PoliciesController.html":{},"guards/PoliciesGuard.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/PublishedData.html":{},"classes/QueryableClass.html":{},"injectables/RegisteredInterceptor.html":{},"guards/RolesGuard.html":{},"injectables/RolesService.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"classes/UpdateUserIdentityDto.html":{},"classes/UpdateUserSettingsDto.html":{},"classes/User.html":{},"controllers/UserIdentitiesController.html":{},"classes/UserIdentity.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{}}}],["user.'})@apiresponse({status",{"_index":574,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["user._id",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UsersService.html":{}}}],["user.currentgroups",{"_index":949,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"controllers/PoliciesController.html":{}}}],["user.currentgroups.includes(role",{"_index":3717,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.currentgroups.includes(role.admin",{"_index":972,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["user.currentgroups.includes(role.archivemanager",{"_index":973,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["user.currentgroups.includes(role.globalaccess",{"_index":980,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["user.currentgroups.includes(role.ingestor",{"_index":981,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["user.currentgroups.includes(role.proposalingestor",{"_index":983,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["user.currentgroups.some((g",{"_index":925,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["user.dto",{"_index":775,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":1361,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:11",{"_index":1366,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:14",{"_index":1367,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":1365,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:20",{"_index":1363,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":1368,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":1364,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":967,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PoliciesService.html":{},"injectables/UsersService.html":{}}}],["user.id",{"_index":2563,"title":{},"body":{"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UsersService.html":{}}}],["user.interface",{"_index":522,"title":{},"body":{"injectables/AttachmentsService.html":{},"injectables/CaslAbilityFactory.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{},"controllers/UserIdentitiesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.interface.ts",{"_index":2116,"title":{},"body":{"interfaces/JWTUser.html":{}}}],["user.name",{"_index":4269,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.userid",{"_index":2571,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["user.username",{"_index":1415,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["user?.authstrategy",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.username",{"_index":2562,"title":{},"body":{"injectables/LdapStrategy.html":{}}}],["user_create_any",{"_index":4470,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_create_jwt",{"_index":4480,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_create_own",{"_index":4468,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_delete_any",{"_index":4478,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_delete_own",{"_index":4476,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_id",{"_index":847,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["user_read_any",{"_index":4466,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_read_own",{"_index":4464,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_update_any",{"_index":4474,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_update_own",{"_index":4472,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userbyoidcsub(oidcsub",{"_index":66,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["usercreateany",{"_index":4469,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["usercreatejwt",{"_index":4479,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["usercreateown",{"_index":4467,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userdeleteany",{"_index":4477,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userdeleteown",{"_index":4475,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userdocument",{"_index":776,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userexists",{"_index":2559,"title":{},"body":{"injectables/LdapStrategy.html":{},"injectables/UsersService.html":{}}}],["userexists(filter",{"_index":4314,"title":{},"body":{"injectables/UsersService.html":{}}}],["userfilter",{"_index":810,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/OidcStrategy.html":{},"injectables/UsersService.html":{}}}],["usergroups",{"_index":1931,"title":{},"body":{"interfaces/IDatasetFields.html":{},"interfaces/IDateRange.html":{},"interfaces/IProposalFieldObject.html":{},"interfaces/IProposalFields.html":{}}}],["userid",{"_index":74,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CaslAbilityFactory.html":{},"classes/CreateUserIdentityDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/CreateUserSettingsDto.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"injectables/PoliciesService.html":{},"injectables/RolesService.html":{},"controllers/UserIdentitiesController.html":{},"classes/UserIdentity.html":{},"interfaces/UserPayload.html":{},"classes/UserRole.html":{},"classes/UserSettings.html":{},"injectables/UsersService.html":{}}}],["useridentities",{"_index":4046,"title":{},"body":{"controllers/UserIdentitiesController.html":{}}}],["useridentitiescontroller",{"_index":4043,"title":{"controllers/UserIdentitiesController.html":{}},"body":{"controllers/UserIdentitiesController.html":{},"modules/UsersModule.html":{}}}],["useridentitiesservice",{"_index":4056,"title":{"injectables/UserIdentitiesService.html":{}},"body":{"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["useridentity",{"_index":901,"title":{"classes/UserIdentity.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PoliciesService.html":{},"controllers/UserIdentitiesController.html":{},"injectables/UserIdentitiesService.html":{},"classes/UserIdentity.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["useridentity.name",{"_index":4268,"title":{},"body":{"modules/UsersModule.html":{}}}],["useridentity.profile",{"_index":2574,"title":{},"body":{"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["useridentity.profile.email",{"_index":3294,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["useridentitydocument",{"_index":4086,"title":{},"body":{"injectables/UserIdentitiesService.html":{},"classes/UserIdentity.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["useridentitymodel",{"_index":4084,"title":{},"body":{"injectables/UserIdentitiesService.html":{},"injectables/UsersService.html":{}}}],["useridentityschema",{"_index":4099,"title":{},"body":{"classes/UserIdentity.html":{},"modules/UsersModule.html":{}}}],["userids",{"_index":4357,"title":{},"body":{"injectables/UsersService.html":{}}}],["userids.foreach(async",{"_index":4360,"title":{},"body":{"injectables/UsersService.html":{}}}],["userinfo",{"_index":800,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["userinfo.email",{"_index":862,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["userinfo.name",{"_index":859,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["userinfo.preferred_username",{"_index":858,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["userinfo.sub",{"_index":852,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["userinfo.thumbnailphoto",{"_index":831,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["userinfo.user_id",{"_index":853,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["userinforesponse",{"_index":777,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["usermodel",{"_index":4281,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"classes/CreateUserDto.html":{},"classes/CredentialsDto.html":{},"injectables/DatablocksService.html":{},"injectables/DatasetsService.html":{},"classes/HistoryClass.html":{},"interfaces/JWTUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogbooksService.html":{},"injectables/OidcStrategy.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"classes/PublishedData.html":{},"controllers/PublishedDataController.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{},"classes/User.html":{},"interfaces/UserPayload.html":{},"classes/UserProfile.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["userpayload",{"_index":50,"title":{"interfaces/UserPayload.html":{}},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"injectables/AccessGroupFromMultipleProvidersService.html":{},"injectables/AccessGroupFromPayloadService.html":{},"classes/AccessGroupService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"interfaces/UserPayload.html":{},"injectables/UsersService.html":{}}}],["userpayload.payload",{"_index":120,"title":{},"body":{"injectables/AccessGroupFromPayloadService.html":{}}}],["userpayload.userid",{"_index":75,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{}}}],["userpayload?.accessgroupproperty",{"_index":118,"title":{},"body":{"injectables/AccessGroupFromPayloadService.html":{}}}],["userprofile",{"_index":781,"title":{"classes/UserProfile.html":{}},"body":{"classes/BuildOpenIdClient.html":{},"classes/CreateUserIdentityDto.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"classes/UserIdentity.html":{},"classes/UserProfile.html":{},"injectables/UsersService.html":{}}}],["userprofile.accessgroups",{"_index":808,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"injectables/UsersService.html":{}}}],["userprofile.email",{"_index":805,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{},"injectables/UsersService.html":{}}}],["userprofile.id",{"_index":803,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{},"injectables/UsersService.html":{}}}],["userprofile.username",{"_index":804,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{},"injectables/UsersService.html":{}}}],["userprofiledocument",{"_index":4110,"title":{},"body":{"classes/UserProfile.html":{},"miscellaneous/typealiases.html":{}}}],["userprofileschema",{"_index":4111,"title":{},"body":{"classes/UserProfile.html":{}}}],["userreadany",{"_index":4465,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userreadown",{"_index":4463,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userrole",{"_index":2671,"title":{"classes/UserRole.html":{}},"body":{"injectables/LocalStrategy.html":{},"injectables/RolesService.html":{},"classes/UserRole.html":{},"modules/UsersModule.html":{}}}],["userrole.name",{"_index":4270,"title":{},"body":{"modules/UsersModule.html":{}}}],["userrole.roleid",{"_index":3781,"title":{},"body":{"injectables/RolesService.html":{}}}],["userroledocument",{"_index":3752,"title":{},"body":{"injectables/RolesService.html":{},"classes/UserRole.html":{},"miscellaneous/typealiases.html":{}}}],["userroleexists",{"_index":3725,"title":{},"body":{"injectables/RolesService.html":{}}}],["userroleexists(filter",{"_index":3748,"title":{},"body":{"injectables/RolesService.html":{}}}],["userrolemodel",{"_index":3727,"title":{},"body":{"injectables/RolesService.html":{}}}],["userroles",{"_index":2674,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/RolesService.html":{}}}],["userroles.map",{"_index":3779,"title":{},"body":{"injectables/RolesService.html":{}}}],["userroles.map((r",{"_index":2676,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userroleschema",{"_index":4116,"title":{},"body":{"classes/UserRole.html":{},"modules/UsersModule.html":{}}}],["users",{"_index":401,"title":{},"body":{"classes/Attachment.html":{},"controllers/AuthController.html":{},"injectables/CaslAbilityFactory.html":{},"classes/Datablock.html":{},"classes/Instrument.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["users.'})@prop({type",{"_index":410,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["users.controller",{"_index":4265,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1407,"title":{},"body":{"injectables/CreateUserSettingsInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/login",{"_index":2759,"title":{},"body":{"injectables/LogbooksService.html":{}}}],["users/users.module",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{}}}],["userschema",{"_index":4041,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{}}}],["userscontroller",{"_index":4133,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userservice",{"_index":688,"title":{},"body":{"modules/AuthModule.html":{}}}],["usersetting",{"_index":4130,"title":{},"body":{"classes/UserSettings.html":{}}}],["usersettings",{"_index":903,"title":{"classes/UserSettings.html":{}},"body":{"injectables/CaslAbilityFactory.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"classes/User.html":{},"classes/UserSettings.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["usersettings.name",{"_index":4271,"title":{},"body":{"modules/UsersModule.html":{}}}],["usersettingsdocument",{"_index":4129,"title":{},"body":{"classes/UserSettings.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["usersettingsmodel",{"_index":4282,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersettingsschema",{"_index":4038,"title":{},"body":{"classes/User.html":{},"classes/UserSettings.html":{},"modules/UsersModule.html":{}}}],["usersgroups",{"_index":4246,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["usersgroups.includes(role.admin",{"_index":4249,"title":{},"body":{"injectables/UsersLogbooksInterceptor.html":{}}}],["userslogbooksinterceptor",{"_index":2712,"title":{"injectables/UsersLogbooksInterceptor.html":{}},"body":{"controllers/LogbooksController.html":{},"injectables/UsersLogbooksInterceptor.html":{}}}],["usersmodule",{"_index":207,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PoliciesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":678,"title":{"injectables/UsersService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BuildOpenIdClient.html":{},"injectables/CreateUserSettingsInterceptor.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"injectables/PoliciesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["userupdateany",{"_index":4473,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userupdateown",{"_index":4471,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["uses",{"_index":557,"title":{},"body":{"controllers/AuthController.html":{}}}],["using",{"_index":1174,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"controllers/JobsController.html":{},"classes/MeasurementPeriodClass.html":{},"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["usually",{"_index":419,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateTechniqueDto.html":{},"classes/Datablock.html":{},"classes/LifecycleClass.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/TechniqueClass.html":{},"classes/UpdateDatasetDto.html":{}}}],["utc",{"_index":1173,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/MeasurementPeriodClass.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"classes/UpdateDatasetDto.html":{}}}],["utctimeinterceptor",{"_index":3867,"title":{"injectables/UTCTimeInterceptor.html":{}},"body":{"injectables/UTCTimeInterceptor.html":{}}}],["utf",{"_index":2491,"title":{},"body":{"injectables/JobsService.html":{}}}],["utf8",{"_index":4326,"title":{},"body":{"injectables/UsersService.html":{}}}],["utils",{"_index":1834,"title":{},"body":{"injectables/FormatPhysicalQuantitiesInterceptor.html":{},"injectables/MultiUTCTimeInterceptor.html":{},"injectables/UTCTimeInterceptor.html":{}}}],["utils.sendmail",{"_index":2828,"title":{},"body":{"injectables/MailService.html":{}}}],["uuid",{"_index":465,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"classes/OrigDatablock.html":{},"classes/Policy.html":{},"classes/PublishedData.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":464,"title":{},"body":{"classes/Attachment.html":{},"classes/CreateTechniqueDto.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"classes/OrigDatablock.html":{},"classes/Policy.html":{},"classes/PublishedData.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/TechniqueClass.html":{}}}],["uuidv4.'})@isstring",{"_index":1359,"title":{},"body":{"classes/CreateTechniqueDto.html":{}}}],["uuidv4.'})@prop({type",{"_index":3862,"title":{},"body":{"classes/TechniqueClass.html":{}}}],["v.trim",{"_index":913,"title":{},"body":{"injectables/CaslAbilityFactory.html":{}}}],["v3.x",{"_index":4516,"title":{},"body":{"index.html":{}}}],["v4",{"_index":463,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/HistoryClass.html":{},"classes/Instrument.html":{},"classes/Job.html":{},"classes/OrigDatablock.html":{},"classes/Policy.html":{},"classes/PublishedData.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["v4.x",{"_index":4506,"title":{},"body":{"index.html":{}}}],["valid",{"_index":2985,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"index.html":{}}}],["validate",{"_index":559,"title":{},"body":{"controllers/AuthController.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OidcStrategy.html":{},"controllers/OrigDatablocksController.html":{}}}],["validate(dtotestorigdatablock",{"_index":3036,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["validate(payload",{"_index":2520,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LdapStrategy.html":{}}}],["validate(tokenset",{"_index":799,"title":{},"body":{"classes/BuildOpenIdClient.html":{},"injectables/OidcStrategy.html":{}}}],["validate(username",{"_index":2668,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validated",{"_index":1884,"title":{},"body":{"classes/HistoryClass.html":{},"controllers/OrigDatablocksController.html":{}}}],["validatejob",{"_index":2171,"title":{},"body":{"controllers/JobsController.html":{}}}],["validatejob(createjobdto",{"_index":2206,"title":{},"body":{"controllers/JobsController.html":{}}}],["validatenested",{"_index":1085,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreateProposalDto.html":{}}}],["validatepermission",{"_index":3237,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["validatepermission(ownergroup",{"_index":3254,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["validates",{"_index":2984,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["validateuser",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{}}}],["validating",{"_index":4702,"title":{},"body":{"index.html":{}}}],["validation",{"_index":2988,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"index.html":{}}}],["validationerror",{"_index":3008,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["validationstatus",{"_index":3892,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["validator",{"_index":1019,"title":{},"body":{"classes/CreateAttachmentDto.html":{},"classes/CreateCustomJwt.html":{},"classes/CreateDatablockDto.html":{},"classes/CreateInstrumentDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateMeasurementPeriodDto.html":{},"classes/CreateOrigDatablockDto.html":{},"classes/CreatePolicyDto.html":{},"classes/CreateProposalDto.html":{},"classes/CreatePublishedDataDto.html":{},"classes/CreateRelationshipDto.html":{},"classes/CreateSampleDto.html":{},"classes/CreateTechniqueDto.html":{},"classes/DataFileDto.html":{},"classes/DatasetListDto.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableDto.html":{},"classes/PartialUpdateDerivedDatasetDto.html":{},"classes/PartialUpdateRawDatasetDto.html":{},"classes/UpdateAttachmentDto.html":{},"classes/UpdateProposalDto.html":{},"classes/UpdateWherePolicyDto.html":{},"dependencies.html":{},"index.html":{}}}],["value",{"_index":397,"title":{},"body":{"classes/Attachment.html":{},"classes/BuildOpenIdClient.html":{},"classes/CreateSampleDto.html":{},"classes/Datablock.html":{},"injectables/DatasetsService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/LdapStrategy.html":{},"injectables/MailService.html":{},"injectables/OidcStrategy.html":{},"classes/OrigDatablock.html":{},"controllers/OrigDatablocksController.html":{},"classes/OwnableClass.html":{},"injectables/PoliciesService.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{},"classes/UpdateDatasetDto.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["valuerequested",{"_index":1860,"title":{},"body":{"injectables/FullQueryInterceptor.html":{}}}],["values",{"_index":127,"title":{},"body":{"injectables/AccessGroupFromStaticValuesService.html":{},"injectables/DatasetsService.html":{},"injectables/JobsService.html":{},"classes/Policy.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{}}}],["values.service.ts",{"_index":125,"title":{},"body":{"injectables/AccessGroupFromStaticValuesService.html":{}}}],["values.service.ts:8",{"_index":129,"title":{},"body":{"injectables/AccessGroupFromStaticValuesService.html":{}}}],["vanilla",{"_index":4597,"title":{},"body":{"index.html":{}}}],["variables",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"controllers/PublishedDataController.html":{},"index.html":{}}}],["vars",{"_index":3033,"title":{},"body":{"controllers/OrigDatablocksController.html":{}}}],["verified",{"_index":4001,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["version",{"_index":1044,"title":{},"body":{"classes/CreateDatablockDto.html":{},"classes/Datablock.html":{},"classes/UpdateDatasetDto.html":{},"index.html":{},"properties.html":{}}}],["via",{"_index":2185,"title":{},"body":{"controllers/JobsController.html":{}}}],["view",{"_index":950,"title":{},"body":{"injectables/CaslAbilityFactory.html":{},"classes/UserSettings.html":{}}}],["vieweduser",{"_index":4234,"title":{},"body":{"controllers/UsersController.html":{}}}],["vieweduserid",{"_index":4149,"title":{},"body":{"controllers/UsersController.html":{}}}],["vieweduserschema",{"_index":4197,"title":{},"body":{"controllers/UsersController.html":{}}}],["vieweduserschema._id",{"_index":4198,"title":{},"body":{"controllers/UsersController.html":{}}}],["vieweduserschema.id",{"_index":4199,"title":{},"body":{"controllers/UsersController.html":{}}}],["vocabularies",{"_index":3942,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["void",{"_index":34,"title":{},"body":{"injectables/AccessGroupFromGraphQLApiService.html":{},"controllers/JobsController.html":{},"injectables/LdapStrategy.html":{}}}],["volume",{"_index":4555,"title":{},"body":{"index.html":{}}}],["want",{"_index":2970,"title":{},"body":{"controllers/OrigDatablocksController.html":{},"controllers/PoliciesController.html":{},"index.html":{}}}],["warning",{"_index":3261,"title":{},"body":{"injectables/PoliciesService.html":{}}}],["warranties",{"_index":4759,"title":{},"body":{"license.html":{}}}],["way",{"_index":4790,"title":{},"body":{"license.html":{}}}],["ways",{"_index":4569,"title":{},"body":{"index.html":{}}}],["when.'})@isarray()@isoptional()@validatenested({each",{"_index":1252,"title":{},"body":{"classes/CreateProposalDto.html":{}}}],["when.'})@prop({type",{"_index":3365,"title":{},"body":{"classes/ProposalClass.html":{}}}],["whereclause",{"_index":1648,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/PublishedDataService.html":{}}}],["wherefilter",{"_index":1634,"title":{},"body":{"injectables/DatasetsService.html":{},"injectables/InstrumentsService.html":{},"injectables/OrigDatablocksService.html":{},"injectables/PoliciesService.html":{},"injectables/ProposalsService.html":{},"injectables/PublishedDataService.html":{},"injectables/SamplesService.html":{}}}],["wherefilters",{"_index":2379,"title":{},"body":{"injectables/JobsService.html":{},"controllers/PublishedDataController.html":{}}}],["whether",{"_index":4784,"title":{},"body":{"license.html":{}}}],["whoami",{"_index":549,"title":{},"body":{"controllers/AuthController.html":{}}}],["whoami(req",{"_index":592,"title":{},"body":{"controllers/AuthController.html":{}}}],["with.'})@isoptional()@isstring({each",{"_index":3973,"title":{},"body":{"classes/UpdateDatasetDto.html":{}}}],["within",{"_index":1435,"title":{},"body":{"classes/DataFile.html":{},"classes/DataFileDto.html":{},"classes/Instrument.html":{},"classes/Job.html":{}}}],["without",{"_index":1170,"title":{},"body":{"classes/CreateMeasurementPeriodDto.html":{},"classes/DataFile.html":{},"classes/DataFileDto.html":{},"injectables/DatasetsService.html":{},"classes/MeasurementPeriodClass.html":{},"classes/UpdateDatasetDto.html":{},"license.html":{}}}],["workflow",{"_index":3465,"title":{},"body":{"classes/PublishedData.html":{}}}],["working",{"_index":4694,"title":{},"body":{"index.html":{}}}],["write",{"_index":412,"title":{},"body":{"classes/Attachment.html":{},"classes/Datablock.html":{},"classes/OrigDatablock.html":{},"classes/OwnableClass.html":{},"classes/Policy.html":{},"classes/ProposalClass.html":{},"classes/SampleClass.html":{},"classes/SampleWithAttachmentsAndDatasets.html":{}}}],["written",{"_index":3910,"title":{},"body":{"classes/UpdateDatasetDto.html":{},"license.html":{}}}],["x",{"_index":2244,"title":{},"body":{"controllers/JobsController.html":{}}}],["x.files.filter",{"_index":2269,"title":{},"body":{"controllers/JobsController.html":{}}}],["x.files.length",{"_index":2245,"title":{},"body":{"controllers/JobsController.html":{}}}],["x.pid",{"_index":2247,"title":{},"body":{"controllers/JobsController.html":{}}}],["xml",{"_index":3584,"title":{},"body":{"controllers/PublishedDataController.html":{}}}],["y",{"_index":1910,"title":{},"body":{"interfaces/IAxiosError.html":{},"interfaces/IDatafileFilter.html":{},"interfaces/IFacets.html":{},"interfaces/IFilters.html":{},"interfaces/ILimitsFilter.html":{},"interfaces/IProposalAcceptedMessage.html":{},"interfaces/IProposalMember.html":{},"interfaces/IScientificFilter.html":{}}}],["year",{"_index":3443,"title":{},"body":{"classes/PublishedData.html":{}}}],["years",{"_index":3332,"title":{},"body":{"classes/Policy.html":{},"index.html":{}}}],["yes",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"injectables/AttachmentsService.html":{},"controllers/InstrumentsController.html":{},"controllers/JobsController.html":{},"controllers/OrigDatablocksController.html":{},"injectables/OrigDatablocksService.html":{},"controllers/PoliciesController.html":{},"controllers/PublishedDataController.html":{},"controllers/UserIdentitiesController.html":{},"index.html":{}}}],["yet.'})@prop({default",{"_index":2588,"title":{},"body":{"classes/LifecycleClass.html":{}}}],["zoom",{"_index":176,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/AttachmentsModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CommonModule.html":{},"modules/DatablocksModule.html":{},"modules/DatasetsModule.html":{},"modules/InitialDatasetsModule.html":{},"modules/InstrumentsModule.html":{},"modules/JobsModule.html":{},"modules/LogbooksModule.html":{},"modules/OrigDatablocksModule.html":{},"modules/PoliciesModule.html":{},"modules/ProposalsModule.html":{},"modules/PublishedDataModule.html":{},"modules/SamplesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AccessGroupFromGraphQLApiService.html":{"url":"injectables/AccessGroupFromGraphQLApiService.html","title":"injectable - AccessGroupFromGraphQLApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessGroupFromGraphQLApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/access-group-provider/access-group-from-graphql-api-call.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is used to fetch access groups from a GraphQL API.\n\n            \n\n            \n                Extends\n            \n            \n                        AccessGroupService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                callGraphQLApi\n                            \n                            \n                                    Async\n                                getAccessGroups\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(graphqlTemplateQuery: string, apiUrl: string, headers: Record, responseProcessor: (response: Record) => void, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/access-group-provider/access-group-from-graphql-api-call.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        graphqlTemplateQuery\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        headers\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseProcessor\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        callGraphQLApi\n                        \n                    \n                \n            \n            \n                \n                    \n                    callGraphQLApi(query: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/access-group-provider/access-group-from-graphql-api-call.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAccessGroups\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessGroups(userPayload: UserPayload)\n                \n            \n\n\n            \n                \n                    Inherited from         AccessGroupService\n\n                \n            \n            \n                \n                        Defined in         AccessGroupService:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AccessGroupService as AccessGroupService } from \"./access-group.service\";\nimport { Injectable, Logger } from \"@nestjs/common\";\n///import fetch from \"node-fetch\";\n\nimport { UserPayload } from \"../interfaces/userPayload.interface\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { firstValueFrom } from \"rxjs\";\n\n/**\n * This service is used to fetch access groups from a GraphQL API.\n */\n@Injectable()\nexport class AccessGroupFromGraphQLApiService extends AccessGroupService {\n  constructor(\n    private graphqlTemplateQuery: string, // e.g. `userByOIDCSub(oidcSub: \"{{oidcSub}}\"){ proposals { proposalId } }`\n    private apiUrl: string,\n    private headers: Record,\n    private responseProcessor: (response: Record) => string[],\n    private readonly httpService: HttpService,\n  ) {\n    super();\n  }\n\n  async getAccessGroups(\n    //idpPayload: Record,\n    userPayload: UserPayload,\n  ): Promise {\n    const userId = userPayload.userId as string;\n    const query = this.graphqlTemplateQuery.replace(\"{{userId}}\", userId);\n    const response = await this.callGraphQLApi(query);\n    const accessGroups = this.responseProcessor(response);\n\n    Logger.log(\n      \"Access groups from graphql api call getAccessGroups: \" +\n        accessGroups.join(\",\"),\n    );\n    return accessGroups;\n  }\n\n  async callGraphQLApi(query: string): Promise> {\n    const response = await firstValueFrom(\n      this.httpService.post(\n        this.apiUrl,\n        { query },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            ...this.headers,\n          },\n        },\n      ),\n    );\n    return response.data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessGroupFromMultipleProvidersService.html":{"url":"injectables/AccessGroupFromMultipleProvidersService.html","title":"injectable - AccessGroupFromMultipleProvidersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessGroupFromMultipleProvidersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/access-group-provider/access-group-from-multiple-providers.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is used to get the access groups from multiple providers.\n\n            \n\n            \n                Extends\n            \n            \n                        AccessGroupService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAccessGroups\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessGroupProviders: AccessGroupService[])\n                    \n                \n                        \n                            \n                                Defined in src/auth/access-group-provider/access-group-from-multiple-providers.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accessGroupProviders\n                                                  \n                                                        \n                                                                        AccessGroupService[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAccessGroups\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessGroups(userPayload: UserPayload)\n                \n            \n\n\n            \n                \n                    Inherited from         AccessGroupService\n\n                \n            \n            \n                \n                        Defined in         AccessGroupService:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from \"@nestjs/common\";\nimport { UserPayload } from \"../interfaces/userPayload.interface\";\nimport { AccessGroupService } from \"./access-group.service\";\n\n/**\n * This service is used to get the access groups from multiple providers.\n */\n@Injectable()\nexport class AccessGroupFromMultipleProvidersService extends AccessGroupService {\n  constructor(private accessGroupProviders: AccessGroupService[]) {\n    super();\n  }\n\n  async getAccessGroups(\n    //idpPayload: Record,\n    userPayload: UserPayload,\n  ): Promise {\n    const accessGroups: string[] = [];\n\n    for (const accessGroupProvider of this.accessGroupProviders) {\n      const accessGroupsFromProvider =\n        await accessGroupProvider.getAccessGroups(userPayload);\n      accessGroups.push(...accessGroupsFromProvider);\n    }\n    return accessGroups;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessGroupFromPayloadService.html":{"url":"injectables/AccessGroupFromPayloadService.html","title":"injectable - AccessGroupFromPayloadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessGroupFromPayloadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/access-group-provider/access-group-from-payload.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is used to get the access groups from the payload of the IDP.\n\n            \n\n            \n                Extends\n            \n            \n                        AccessGroupService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAccessGroups\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/access-group-provider/access-group-from-payload.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAccessGroups\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessGroups(userPayload: UserPayload)\n                \n            \n\n\n            \n                \n                    Inherited from         AccessGroupService\n\n                \n            \n            \n                \n                        Defined in         AccessGroupService:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { UserPayload } from \"../interfaces/userPayload.interface\";\nimport { AccessGroupService } from \"./access-group.service\";\n\n/**\n * This service is used to get the access groups from the payload of the IDP.\n */\n@Injectable()\nexport class AccessGroupFromPayloadService extends AccessGroupService {\n  constructor(private configService: ConfigService) {\n    super();\n  }\n\n  async getAccessGroups(userPayload: UserPayload): Promise {\n    //const defaultAccessGroups: string[] = [];\n    let accessGroups: string[] = [];\n\n    const accessGroupsProperty = userPayload?.accessGroupProperty;\n\n    if (accessGroupsProperty) {\n      const payload: Record | undefined = userPayload.payload;\n      if (\n        payload !== undefined &&\n        Array.isArray(payload[accessGroupsProperty])\n      ) {\n        accessGroups =\n          payload[accessGroupsProperty] !== undefined\n            ? (payload[accessGroupsProperty] as string[])\n            : [];\n      }\n    }\n\n    Logger.log(\n      \"Access groups AccessGroupFromPayloadService : \" + accessGroups.join(\",\"),\n    );\n    return accessGroups;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessGroupFromStaticValuesService.html":{"url":"injectables/AccessGroupFromStaticValuesService.html","title":"injectable - AccessGroupFromStaticValuesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessGroupFromStaticValuesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/access-group-provider/access-group-from-static-values.service.ts\n        \n\n\n            \n                Description\n            \n            \n                This service is used to get the access groups from a static list of values.\n\n            \n\n            \n                Extends\n            \n            \n                        AccessGroupService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAccessGroups\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(staticAccessGroups: string[])\n                    \n                \n                        \n                            \n                                Defined in src/auth/access-group-provider/access-group-from-static-values.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        staticAccessGroups\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAccessGroups\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessGroups()\n                \n            \n\n\n            \n                \n                    Inherited from         AccessGroupService\n\n                \n            \n            \n                \n                        Defined in         AccessGroupService:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from \"@nestjs/common\";\nimport { AccessGroupService } from \"./access-group.service\";\n\n/**\n * This service is used to get the access groups from a static list of values.\n */\n@Injectable()\nexport class AccessGroupFromStaticValuesService extends AccessGroupService {\n  constructor(private staticAccessGroups: string[]) {\n    super();\n  }\n\n  async getAccessGroups(): Promise {\n    Logger.log(\n      \"Static access group getAccessGroups : \" +\n        this.staticAccessGroups.join(\",\"),\n    );\n    return this.staticAccessGroups;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccessGroupService.html":{"url":"classes/AccessGroupService.html","title":"class - AccessGroupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessGroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/access-group-provider/access-group.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getAccessGroups\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getAccessGroups\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessGroups(userPayload: UserPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/access-group-provider/access-group.service.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userPayload\n                                    \n                                                UserPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserPayload } from \"../interfaces/userPayload.interface\";\n\nexport abstract class AccessGroupService {\n  abstract getAccessGroups(\n    //idpPayload: Record,\n    userPayload: UserPayload,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                getConfig\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConfig()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AllowAny()@Get('config')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTheme()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AllowAny()@Get('theme')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { ApiTags } from \"@nestjs/swagger\";\nimport { AdminService } from \"./admin.service\";\nimport { AllowAny } from \"src/auth/decorators/allow-any.decorator\";\n\n@ApiTags(\"admin\")\n@Controller(\"admin\")\nexport class AdminController {\n  constructor(private readonly adminService: AdminService) {}\n\n  @AllowAny()\n  @Get(\"config\")\n  async getConfig(): Promise | null> {\n    return this.adminService.getConfig();\n  }\n\n  @AllowAny()\n  @Get(\"theme\")\n  async getTheme(): Promise | null> {\n    return this.adminService.getTheme();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AdminService } from \"./admin.service\";\nimport { AdminController } from \"./admin.controller\";\n\n@Module({\n  controllers: [AdminController],\n  imports: [],\n  providers: [AdminService],\n  exports: [AdminService],\n})\nexport class AdminModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getConfig\n                            \n                            \n                                    Async\n                                getTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport config from \"../config/frontend.config.json\";\nimport theme from \"../config/frontend.theme.json\";\n\n@Injectable()\nexport class AdminService {\n  async getConfig(): Promise | null> {\n    return config;\n  }\n\n  async getTheme(): Promise | null> {\n    return theme;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAttachmentsModule\n\nAttachmentsModule\n\nAppModule -->\n\nAttachmentsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCaslModule\n\nCaslModule\n\nAppModule -->\n\nCaslModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nDatablocksModule\n\nDatablocksModule\n\nAppModule -->\n\nDatablocksModule->AppModule\n\n\n\n\n\nDatasetsModule\n\nDatasetsModule\n\nAppModule -->\n\nDatasetsModule->AppModule\n\n\n\n\n\nInitialDatasetsModule\n\nInitialDatasetsModule\n\nAppModule -->\n\nInitialDatasetsModule->AppModule\n\n\n\n\n\nInstrumentsModule\n\nInstrumentsModule\n\nAppModule -->\n\nInstrumentsModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nLogbooksModule\n\nLogbooksModule\n\nAppModule -->\n\nLogbooksModule->AppModule\n\n\n\n\n\nOrigDatablocksModule\n\nOrigDatablocksModule\n\nAppModule -->\n\nOrigDatablocksModule->AppModule\n\n\n\n\n\nPoliciesModule\n\nPoliciesModule\n\nAppModule -->\n\nPoliciesModule->AppModule\n\n\n\n\n\nProposalsModule\n\nProposalsModule\n\nAppModule -->\n\nProposalsModule->AppModule\n\n\n\n\n\nPublishedDataModule\n\nPublishedDataModule\n\nAppModule -->\n\nPublishedDataModule->AppModule\n\n\n\n\n\nSamplesModule\n\nSamplesModule\n\nAppModule -->\n\nSamplesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            AttachmentsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CaslModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            DatablocksModule\n                        \n                        \n                            DatasetsModule\n                        \n                        \n                            InitialDatasetsModule\n                        \n                        \n                            InstrumentsModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            LogbooksModule\n                        \n                        \n                            OrigDatablocksModule\n                        \n                        \n                            PoliciesModule\n                        \n                        \n                            ProposalsModule\n                        \n                        \n                            PublishedDataModule\n                        \n                        \n                            SamplesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \n                    \n                    onApplicationBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Logger, Module, OnApplicationBootstrap } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { DatasetsModule } from \"./datasets/datasets.module\";\nimport { AuthModule } from \"./auth/auth.module\";\nimport { UsersModule } from \"./users/users.module\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { CaslModule } from \"./casl/casl.module\";\nimport configuration from \"./config/configuration\";\nimport { APP_GUARD, Reflector } from \"@nestjs/core\";\nimport { JwtAuthGuard } from \"./auth/guards/jwt-auth.guard\";\nimport { AttachmentsModule } from \"./attachments/attachments.module\";\nimport { OrigDatablocksModule } from \"./origdatablocks/origdatablocks.module\";\nimport { DatablocksModule } from \"./datablocks/datablocks.module\";\nimport { ProposalsModule } from \"./proposals/proposals.module\";\nimport { SamplesModule } from \"./samples/samples.module\";\nimport { PublishedDataModule } from \"./published-data/published-data.module\";\nimport { LogbooksModule } from \"./logbooks/logbooks.module\";\nimport { PoliciesModule } from \"./policies/policies.module\";\nimport { InitialDatasetsModule } from \"./initial-datasets/initial-datasets.module\";\nimport { JobsModule } from \"./jobs/jobs.module\";\nimport { InstrumentsModule } from \"./instruments/instruments.module\";\nimport { RabbitMQMessageBroker } from \"@user-office-software/duo-message-broker\";\nimport { IProposalAcceptedMessage } from \"./common/interfaces/common.interface\";\nimport { CreateProposalDto } from \"./proposals/dto/create-proposal.dto\";\nimport { ProposalsService } from \"./proposals/proposals.service\";\nimport { MailerModule } from \"@nestjs-modules/mailer\";\nimport { join } from \"path\";\nimport { HandlebarsAdapter } from \"@nestjs-modules/mailer/dist/adapters/handlebars.adapter\";\nimport { formatCamelCase, unwrapJSON } from \"./common/handlebars-helpers\";\nimport { CommonModule } from \"./common/common.module\";\nimport { EventEmitterModule } from \"@nestjs/event-emitter\";\nimport { AdminModule } from \"./admin/admin.module\";\n\n@Module({\n  imports: [\n    AttachmentsModule,\n    AuthModule,\n    CaslModule,\n    CommonModule,\n    ConfigModule.forRoot({\n      load: [configuration],\n    }),\n    DatablocksModule,\n    DatasetsModule,\n    InitialDatasetsModule,\n    InstrumentsModule,\n    JobsModule,\n    LogbooksModule,\n    EventEmitterModule.forRoot(),\n    MailerModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        const port = configService.get(\"smtp.port\");\n        return {\n          transport: {\n            host: configService.get(\"smtp.host\"),\n            port: port ? parseInt(port) : undefined,\n            secure:\n              configService.get(\"smtp.secure\") === \"yes\" ? true : false,\n          },\n          defaults: {\n            from: configService.get(\"smtp.messageFrom\"),\n          },\n          template: {\n            dir: join(__dirname, \"./common/email-templates\"),\n            adapter: new HandlebarsAdapter({\n              unwrapJSON: (json) => unwrapJSON(json),\n              keyToWord: (string) => formatCamelCase(string),\n              eq: (a, b) => a === b,\n            }),\n            options: {\n              strict: true,\n            },\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get(\"mongodbUri\"),\n      }),\n      inject: [ConfigService],\n    }),\n    OrigDatablocksModule,\n    PoliciesModule,\n    ProposalsModule,\n    PublishedDataModule,\n    SamplesModule,\n    UsersModule,\n    AdminModule,\n  ],\n  controllers: [],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useFactory: (ref) => new JwtAuthGuard(ref),\n      inject: [Reflector],\n    },\n  ],\n})\nexport class AppModule implements OnApplicationBootstrap {\n  constructor(\n    private configService: ConfigService,\n    private proposalsService: ProposalsService,\n  ) {}\n\n  async onApplicationBootstrap() {\n    const rabbitMqEnabled =\n      this.configService.get(\"rabbitMq.enabled\") === \"yes\"\n        ? true\n        : false;\n    if (rabbitMqEnabled) {\n      const hostname = this.configService.get(\"rabbitMq.hostname\");\n      const username = this.configService.get(\"rabbitMq.username\");\n      const password = this.configService.get(\"rabbitMq.password\");\n\n      if (!hostname || !username || !password) {\n        Logger.error(\n          \"RabbitMQ enabled but missing one or more config variables\",\n          \"AppModule\",\n        );\n        return;\n      }\n\n      const rabbitMq = new RabbitMQMessageBroker();\n\n      await rabbitMq.setup({\n        hostname,\n        username,\n        password,\n      });\n\n      await rabbitMq.listenOnBroadcast(async (type, message: unknown) => {\n        if (type === \"PROPOSAL_ACCEPTED\") {\n          Logger.log(\n            \"PROPOSAL_ACCEPTED: \" + JSON.stringify(message),\n            \"AppModule\",\n          );\n\n          const proposalAcceptedMessage = message as IProposalAcceptedMessage;\n\n          const proposal: CreateProposalDto = {\n            proposalId: proposalAcceptedMessage.shortCode,\n            title: proposalAcceptedMessage.title,\n            pi_email: proposalAcceptedMessage.proposer?.email,\n            pi_firstname: proposalAcceptedMessage.proposer?.firstName,\n            pi_lastname: proposalAcceptedMessage.proposer?.lastName,\n            email: proposalAcceptedMessage.proposer?.email,\n            firstname: proposalAcceptedMessage.proposer?.firstName,\n            lastname: proposalAcceptedMessage.proposer?.lastName,\n            abstract: proposalAcceptedMessage.abstract,\n            ownerGroup: \"ess\",\n            accessGroups: [],\n          };\n\n          try {\n            const createdProposal = await this.proposalsService.create(\n              proposal,\n            );\n            Logger.log(\n              `Proposal created/updated: ${createdProposal.proposalId}`,\n              \"AppModule\",\n            );\n          } catch (error) {\n            Logger.error(\n              \"Creating/updating proposal failed: \" + error,\n              \"AppModule\",\n            );\n          }\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Attachment.html":{"url":"classes/Attachment.html","title":"class - Attachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Attachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attachments/schemas/attachment.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OwnableClass\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                caption\n                            \n                            \n                                    \n                                    \n                                datasetId\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                proposalId\n                            \n                            \n                                    \n                                    \n                                sampleId\n                            \n                            \n                                    \n                                    \n                                thumbnail\n                            \n                            \n                                    \n                                    \n                                accessGroups\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                instrumentGroup\n                            \n                            \n                                    \n                                    \n                                ownerGroup\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attachments/schemas/attachment.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        caption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Attachment caption to show in frontend.'})@Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attachments/schemas/attachment.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        datasetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false})@Prop({type: String, ref: 'Dataset', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attachments/schemas/attachment.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, default: () => })@Prop({type: String, default: () => , sparse: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attachments/schemas/attachment.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        proposalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false})@Prop({type: String, ref: 'Proposal', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attachments/schemas/attachment.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sampleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false})@Prop({type: String, ref: 'Sample', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attachments/schemas/attachment.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'A small, base64-encoded image. Must have a MIME content-header; e.g. 'data:image/png;base64,{the-image-in-base64}'.'})@Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attachments/schemas/attachment.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'Optional additional groups which have read access to the data. Users which are members in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users.'})@Prop({type: undefined, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        instrumentGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Optional additional groups which have read and write access to the data. Users which are members in one of the groups listed here are allowed to access this data.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ownerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151'})@Prop({type: String, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was created. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:40\n\n                        \n                    \n\n            \n                \n                    NOTE: createdAt and updatedAt properties are handled automatically by mongoose when timestamps flag is set to true on a schema(https://mongoosejs.com/docs/guide.html#timestamps).\nWe still need to keep the fields available here because of the response model and swagger documentation. They are not required so we don't need to provide them manually on create/update.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who created this record. This property is added and maintained by the system.'})@Prop({type: String, index: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was updated last. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who updated this record last. This property is added and maintained by the system.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:26\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Document } from \"mongoose\";\nimport { OwnableClass } from \"src/common/schemas/ownable.schema\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport type AttachmentDocument = Attachment & Document;\n\n@Schema({\n  collection: \"Attachment\",\n  toJSON: {\n    getters: true,\n  },\n  timestamps: true,\n})\nexport class Attachment extends OwnableClass {\n  @ApiProperty({ type: String, default: () => uuidv4() })\n  @Prop({\n    type: String,\n    default: () => uuidv4(),\n    sparse: true,\n  })\n  id: string;\n\n  @Prop({\n    type: String,\n  })\n  _id: string;\n\n  @ApiProperty({\n    type: String,\n    description:\n      \"A small, base64-encoded image. Must have a MIME content-header; e.g. 'data:image/png;base64,{the-image-in-base64}'.\",\n  })\n  @Prop({ type: String })\n  thumbnail: string;\n\n  @ApiProperty({\n    type: String,\n    description: \"Attachment caption to show in frontend.\",\n  })\n  @Prop({ type: String })\n  caption: string;\n\n  @ApiProperty({ type: String, required: false })\n  @Prop({ type: String, ref: \"Dataset\", required: false })\n  datasetId: string;\n\n  @ApiProperty({ type: String, required: false })\n  @Prop({ type: String, ref: \"Proposal\", required: false })\n  proposalId: string;\n\n  @ApiProperty({ type: String, required: false })\n  @Prop({ type: String, ref: \"Sample\", required: false })\n  sampleId: string;\n}\n\nexport const AttachmentSchema = SchemaFactory.createForClass(Attachment);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AttachmentsModule.html":{"url":"modules/AttachmentsModule.html","title":"module - AttachmentsModule","body":"\n                   \n\n\n\n\n    Modules\n    AttachmentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AttachmentsModule\n\n\n\ncluster_AttachmentsModule_providers\n\n\n\ncluster_AttachmentsModule_exports\n\n\n\n\nAttachmentsService \n\nAttachmentsService \n\n\n\nAttachmentsModule\n\nAttachmentsModule\n\nAttachmentsService  -->\n\nAttachmentsModule->AttachmentsService \n\n\n\n\n\nAttachmentsService\n\nAttachmentsService\n\nAttachmentsModule -->\n\nAttachmentsService->AttachmentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/attachments/attachments.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AttachmentsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AttachmentsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { AttachmentsService } from \"./attachments.service\";\nimport { Attachment, AttachmentSchema } from \"./schemas/attachment.schema\";\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Attachment.name,\n        //schema: AttachmentSchema,\n\n        useFactory: () => {\n          const schema = AttachmentSchema;\n\n          schema.pre(\"save\", function (next) {\n            // if _id is empty or differnet than pid,\n            // set _id to pid\n            if (!this._id) {\n              this._id = this.id;\n            }\n            next();\n          });\n\n          return schema;\n        },\n      },\n    ]),\n  ],\n  providers: [AttachmentsService],\n  exports: [AttachmentsService],\n})\nexport class AttachmentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AttachmentsService.html":{"url":"injectables/AttachmentsService.html","title":"injectable - AttachmentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AttachmentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attachments/attachments.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneAndRemove\n                            \n                            \n                                    Async\n                                findOneAndUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attachmentModel: Model, request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/attachments/attachments.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        attachmentModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createAttachmentDto: CreateAttachmentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/attachments/attachments.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAttachmentDto\n                                    \n                                                CreateAttachmentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/attachments/attachments.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: FilterQuery, projection?: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/attachments/attachments.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projection\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneAndRemove\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAndRemove(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/attachments/attachments.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneAndUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAndUpdate(filter: FilterQuery, updateAttachmentDto: UpdateAttachmentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/attachments/attachments.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateAttachmentDto\n                                    \n                                                UpdateAttachmentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Scope } from \"@nestjs/common\";\nimport { REQUEST } from \"@nestjs/core\";\nimport { Request } from \"express\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { FilterQuery, Model } from \"mongoose\";\nimport { CreateAttachmentDto } from \"./dto/create-attachment.dto\";\nimport { UpdateAttachmentDto } from \"./dto/update-attachment.dto\";\nimport { Attachment, AttachmentDocument } from \"./schemas/attachment.schema\";\nimport { JWTUser } from \"src/auth/interfaces/jwt-user.interface\";\nimport { addCreatedByFields, addUpdatedByField } from \"src/common/utils\";\n\n@Injectable({ scope: Scope.REQUEST })\nexport class AttachmentsService {\n  constructor(\n    @InjectModel(Attachment.name) private attachmentModel: Model,\n    @Inject(REQUEST) private request: Request,\n  ) {}\n\n  async create(createAttachmentDto: CreateAttachmentDto): Promise {\n    const username = (this.request?.user as JWTUser).username;\n    const createdAttachment = new this.attachmentModel(\n      addCreatedByFields(createAttachmentDto, username),\n    );\n    return createdAttachment.save();\n  }\n\n  async findAll(\n    filter: FilterQuery,\n  ): Promise {\n    return this.attachmentModel.find(filter).exec();\n  }\n\n  async findOne(\n    filter: FilterQuery,\n    projection?: Record,\n  ): Promise {\n    return this.attachmentModel.findOne(filter, projection ?? {}).exec();\n  }\n\n  async findOneAndUpdate(\n    filter: FilterQuery,\n    updateAttachmentDto: UpdateAttachmentDto,\n  ): Promise {\n    const username = (this.request?.user as JWTUser).username;\n    return this.attachmentModel\n      .findOneAndUpdate(\n        filter,\n        addUpdatedByField(updateAttachmentDto, username),\n        { new: true },\n      )\n      .exec();\n  }\n\n  async findOneAndRemove(\n    filter: FilterQuery,\n  ): Promise {\n    return this.attachmentModel.findOneAndRemove(filter).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                ldapLogin\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                loginCallback\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                msadLogin\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                oidcLogin\n                            \n                            \n                                    \n                                    \n                                    Async\n                                whoami\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        ldapLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    ldapLogin(req: Record)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CredentialsDto})@ApiOperation({summary: 'Endpoint to authenticate users through an ldap service.', description: 'This endpoint uses an external ldap service to validate user credentials.'})@AllowAny()@UseGuards(LdapAuthGuard)@Post('ldap')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: Record)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CredentialsDto})@AllowAny()@UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        loginCallback\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginCallback(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AllowAny()@UseGuards(OidcAuthGuard)@Get('oidc/callback')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiOperation({summary: 'It logs the current user out.', description: 'It logs out the current user.'})@ApiResponse({status: 200, description: 'User logged out'})@HttpCode(200)@Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        msadLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    msadLogin(req: Record)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CredentialsDto})@ApiOperation({summary: 'Legacy endpoint to authenticate users through an ldap service.', description: 'This endpoint uses an external ldap service to validate user credentials. It is suggested to migrate to the endpoint /auth/ldap as this one is going to be remove in future releases.'})@AllowAny()@UseGuards(LdapAuthGuard)@Post('msad')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        oidcLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    oidcLogin()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AllowAny()@UseGuards(OidcAuthGuard)@Get('oidc')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        whoami\n                        \n                    \n                \n            \n            \n                \n                    \n                    whoami(req: Record)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('whoami')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  UseGuards,\n  Post,\n  Get,\n  Res,\n  Req,\n  HttpCode,\n} from \"@nestjs/common\";\nimport { LocalAuthGuard } from \"./guards/local-auth.guard\";\nimport { AuthService } from \"./auth.service\";\nimport { JwtAuthGuard } from \"./guards/jwt-auth.guard\";\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { CredentialsDto } from \"./dto/credentials.dto\";\nimport { LdapAuthGuard } from \"./guards/ldap.guard\";\nimport { AllowAny } from \"./decorators/allow-any.decorator\";\nimport { User } from \"src/users/schemas/user.schema\";\nimport { OidcAuthGuard } from \"./guards/oidc.guard\";\nimport { Request, Response } from \"express\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { OidcConfig } from \"src/config/configuration\";\n\n@ApiBearerAuth()\n@ApiTags(\"auth\")\n@Controller(\"auth\")\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private configService: ConfigService,\n  ) {}\n\n  @ApiBody({ type: CredentialsDto })\n  @AllowAny()\n  @UseGuards(LocalAuthGuard)\n  @Post(\"login\")\n  async login(\n    @Req() req: Record,\n  ): Promise> {\n    return await this.authService.login(req.user as Omit);\n  }\n\n  @ApiBody({ type: CredentialsDto })\n  @ApiOperation({\n    summary: \"Legacy endpoint to authenticate users through an ldap service.\",\n    description:\n      \"This endpoint uses an external ldap service to validate user credentials. It is suggested to migrate to the endpoint /auth/ldap as this one is going to be remove in future releases.\",\n  })\n  @AllowAny()\n  @UseGuards(LdapAuthGuard)\n  @Post(\"msad\")\n  async msadLogin(\n    @Req() req: Record,\n  ): Promise> {\n    return await this.authService.login(req.user as Omit);\n  }\n\n  @ApiBody({ type: CredentialsDto })\n  @ApiOperation({\n    summary: \"Endpoint to authenticate users through an ldap service.\",\n    description:\n      \"This endpoint uses an external ldap service to validate user credentials.\",\n  })\n  @AllowAny()\n  @UseGuards(LdapAuthGuard)\n  @Post(\"ldap\")\n  async ldapLogin(\n    @Req() req: Record,\n  ): Promise> {\n    return await this.authService.login(req.user as Omit);\n  }\n\n  @AllowAny()\n  @UseGuards(OidcAuthGuard)\n  @Get(\"oidc\")\n  async oidcLogin() {\n    // this function is invoked when the oidc is set as an auth method. It's behaviour comes from the oidc strategy\n  }\n\n  @AllowAny()\n  @UseGuards(OidcAuthGuard)\n  @Get(\"oidc/callback\")\n  async loginCallback(@Res() res: Response) {\n    const token = await this.authService.login(res.req.user as User);\n    const url = new URL(\n      this.configService.get(\"oidc\")?.successURL ||\n        res.req.headers[\"referer\"] ||\n        \"\",\n    );\n    url.searchParams.append(\"access-token\", token.access_token as string);\n    url.searchParams.append(\"user-id\", token.userId as string);\n    url.searchParams.append(\n      \"returnUrl\",\n      this.configService.get(\"oidc\")?.returnURL || \"/datasets\",\n    );\n    res.redirect(url.toString());\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(\"whoami\")\n  async whoami(\n    @Req() req: Record,\n  ): Promise> {\n    return req.user as Omit;\n  }\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({\n    summary: \"It logs the current user out.\",\n    description: \"It logs out the current user.\",\n  })\n  @ApiResponse({\n    status: 200,\n    description: \"User logged out\",\n  })\n  @HttpCode(200)\n  @Post(\"logout\")\n  async logout(@Req() req: Request) {\n    return this.authService.logout(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nAuthModule -->\n\nCaslAbilityFactory->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLdapStrategy\n\nLdapStrategy\n\nAuthModule -->\n\nLdapStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            CaslAbilityFactory\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LdapStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AuthService } from \"./auth.service\";\nimport { UsersModule } from \"../users/users.module\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { LocalStrategy } from \"./strategies/local.strategy\";\nimport { AuthController } from \"./auth.controller\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { JwtStrategy } from \"./strategies/jwt.strategy\";\nimport { LdapStrategy } from \"./strategies/ldap.strategy\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { UsersService } from \"src/users/users.service\";\nimport { OidcConfig } from \"src/config/configuration\";\nimport { BuildOpenIdClient, OidcStrategy } from \"./strategies/oidc.strategy\";\nimport { accessGroupServiceFactory } from \"./access-group-provider/access-group-service-factory\";\nimport { AccessGroupService } from \"./access-group-provider/access-group.service\";\nimport { CaslAbilityFactory } from \"src/casl/casl-ability.factory\";\n\nconst OidcStrategyFactory = {\n  provide: \"OidcStrategy\",\n  useFactory: async (\n    authService: AuthService,\n    configService: ConfigService,\n    userService: UsersService,\n    accessGroupService: AccessGroupService,\n  ) => {\n    if (!configService.get(\"oidc\")?.issuer) {\n      return null;\n    }\n    const clientBuilder = new BuildOpenIdClient(configService);\n    const client = await clientBuilder.build();\n    const strategy = new OidcStrategy(\n      authService,\n      client,\n      configService,\n      userService,\n      accessGroupService,\n    );\n    return strategy;\n  },\n  inject: [AuthService, ConfigService, UsersService, AccessGroupService],\n};\n\n@Module({\n  imports: [\n    ConfigModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get(\"jwt.secret\"),\n        signOptions: { expiresIn: configService.get(\"jwt.expiresIn\") },\n      }),\n      inject: [ConfigService],\n    }),\n    PassportModule.register({\n      defaultStrategy: \"jwt\",\n      property: \"user\",\n      session: false,\n    }),\n    UsersModule,\n  ],\n  providers: [\n    AuthService,\n    JwtStrategy,\n    LdapStrategy,\n    LocalStrategy,\n    CaslAbilityFactory,\n    OidcStrategyFactory,\n    accessGroupServiceFactory,\n  ],\n  controllers: [AuthController],\n  exports: [AuthService, JwtModule, PassportModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                additionalLogoutTasks\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        additionalLogoutTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    additionalLogoutTasks(req: Request, logoutURL: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    logoutURL\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: Omit)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                Omit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { compare } from \"bcrypt\";\nimport { User } from \"src/users/schemas/user.schema\";\nimport { UsersService } from \"../users/users.service\";\nimport { Request } from \"express\";\nimport { OidcConfig } from \"src/config/configuration\";\nimport { parseBoolean } from \"src/common/utils\";\nimport { Issuer } from \"openid-client\";\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private configService: ConfigService,\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(\n    username: string,\n    pass: string,\n  ): Promise | null> {\n    const user = await this.usersService.findOne({ username }, true);\n\n    if (!user) {\n      return null;\n    }\n\n    // Hacky deep copy of User object, as shallow copy is not enough\n    const { password, ...result } = JSON.parse(JSON.stringify(user));\n    const match = await compare(pass, password);\n\n    if (!match) {\n      return null;\n    }\n\n    return result;\n  }\n\n  async login(user: Omit): Promise> {\n    const expiresIn = this.configService.get(\"jwt.expiresIn\");\n    const accessToken = this.jwtService.sign(user, { expiresIn });\n    return {\n      access_token: accessToken,\n      id: accessToken,\n      expires_in: expiresIn,\n      ttl: expiresIn,\n      created: new Date().toISOString(),\n      userId: user._id,\n      user,\n    };\n  }\n\n  async logout(req: Request) {\n    const logoutURL = this.configService.get(\"logoutURL\") || \"\";\n    const expressSessionSecret = this.configService.get(\n      \"expressSessionSecret\",\n    );\n\n    if (expressSessionSecret) {\n      req.logout(async (err) => {\n        if (err) {\n          // we should provide a message\n          console.log(\"Logout error\");\n          console.log(err);\n          //res.status(HttpStatus.BAD_REQUEST);\n        }\n        return await this.additionalLogoutTasks(req, logoutURL);\n      });\n    } else {\n      return await this.additionalLogoutTasks(req, logoutURL);\n    }\n    if (logoutURL) {\n      return { logout: \"successful\", logoutURL: logoutURL };\n    }\n\n    return { logout: \"successful\" };\n  }\n\n  async additionalLogoutTasks(req: Request, logoutURL: string) {\n    const user = req.user as Omit;\n    if (user?.authStrategy == \"oidc\") {\n      const oidcConfig = this.configService.get(\"oidc\");\n      const autoLogout: boolean = parseBoolean(oidcConfig?.autoLogout || false);\n      if (autoLogout) {\n        const trustIssuer = await Issuer.discover(\n          `${oidcConfig?.issuer}/.well-known/openid-configuration`,\n        );\n        const end_session_endpoint = trustIssuer.metadata.end_session_endpoint;\n        if (end_session_endpoint) {\n          return {\n            logout: \"successful\",\n            logoutURL:\n              end_session_endpoint +\n              (logoutURL ? \"?post_logout_redirect_uri=\" + logoutURL : \"\"),\n          };\n        }\n      }\n    }\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuildOpenIdClient.html":{"url":"classes/BuildOpenIdClient.html","title":"class - BuildOpenIdClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuildOpenIdClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/oidc.strategy.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                build\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/oidc.strategy.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        build\n                        \n                    \n                \n            \n            \n                \n                    \n                    build()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/oidc.strategy.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Logger,\n  InternalServerErrorException,\n} from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { FilterQuery } from \"mongoose\";\nimport { CreateUserIdentityDto } from \"src/users/dto/create-user-identity.dto\";\nimport { CreateUserDto } from \"src/users/dto/create-user.dto\";\nimport { User, UserDocument } from \"src/users/schemas/user.schema\";\nimport { UsersService } from \"src/users/users.service\";\nimport {\n  Strategy,\n  Client,\n  UserinfoResponse,\n  TokenSet,\n  Issuer,\n} from \"openid-client\";\nimport { AuthService } from \"../auth.service\";\nimport { Profile } from \"passport\";\nimport { UserProfile } from \"src/users/schemas/user-profile.schema\";\nimport { OidcConfig } from \"src/config/configuration\";\nimport { AccessGroupService } from \"../access-group-provider/access-group.service\";\nimport { UserPayload } from \"../interfaces/userPayload.interface\";\n\nexport class BuildOpenIdClient {\n  constructor(private configService: ConfigService) {}\n  async build() {\n    const oidcConfig = this.configService.get(\"oidc\");\n    const trustIssuer = await Issuer.discover(\n      `${oidcConfig?.issuer}/.well-known/openid-configuration`,\n    );\n    const client = new trustIssuer.Client({\n      client_id: oidcConfig?.clientID as string,\n      client_secret: oidcConfig?.clientSecret as string,\n    });\n    return client;\n  }\n}\n\n@Injectable()\nexport class OidcStrategy extends PassportStrategy(Strategy, \"oidc\") {\n  client: Client;\n  authStrategy = \"oidc\";\n\n  constructor(\n    private readonly authService: AuthService,\n    client: Client,\n    private configService: ConfigService,\n    private usersService: UsersService,\n    private accessGroupService: AccessGroupService,\n  ) {\n    const oidcConfig = configService.get(\"oidc\");\n    super({\n      client: client,\n      params: {\n        redirect_uri: oidcConfig?.callbackURL,\n        scope: oidcConfig?.scope,\n      },\n      passReqToCallback: false,\n      usePKCE: false,\n    });\n\n    this.client = client;\n  }\n\n  async validate(tokenset: TokenSet): Promise> {\n    const userinfo: UserinfoResponse = await this.client.userinfo(tokenset);\n    const oidcConfig = this.configService.get(\"oidc\");\n\n    const userProfile = this.parseUserInfo(userinfo);\n    const userPayload: UserPayload = {\n      userId: userProfile.id,\n      username: userProfile.username,\n      email: userProfile.email,\n      accessGroupProperty: oidcConfig?.accessGroupProperty,\n      payload: userinfo,\n    };\n    userProfile.accessGroups = await this.accessGroupService.getAccessGroups(\n      userPayload,\n    );\n\n    const userFilter: FilterQuery = {\n      $or: [\n        { username: `oidc.${userProfile.username}` },\n        { email: userProfile.email as string },\n      ],\n    };\n    let user = await this.usersService.findOne(userFilter);\n    if (!user) {\n      const createUser: CreateUserDto = {\n        username: userProfile.username,\n        email: userProfile.email as string,\n        authStrategy: \"oidc\",\n      };\n\n      const newUser = await this.usersService.create(createUser);\n      if (!newUser) {\n        throw new InternalServerErrorException(\n          \"Could not create User from OIDC response.\",\n        );\n      }\n      Logger.log(\"Created oidc user \", newUser.username);\n\n      const createUserIdentity: CreateUserIdentityDto = {\n        authStrategy: \"oidc\",\n        credentials: {},\n        externalId: userProfile.id,\n        profile: userProfile,\n        provider: \"oidc\",\n        userId: newUser._id,\n      };\n\n      await this.usersService.createUserIdentity(createUserIdentity);\n      Logger.log(\"Created user identity for oidc user with id \", newUser._id);\n\n      user = newUser;\n    } else {\n      await this.usersService.updateUserIdentity(\n        {\n          profile: userProfile,\n        },\n        user._id,\n      );\n    }\n\n    const jsonUser = JSON.parse(JSON.stringify(user));\n    const { password, ...returnUser } = jsonUser;\n    returnUser.userId = returnUser._id;\n\n    return returnUser;\n  }\n\n  getUserPhoto(userinfo: UserinfoResponse) {\n    return userinfo.thumbnailPhoto\n      ? \"data:image/jpeg;base64,\" +\n          Buffer.from(userinfo.thumbnailPhoto as string, \"binary\").toString(\n            \"base64\",\n          )\n      : \"no photo\";\n  }\n\n  parseUserInfo(userinfo: UserinfoResponse) {\n    type OidcProfile = Profile & UserProfile;\n    const profile = {} as OidcProfile;\n\n    // Prior to OpenID Connect Basic Client Profile 1.0 - draft 22, the \"sub\"\n    // claim was named \"user_id\".  Many providers still use the old name, so\n    // fallback to that.\n    const userId = userinfo.sub || (userinfo.user_id as string);\n    if (!userId) {\n      throw new Error(\"Could not find sub or user_id in userinfo response\");\n    }\n\n    profile.id = userId;\n    profile.username = userinfo.preferred_username ?? userinfo.name ?? \"\";\n    profile.displayName = userinfo.name ?? \"\";\n    profile.emails = userinfo.email ? [{ value: userinfo.email }] : [];\n    profile.email = userinfo.email ?? \"\";\n    profile.thumbnailPhoto = this.getUserPhoto(userinfo);\n\n    return profile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaslAbilityFactory.html":{"url":"injectables/CaslAbilityFactory.html","title":"injectable - CaslAbilityFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CaslAbilityFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/casl/casl-ability.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createForUser\n                        \n                    \n                \n            \n            \n                \ncreateForUser(user: JWTUser)\n                \n            \n\n\n            \n                \n                    Defined in src/casl/casl-ability.factory.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JWTUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Ability,\n  AbilityBuilder,\n  AbilityClass,\n  ExtractSubjectType,\n  InferSubjects,\n} from \"@casl/ability\";\nimport { Injectable } from \"@nestjs/common\";\nimport { Attachment } from \"src/attachments/schemas/attachment.schema\";\nimport { JWTUser } from \"src/auth/interfaces/jwt-user.interface\";\nimport { Role } from \"src/auth/role.enum\";\nimport { Datablock } from \"src/datablocks/schemas/datablock.schema\";\nimport { DatasetClass } from \"src/datasets/schemas/dataset.schema\";\nimport { Instrument } from \"src/instruments/schemas/instrument.schema\";\nimport { Job } from \"src/jobs/schemas/job.schema\";\nimport { Logbook } from \"src/logbooks/schemas/logbook.schema\";\nimport { OrigDatablock } from \"src/origdatablocks/schemas/origdatablock.schema\";\nimport { Policy } from \"src/policies/schemas/policy.schema\";\nimport { ProposalClass } from \"src/proposals/schemas/proposal.schema\";\nimport { PublishedData } from \"src/published-data/schemas/published-data.schema\";\nimport { SampleClass } from \"src/samples/schemas/sample.schema\";\nimport { UserIdentity } from \"src/users/schemas/user-identity.schema\";\nimport { UserSettings } from \"src/users/schemas/user-settings.schema\";\nimport { User } from \"src/users/schemas/user.schema\";\nimport { Action } from \"./action.enum\";\n\ntype Subjects =\n  | string\n  | InferSubjects\n  | \"all\";\n\nexport type AppAbility = Ability;\n\n@Injectable()\nexport class CaslAbilityFactory {\n  createForUser(user: JWTUser) {\n    const { can, cannot, build } = new AbilityBuilder\n    >(Ability as AbilityClass);\n\n    // admin groups\n    const stringAdminGroups = process.env.ADMIN_GROUPS || \"\";\n    const adminGroups: string[] = stringAdminGroups\n      ? stringAdminGroups.split(\",\").map((v) => v.trim())\n      : [];\n    // delete groups\n    const stringDeleteGroups = process.env.DELETE_GROUPS || \"\";\n    const deleteGroups: string[] = stringDeleteGroups\n      ? stringDeleteGroups.split(\",\").map((v) => v.trim())\n      : [];\n    // create dataset groups\n    const stringCreateDatasetGroups =\n      process.env.CREATE_DATASET_GROUPS || \"all\";\n    const createDatasetGroups: string[] = stringCreateDatasetGroups\n      .split(\",\")\n      .map((v) => v.trim());\n\n    // check if the user is an admin or not\n    if (user.currentGroups.some((g) => adminGroups.includes(g))) {\n      //\n      // user that belongs to any of the group listed in ADMIN_GROUPS\n      can(Action.ListAll, DatasetClass);\n      can(Action.ListAll, ProposalClass);\n      can(Action.Manage, DatasetClass);\n      can(Action.ReadAll, UserIdentity);\n      // -------------------------------------\n      // user endpoint, including useridentity\n      can(Action.UserReadAny, User);\n      can(Action.UserCreateAny, User);\n      can(Action.UserUpdateAny, User);\n      can(Action.UserDeleteAny, User);\n      can(Action.UserCreateJwt, User);\n      // -------------------------------------\n      // instrument\n      can(Action.InstrumentRead, Instrument);\n      can(Action.InstrumentCreate, Instrument);\n      can(Action.InstrumentUpdate, Instrument);\n      cannot(Action.InstrumentDelete, Instrument);\n      // -------------------------------------\n      // policies\n      can(Action.Update, Policy);\n    } else {\n      //\n      // non admin users\n\n      can(Action.ListOwn, ProposalClass);\n      can(Action.ListOwn, DatasetClass);\n      if (\n        user.currentGroups.some((g) => createDatasetGroups.includes(g)) ||\n        createDatasetGroups.includes(\"all\")\n      ) {\n        can(Action.Create, DatasetClass, {\n          ownerGroup: { $in: user.currentGroups },\n        });\n      }\n\n      // -------------------------------------\n      // user endpoint, including useridentity\n      // User can view, create, delete and update own user information\n      can(Action.UserReadOwn, User, { _id: user._id });\n      can(Action.UserCreateOwn, User, { _id: user._id });\n      can(Action.UserUpdateOwn, User, { _id: user._id });\n      can(Action.UserDeleteOwn, User, { _id: user._id });\n      cannot(Action.UserReadAny, User);\n      cannot(Action.UserCreateAny, User);\n      cannot(Action.UserUpdateAny, User);\n      cannot(Action.UserDeleteAny, User);\n      cannot(Action.UserCreateJwt, User);\n      // -------------------------------------\n      // instrument\n      can(Action.InstrumentRead, Instrument);\n      cannot(Action.InstrumentCreate, Instrument);\n      cannot(Action.InstrumentUpdate, Instrument);\n      cannot(Action.InstrumentDelete, Instrument);\n    }\n    can(Action.Read, DatasetClass, { isPublished: true });\n    can(Action.Read, DatasetClass, {\n      isPublished: false,\n      ownerGroup: { $in: user.currentGroups },\n    });\n    can(Action.Read, DatasetClass, {\n      isPublished: false,\n      accessGroups: { $in: user.currentGroups },\n    });\n    can(Action.Read, DatasetClass, {\n      sharedWith: user.email,\n    });\n\n    can(\n      Action.Update,\n      DatasetClass,\n      [\"isPublished\", \"keywords\", \"scientificMetadata\"],\n      {\n        ownerGroup: { $in: user.currentGroups },\n      },\n    );\n\n    // Instrument permissions\n    //can(Action.Read, Instrument);\n    //if (user.currentGroups.some((g) => adminGroups.includes(g))) {\n    //  can(Action.Manage, Instrument);\n    //}\n\n    can(Action.Manage, Job);\n\n    can(Action.Read, Logbook);\n\n    can(Action.Manage, Policy, { ownerGroup: { $in: user.currentGroups } });\n\n    can(Action.Read, ProposalClass, {\n      ownerGroup: { $in: user.currentGroups },\n    });\n    can(Action.Read, ProposalClass, {\n      accessGroups: { $in: user.currentGroups },\n    });\n\n    can(Action.Read, PublishedData);\n    can(Action.Update, PublishedData);\n    can(Action.Create, PublishedData);\n\n    can(Action.Create, SampleClass);\n    can(Action.Read, SampleClass, { ownerGroup: { $in: user.currentGroups } });\n    can(Action.Read, SampleClass, {\n      accessGroups: { $in: user.currentGroups },\n    });\n\n    can(Action.Manage, Attachment, { ownerGroup: { $in: user.currentGroups } });\n    can(Action.Manage, Datablock, { ownerGroup: { $in: user.currentGroups } });\n    can(Action.Manage, OrigDatablock, {\n      ownerGroup: { $in: user.currentGroups },\n    });\n\n    if (user.currentGroups.includes(Role.Admin)) {\n      can(Action.Manage, \"all\");\n    }\n    if (user.currentGroups.includes(Role.ArchiveManager)) {\n      //cannot(Action.Create, DatasetClass);\n      //cannot(Action.Update, DatasetClass);\n      //can(Action.Delete, DatasetClass);\n      cannot(Action.Manage, OrigDatablock);\n      cannot(Action.Create, OrigDatablock);\n      cannot(Action.Update, OrigDatablock);\n      can(Action.Delete, OrigDatablock);\n      cannot(Action.Manage, Datablock);\n      cannot(Action.Create, Datablock);\n      cannot(Action.Update, Datablock);\n      can(Action.Delete, Datablock);\n      can(Action.Delete, PublishedData);\n      //--------------------------------\n      // instrument\n      cannot(Action.InstrumentRead, Instrument);\n      cannot(Action.InstrumentCreate, Instrument);\n      cannot(Action.InstrumentUpdate, Instrument);\n      can(Action.InstrumentDelete, Instrument);\n    }\n    //if (user.currentGroups.includes(Role.GlobalAccess)) {\n    //  can(Action.Read, \"all\");\n    //}\n    if (user.currentGroups.includes(Role.Ingestor)) {\n      can(Action.Create, Attachment);\n\n      //cannot(Action.Delete, DatasetClass);\n      //can(Action.Create, DatasetClass);\n      //can(Action.Update, DatasetClass);\n\n      can(Action.Create, Instrument);\n      can(Action.Update, Instrument);\n    }\n    if (user.currentGroups.includes(Role.ProposalIngestor)) {\n      cannot(Action.Delete, ProposalClass);\n      can(Action.Create, ProposalClass);\n      can(Action.Update, ProposalClass);\n      can(Action.Read, ProposalClass);\n      can(Action.ListAll, ProposalClass);\n    }\n\n    //can(Action.Create, UserSettings, { userId: user._id });\n    //can(Action.Read, UserSettings, { userId: user._id });\n    //can(Action.Update, UserSettings, { userId: user._id });\n\n    if (user.currentGroups.some((g) => deleteGroups.includes(g))) {\n      can(Action.Delete, OrigDatablock);\n      can(Action.Delete, Datablock);\n      can(Action.Delete, PublishedData);\n      can(Action.Delete, Instrument);\n    }\n\n    return build({\n      detectSubjectType: (item) =>\n        item.constructor as ExtractSubjectType,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaslModule.html":{"url":"modules/CaslModule.html","title":"module - CaslModule","body":"\n                   \n\n\n\n\n    Modules\n    CaslModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaslModule\n\n\n\ncluster_CaslModule_exports\n\n\n\ncluster_CaslModule_providers\n\n\n\n\nCaslAbilityFactory \n\nCaslAbilityFactory \n\n\n\nCaslModule\n\nCaslModule\n\nCaslAbilityFactory  -->\n\nCaslModule->CaslAbilityFactory \n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nCaslModule -->\n\nCaslAbilityFactory->CaslModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/casl/casl.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslAbilityFactory\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CaslAbilityFactory\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { CaslAbilityFactory } from \"./casl-ability.factory\";\n\n@Module({\n  providers: [CaslAbilityFactory],\n  exports: [CaslAbilityFactory],\n})\nexport class CaslModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_CommonModule_exports\n\n\n\n\nMailService \n\nMailService \n\n\n\nCommonModule\n\nCommonModule\n\nMailService  -->\n\nCommonModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nCommonModule -->\n\nMailService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MailService } from \"./mail.service\";\n\n@Module({\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAttachmentDto.html":{"url":"classes/CreateAttachmentDto.html","title":"class - CreateAttachmentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAttachmentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attachments/dto/create-attachment.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OwnableDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                caption\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                datasetId\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                proposalId\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                sampleId\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                thumbnail\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                accessGroups\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                instrumentGroup\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                ownerGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        caption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attachments/dto/create-attachment.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        datasetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attachments/dto/create-attachment.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attachments/dto/create-attachment.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        proposalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attachments/dto/create-attachment.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        sampleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attachments/dto/create-attachment.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attachments/dto/create-attachment.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        accessGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: false, description: 'List of groups which have access to this item.'})@IsOptional()@IsString({each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        instrumentGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Group of the instrument which this item was acquired on.'})@IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        ownerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Name of the group owning this item.'})@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:11\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from \"class-validator\";\nimport { OwnableDto } from \"src/common/dto/ownable.dto\";\n\nexport class CreateAttachmentDto extends OwnableDto {\n  @IsOptional()\n  @IsString()\n  readonly id?: string;\n\n  @IsOptional()\n  @IsString()\n  readonly thumbnail?: string;\n\n  @IsString()\n  readonly caption: string;\n\n  @IsOptional()\n  @IsString()\n  readonly datasetId?: string;\n\n  @IsOptional()\n  @IsString()\n  readonly proposalId?: string;\n\n  @IsOptional()\n  @IsString()\n  readonly sampleId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCustomJwt.html":{"url":"classes/CreateCustomJwt.html","title":"class - CreateCustomJwt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCustomJwt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-custom-jwt.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        JwtSignOptions\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                expiresIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        expiresIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, description: 'When the token is going to expire. It can be expressed as the number of ms or as a string according to the documentation available at https://github.com/auth0/node-jsonwebtoken#readme'})@IsOptional()@Type(undefined)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-custom-jwt.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { JwtSignOptions } from \"@nestjs/jwt\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsOptional, IsString } from \"class-validator\";\n\nexport class CreateCustomJwt implements JwtSignOptions {\n  @ApiProperty({\n    required: false,\n    description:\n      \"When the token is going to expire. It can be expressed as the number of ms or as a string according to the documentation available at https://github.com/auth0/node-jsonwebtoken#readme\",\n  })\n  @IsOptional()\n  @Type(() => String)\n  @IsString()\n  readonly expiresIn?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDatablockDto.html":{"url":"classes/CreateDatablockDto.html","title":"class - CreateDatablockDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDatablockDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datablocks/dto/create-datablock.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OwnableDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                archiveId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                chkAlg\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                dataFileList\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                datasetId\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                packedSize\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                size\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                version\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                accessGroups\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                instrumentGroup\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                ownerGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        archiveId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Unique identifier given by the archive system to the stored datablock. This id is used when data is retrieved back.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datablocks/dto/create-datablock.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                        chkAlg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Name of the hasing algorithm used to compute the hash for each file.'})@IsOptional()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datablocks/dto/create-datablock.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                        dataFileList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataFile[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ArrayNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datablocks/dto/create-datablock.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        datasetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Persistent identifier of the dataset this orig datablock belongs to.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datablocks/dto/create-datablock.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        packedSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: true, description: 'Total size in bytes of all files in the datablock when on archived.'})@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datablocks/dto/create-datablock.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: true, description: 'Total size in bytes of all files in the datablock when on accessible.'})@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datablocks/dto/create-datablock.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Version string defining the format of how data is packed and stored in archive.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datablocks/dto/create-datablock.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        accessGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: false, description: 'List of groups which have access to this item.'})@IsOptional()@IsString({each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        instrumentGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Group of the instrument which this item was acquired on.'})@IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        ownerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Name of the group owning this item.'})@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:11\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport {\n  ArrayNotEmpty,\n  IsArray,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { DataFileDto } from \"src/common/dto/datafile.dto\";\nimport { OwnableDto } from \"src/common/dto/ownable.dto\";\nimport { DataFile } from \"src/common/schemas/datafile.schema\";\n\nexport class CreateDatablockDto extends OwnableDto {\n  @ApiProperty({\n    type: String,\n    required: true,\n    description:\n      \"Persistent identifier of the dataset this orig datablock belongs to.\",\n  })\n  @IsString()\n  readonly datasetId: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description:\n      \"Unique identifier given by the archive system to the stored datablock. This id is used when data is retrieved back.\",\n  })\n  @IsString()\n  readonly archiveId: string;\n\n  @ApiProperty({\n    type: Number,\n    required: true,\n    description:\n      \"Total size in bytes of all files in the datablock when on accessible.\",\n  })\n  @IsInt()\n  readonly size: number;\n\n  @ApiProperty({\n    type: Number,\n    required: true,\n    description:\n      \"Total size in bytes of all files in the datablock when on archived.\",\n  })\n  @IsInt()\n  readonly packedSize: number;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description:\n      \"Name of the hasing algorithm used to compute the hash for each file.\",\n  })\n  @IsOptional()\n  @IsString()\n  @IsNotEmpty()\n  readonly chkAlg: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description:\n      \"Version string defining the format of how data is packed and stored in archive.\",\n  })\n  @IsString()\n  readonly version: string;\n\n  @IsArray()\n  @ArrayNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => DataFileDto)\n  readonly dataFileList: DataFile[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDatasetDatablockDto.html":{"url":"classes/CreateDatasetDatablockDto.html","title":"class - CreateDatasetDatablockDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDatasetDatablockDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datablocks/dto/create-dataset-datablock.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from \"@nestjs/swagger\";\nimport { CreateDatablockDto } from \"./create-datablock.dto\";\n\n/*\n * This dto is used when created a datablock from the dataset endpoint\n */\nexport class CreateDatasetDatablockDto extends OmitType(CreateDatablockDto, [\n  \"datasetId\",\n  \"ownerGroup\",\n  \"accessGroups\",\n  \"instrumentGroup\",\n] as const) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDatasetOrigDatablockDto.html":{"url":"classes/CreateDatasetOrigDatablockDto.html","title":"class - CreateDatasetOrigDatablockDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDatasetOrigDatablockDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/origdatablocks/dto/create-dataset-origdatablock.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from \"@nestjs/swagger\";\nimport { CreateOrigDatablockDto } from \"./create-origdatablock.dto\";\n\nexport class CreateDatasetOrigDatablockDto extends OmitType(\n  CreateOrigDatablockDto,\n  [\"datasetId\", \"ownerGroup\", \"accessGroups\", \"instrumentGroup\"] as const,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateInitialDatasetDto.html":{"url":"classes/CreateInitialDatasetDto.html","title":"class - CreateInitialDatasetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateInitialDatasetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/initial-datasets/dto/create-initial-dataset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/initial-datasets/dto/create-initial-dataset.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateInitialDatasetDto {\n  readonly _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateInstrumentDto.html":{"url":"classes/CreateInstrumentDto.html","title":"class - CreateInstrumentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateInstrumentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/instruments/dto/create-instrument.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                customMetadata\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                name\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        customMetadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, required: false, default: undefined})@IsOptional()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/instruments/dto/create-instrument.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/instruments/dto/create-instrument.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        uniqueName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, uniqueItems: true, required: true})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/instruments/dto/create-instrument.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiTags } from \"@nestjs/swagger\";\nimport { IsObject, IsOptional, IsString } from \"class-validator\";\n\n@ApiTags(\"instruments\")\nexport class CreateInstrumentDto {\n  @ApiProperty({\n    type: String,\n    uniqueItems: true,\n    required: true,\n  })\n  @IsString()\n  readonly uniqueName: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n  })\n  @IsString()\n  readonly name: string;\n\n  @ApiProperty({\n    type: Object,\n    required: false,\n    default: {},\n  })\n  @IsOptional()\n  @IsObject()\n  readonly customMetadata?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                datasetList\n                            \n                            \n                                    \n                                    Readonly\n                                emailJobInitiator\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                executionTime\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                jobParams\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                jobResultObject\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                jobStatusMessage\n                            \n                            \n                                    \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                        datasetList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IDatasetList[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsOptional()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        emailJobInitiator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        executionTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        jobParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        jobResultObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        jobStatusMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport {\n  IsArray,\n  IsDateString,\n  IsEmail,\n  IsObject,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { IDatasetList } from \"../interfaces/dataset-list.interface\";\nimport { DatasetListDto } from \"./dataset-list.dto\";\n\nexport class CreateJobDto {\n  @IsEmail()\n  readonly emailJobInitiator: string;\n\n  @IsString()\n  readonly type: string;\n\n  @IsDateString()\n  @IsOptional()\n  readonly executionTime?: Date;\n\n  @IsObject()\n  @IsOptional()\n  readonly jobParams?: Record;\n\n  @IsString()\n  @IsOptional()\n  readonly jobStatusMessage?: string;\n\n  @IsArray()\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @Type(() => DatasetListDto)\n  readonly datasetList: IDatasetList[];\n\n  @IsObject()\n  @IsOptional()\n  readonly jobResultObject?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMeasurementPeriodDto.html":{"url":"classes/CreateMeasurementPeriodDto.html","title":"class - CreateMeasurementPeriodDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMeasurementPeriodDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/proposals/dto/create-measurement-period.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                comment\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                end\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                instrument\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Additional information relevant for this measurement period, e.g. if different accounts were used for data taking.'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/dto/create-measurement-period.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Time when measurement period ended, format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server.'})@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/dto/create-measurement-period.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        instrument\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Instrument or beamline identifier where measurement was pursued, e.g. /PSI/SLS/TOMCAT'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/dto/create-measurement-period.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Time when measurement period started, format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server.'})@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/dto/create-measurement-period.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsDateString, IsOptional, IsString } from \"class-validator\";\n\nexport class CreateMeasurementPeriodDto {\n  @ApiProperty({\n    type: String,\n    required: true,\n    description:\n      \"Instrument or beamline identifier where measurement was pursued, e.g. /PSI/SLS/TOMCAT\",\n  })\n  @IsString()\n  readonly instrument: string;\n\n  @ApiProperty({\n    type: Date,\n    description:\n      \"Time when measurement period started, format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server.\",\n  })\n  @IsDateString()\n  readonly start: Date;\n\n  @ApiProperty({\n    type: Date,\n    description:\n      \"Time when measurement period ended, format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server.\",\n  })\n  @IsDateString()\n  readonly end: Date;\n\n  @ApiProperty({\n    type: String,\n    description:\n      \"Additional information relevant for this measurement period, e.g. if different accounts were used for data taking.\",\n  })\n  @IsOptional()\n  @IsString()\n  readonly comment?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrigDatablockDto.html":{"url":"classes/CreateOrigDatablockDto.html","title":"class - CreateOrigDatablockDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrigDatablockDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/origdatablocks/dto/create-origdatablock.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OwnableDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                chkAlg\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                dataFileList\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                datasetId\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                ownerGroup\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                size\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                accessGroups\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                instrumentGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Readonly\n                        chkAlg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Name of the hashing algorithm used to compute the hash for each file.'})@IsOptional()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/origdatablocks/dto/create-origdatablock.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                        dataFileList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataFile[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'array', items: undefined, required: true, description: 'List of the files contained in this orig datablock.'})@IsArray()@ArrayNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/origdatablocks/dto/create-origdatablock.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        datasetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Persistent identifier of the dataset this orig datablock belongs to.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/origdatablocks/dto/create-origdatablock.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                        ownerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Name of the group owning this item. If it is not specified, the datasets owner group is used.'})@IsOptional()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: true, description: 'Total size of the files in this orig datablock'})@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/origdatablocks/dto/create-origdatablock.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        accessGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: false, description: 'List of groups which have access to this item.'})@IsOptional()@IsString({each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        instrumentGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Group of the instrument which this item was acquired on.'})@IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:31\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport {\n  ArrayNotEmpty,\n  IsArray,\n  IsInt,\n  IsOptional,\n  IsString,\n  IsNotEmpty,\n  ValidateNested,\n} from \"class-validator\";\nimport { DataFileDto } from \"src/common/dto/datafile.dto\";\nimport { OwnableDto } from \"src/common/dto/ownable.dto\";\nimport { DataFile } from \"../../common/schemas/datafile.schema\";\nimport { ApiProperty, getSchemaPath } from \"@nestjs/swagger\";\n\nexport class CreateOrigDatablockDto extends OwnableDto {\n  @ApiProperty({\n    type: String,\n    required: true,\n    description:\n      \"Persistent identifier of the dataset this orig datablock belongs to.\",\n  })\n  @IsString()\n  readonly datasetId: string;\n\n  @ApiProperty({\n    type: Number,\n    required: true,\n    description: \"Total size of the files in this orig datablock\",\n  })\n  @IsInt()\n  readonly size: number;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description:\n      \"Name of the hashing algorithm used to compute the hash for each file.\",\n  })\n  @IsOptional()\n  @IsString()\n  @IsNotEmpty()\n  readonly chkAlg: string;\n\n  @ApiProperty({\n    type: \"array\",\n    items: { $ref: getSchemaPath(DataFile) },\n    required: true,\n    description: \"List of the files contained in this orig datablock.\",\n  })\n  @IsArray()\n  @ArrayNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => DataFileDto)\n  readonly dataFileList: DataFile[];\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description:\n      \"Name of the group owning this item. If it is not specified, the datasets owner group is used.\",\n  })\n  @IsOptional()\n  @IsString()\n  @IsNotEmpty()\n  declare readonly ownerGroup: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePolicyDto.html":{"url":"classes/CreatePolicyDto.html","title":"class - CreatePolicyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePolicyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/policies/dto/create-policy.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OwnableDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                archiveEmailNotification\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                archiveEmailsToBeNotified\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                autoArchive\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                autoArchiveDelay\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                embargoPeriod\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                manager\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                retrieveEmailNotification\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                retrieveEmailsToBeNotified\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                tapeRedundancy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                accessGroups\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                instrumentGroup\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                ownerGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        archiveEmailNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/dto/create-policy.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        archiveEmailsToBeNotified\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/dto/create-policy.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        autoArchive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/dto/create-policy.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        autoArchiveDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/dto/create-policy.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        embargoPeriod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/dto/create-policy.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        manager\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/dto/create-policy.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        retrieveEmailNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/dto/create-policy.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        retrieveEmailsToBeNotified\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/dto/create-policy.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        tapeRedundancy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/dto/create-policy.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        accessGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: false, description: 'List of groups which have access to this item.'})@IsOptional()@IsString({each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        instrumentGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Group of the instrument which this item was acquired on.'})@IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        ownerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Name of the group owning this item.'})@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:11\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsBoolean,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from \"class-validator\";\nimport { OwnableDto } from \"src/common/dto/ownable.dto\";\n\nexport class CreatePolicyDto extends OwnableDto {\n  @IsArray()\n  @IsOptional()\n  readonly manager: string[];\n\n  @IsString()\n  @IsOptional()\n  readonly tapeRedundancy: string;\n\n  @IsBoolean()\n  @IsOptional()\n  readonly autoArchive: boolean;\n\n  @IsNumber()\n  @IsOptional()\n  readonly autoArchiveDelay: number;\n\n  @IsBoolean()\n  @IsOptional()\n  readonly archiveEmailNotification: boolean;\n\n  @IsArray()\n  @IsOptional()\n  readonly archiveEmailsToBeNotified: string[];\n\n  @IsBoolean()\n  @IsOptional()\n  readonly retrieveEmailNotification: boolean;\n\n  @IsArray()\n  @IsOptional()\n  readonly retrieveEmailsToBeNotified: string[];\n\n  @IsNumber()\n  @IsOptional()\n  readonly embargoPeriod: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProposalDto.html":{"url":"classes/CreateProposalDto.html","title":"class - CreateProposalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProposalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/proposals/dto/create-proposal.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OwnableDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                abstract\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                endTime\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                firstname\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                lastname\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                MeasurementPeriodList\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                pi_email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                pi_firstname\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                pi_lastname\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                proposalId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                startTime\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                accessGroups\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                instrumentGroup\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                ownerGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        abstract\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'The proposal abstract.'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/dto/create-proposal.dto.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Email of main proposer.'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/dto/create-proposal.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, required: false, description: 'The date when data collection finishes.'})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/dto/create-proposal.dto.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'First name of main proposer.'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/dto/create-proposal.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Last name of main proposer.'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/dto/create-proposal.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        MeasurementPeriodList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: MeasurementPeriodClass, isArray: true, required: false, description: 'Embedded information used inside proposals to define which type of experiment has to be pursued, where (at which instrument) and when.'})@IsArray()@IsOptional()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/dto/create-proposal.dto.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        pi_email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Email of principal investigator.'})@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/dto/create-proposal.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        pi_firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'First name of principal investigator.'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/dto/create-proposal.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        pi_lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Last name of principal investigator.'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/dto/create-proposal.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        proposalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Globally unique identifier of a proposal, eg. PID-prefix/internal-proposal-number. PID prefix is auto prepended.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/dto/create-proposal.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, required: false, description: 'The date when the data collection starts.'})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/dto/create-proposal.dto.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'The title of the proposal.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/dto/create-proposal.dto.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        accessGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: false, description: 'List of groups which have access to this item.'})@IsOptional()@IsString({each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        instrumentGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Group of the instrument which this item was acquired on.'})@IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        ownerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Name of the group owning this item.'})@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:11\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiTags } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport {\n  IsArray,\n  IsDateString,\n  IsEmail,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from \"class-validator\";\nimport { OwnableDto } from \"src/common/dto/ownable.dto\";\nimport { MeasurementPeriodClass } from \"../schemas/measurement-period.schema\";\nimport { CreateMeasurementPeriodDto } from \"./create-measurement-period.dto\";\n\n@ApiTags(\"proposals\")\nexport class CreateProposalDto extends OwnableDto {\n  @ApiProperty({\n    type: String,\n    required: true,\n    description:\n      \"Globally unique identifier of a proposal, eg. PID-prefix/internal-proposal-number. PID prefix is auto prepended.\",\n  })\n  @IsString()\n  readonly proposalId: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"Email of principal investigator.\",\n  })\n  @IsOptional()\n  @IsEmail()\n  readonly pi_email?: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"First name of principal investigator.\",\n  })\n  @IsOptional()\n  @IsString()\n  readonly pi_firstname?: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"Last name of principal investigator.\",\n  })\n  @IsOptional()\n  @IsString()\n  readonly pi_lastname?: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"Email of main proposer.\",\n  })\n  @IsEmail()\n  readonly email: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"First name of main proposer.\",\n  })\n  @IsOptional()\n  @IsString()\n  readonly firstname?: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"Last name of main proposer.\",\n  })\n  @IsOptional()\n  @IsString()\n  readonly lastname?: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"The title of the proposal.\",\n  })\n  @IsString()\n  readonly title: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"The proposal abstract.\",\n  })\n  @IsOptional()\n  @IsString()\n  readonly abstract?: string;\n\n  @ApiProperty({\n    type: Date,\n    required: false,\n    description: \"The date when the data collection starts.\",\n  })\n  @IsOptional()\n  @IsDateString()\n  readonly startTime?: Date;\n\n  @ApiProperty({\n    type: Date,\n    required: false,\n    description: \"The date when data collection finishes.\",\n  })\n  @IsOptional()\n  @IsDateString()\n  readonly endTime?: Date;\n\n  @ApiProperty({\n    type: MeasurementPeriodClass,\n    isArray: true,\n    required: false,\n    description:\n      \"Embedded information used inside proposals to define which type of experiment has to be pursued, where (at which instrument) and when.\",\n  })\n  @IsArray()\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @Type(() => CreateMeasurementPeriodDto)\n  readonly MeasurementPeriodList?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePublishedDataDto.html":{"url":"classes/CreatePublishedDataDto.html","title":"class - CreatePublishedDataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePublishedDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/published-data/dto/create-published-data.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                _id\n                            \n                            \n                                    \n                                    Readonly\n                                abstract\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                affiliation\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                authors\n                            \n                            \n                                    \n                                    Readonly\n                                creator\n                            \n                            \n                                    \n                                    Readonly\n                                dataDescription\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                doi\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                downloadLink\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                numberOfFiles\n                            \n                            \n                                    \n                                    Readonly\n                                pidArray\n                            \n                            \n                                    \n                                    Readonly\n                                publicationYear\n                            \n                            \n                                    \n                                    Readonly\n                                publisher\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                registeredTime\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                relatedPublications\n                            \n                            \n                                    \n                                    Readonly\n                                resourceType\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                scicatUser\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                sizeOfArchive\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                thumbnail\n                            \n                            \n                                    \n                                    Readonly\n                                title\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        abstract\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        affiliation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        authors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        dataDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        doi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        downloadLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        numberOfFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        pidArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        publicationYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        registeredTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        relatedPublications\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        resourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        scicatUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        sizeOfArchive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/dto/create-published-data.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDateString, IsOptional, IsString, IsNumber } from \"class-validator\";\n\nexport class CreatePublishedDataDto {\n  @IsString()\n  @IsOptional()\n  readonly _id?: string;\n\n  @IsString()\n  @IsOptional()\n  readonly doi?: string;\n\n  @IsString()\n  @IsOptional()\n  readonly affiliation?: string;\n\n  @IsString({\n    each: true,\n  })\n  readonly creator: string[];\n\n  @IsString()\n  readonly publisher: string;\n\n  @IsNumber()\n  readonly publicationYear: number;\n\n  @IsString()\n  readonly title: string;\n\n  @IsString()\n  @IsOptional()\n  readonly url?: string;\n\n  @IsString()\n  readonly abstract: string;\n\n  @IsString()\n  readonly dataDescription: string;\n\n  @IsString()\n  readonly resourceType: string;\n\n  @IsNumber()\n  @IsOptional()\n  readonly numberOfFiles?: number;\n\n  @IsNumber()\n  @IsOptional()\n  readonly sizeOfArchive?: number;\n\n  @IsString({\n    each: true,\n  })\n  readonly pidArray: string[];\n\n  @IsString({\n    each: true,\n  })\n  @IsOptional()\n  readonly authors?: string[];\n\n  @IsDateString()\n  @IsOptional()\n  readonly registeredTime?: Date;\n\n  @IsString()\n  @IsOptional()\n  readonly status?: string;\n\n  @IsString()\n  @IsOptional()\n  readonly scicatUser?: string;\n\n  @IsString()\n  @IsOptional()\n  readonly thumbnail?: string;\n\n  @IsString({\n    each: true,\n  })\n  @IsOptional()\n  readonly relatedPublications?: string[];\n\n  @IsString()\n  @IsOptional()\n  readonly downloadLink?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRelationshipDto.html":{"url":"classes/CreateRelationshipDto.html","title":"class - CreateRelationshipDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRelationshipDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/create-relationship.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                pid\n                            \n                            \n                                    \n                                    \n                                relationship\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        pid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Persistent identifier of the related dataset.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-relationship.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        relationship\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Relationship between this dataset and the related one.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-relationship.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString } from \"class-validator\";\n\nexport class CreateRelationshipDto {\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"Persistent identifier of the related dataset.\",\n  })\n  @IsString()\n  readonly pid: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"Relationship between this dataset and the related one.\",\n  })\n  @IsString()\n  relationship: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-role.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateRoleDto {\n  @ApiProperty()\n  readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSampleDto.html":{"url":"classes/CreateSampleDto.html","title":"class - CreateSampleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSampleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/samples/dto/create-sample.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OwnableDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                isPublished\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                owner\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                sampleCharacteristics\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                sampleId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                accessGroups\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                instrumentGroup\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                ownerGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'A description of the sample.'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/samples/dto/create-sample.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        isPublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, default: false, required: false, description: 'Flag is true when data are made publicly available.'})@IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/samples/dto/create-sample.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'The owner of the sample.'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/samples/dto/create-sample.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        sampleCharacteristics\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, default: undefined, required: false, description: 'JSON object containing the sample characteristics metadata.'})@IsObject()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/samples/dto/create-sample.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        sampleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Globally unique identifier of a sample. This could be provided as an input value or generated by the system.'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/samples/dto/create-sample.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        accessGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: false, description: 'List of groups which have access to this item.'})@IsOptional()@IsString({each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        instrumentGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Group of the instrument which this item was acquired on.'})@IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        ownerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Name of the group owning this item.'})@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:11\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsBoolean, IsObject, IsOptional } from \"class-validator\";\nimport { OwnableDto } from \"src/common/dto/ownable.dto\";\n\nexport class CreateSampleDto extends OwnableDto {\n  @ApiProperty({\n    type: String,\n    required: false,\n    description:\n      \"Globally unique identifier of a sample. This could be provided as an input value or generated by the system.\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly sampleId?: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"The owner of the sample.\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly owner?: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"A description of the sample.\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly description?: string;\n\n  @ApiProperty({\n    type: Object,\n    default: {},\n    required: false,\n    description: \"JSON object containing the sample characteristics metadata.\",\n  })\n  @IsObject()\n  @IsOptional()\n  readonly sampleCharacteristics?: Record;\n\n  @ApiProperty({\n    type: Boolean,\n    default: false,\n    required: false,\n    description: \"Flag is true when data are made publicly available.\",\n  })\n  @IsBoolean()\n  @IsOptional()\n  readonly isPublished?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTechniqueDto.html":{"url":"classes/CreateTechniqueDto.html","title":"class - CreateTechniqueDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTechniqueDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/create-technique.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                name\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                pid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'The name of the technique.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-technique.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        pid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Persistent Identifier of the technique. Usually it is a UUIDv4.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/dto/create-technique.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString } from \"class-validator\";\n\nexport class CreateTechniqueDto {\n  @ApiProperty({\n    type: String,\n    required: true,\n    description:\n      \"Persistent Identifier of the technique. Usually it is a UUIDv4.\",\n  })\n  @IsString()\n  readonly pid: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"The name of the technique.\",\n  })\n  @IsString()\n  readonly name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                authStrategy\n                            \n                            \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                global\n                            \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                role\n                            \n                            \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        authStrategy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        global\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateUserDto {\n  @ApiProperty({ required: true })\n  readonly username: string;\n\n  @ApiProperty({ required: true })\n  readonly email: string;\n\n  @ApiProperty({ required: false })\n  readonly password?: string;\n\n  @ApiProperty({ required: false })\n  readonly role?: string;\n\n  @ApiProperty({ required: false })\n  readonly global?: boolean;\n\n  @ApiProperty({ required: false })\n  readonly authStrategy?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserIdentityDto.html":{"url":"classes/CreateUserIdentityDto.html","title":"class - CreateUserIdentityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserIdentityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user-identity.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                authStrategy\n                            \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                credentials\n                            \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                externalId\n                            \n                            \n                                    \n                                    Readonly\n                                profile\n                            \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                provider\n                            \n                            \n                                    \n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        authStrategy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-identity.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        credentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-identity.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-identity.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserProfile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-identity.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-identity.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-identity.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { UserProfile } from \"../schemas/user-profile.schema\";\n\nexport class CreateUserIdentityDto {\n  @ApiProperty()\n  readonly authStrategy?: string;\n\n  @ApiProperty()\n  readonly credentials?: Record;\n\n  @ApiProperty()\n  readonly externalId?: string;\n\n  @ApiProperty()\n  readonly profile: UserProfile;\n\n  @ApiProperty()\n  readonly provider?: string;\n\n  @ApiProperty()\n  readonly userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserJWT.html":{"url":"classes/CreateUserJWT.html","title":"class - CreateUserJWT","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserJWT\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user-jwt.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                jwt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        jwt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-jwt.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateUserJWT {\n  @ApiProperty()\n  readonly jwt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserRoleDto.html":{"url":"classes/CreateUserRoleDto.html","title":"class - CreateUserRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                roleId\n                            \n                            \n                                    \n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-role.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-role.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateUserRoleDto {\n  @ApiProperty()\n  readonly userId: string;\n\n  @ApiProperty()\n  readonly roleId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserSettingsDto.html":{"url":"classes/CreateUserSettingsDto.html","title":"class - CreateUserSettingsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserSettingsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user-settings.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                columns\n                            \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                datasetCount\n                            \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                jobCount\n                            \n                            \n                                    \n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-settings.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        datasetCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: false, default: 25})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-settings.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        jobCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: false, default: 25})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-settings.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user-settings.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CreateUserSettingsDto {\n  @ApiProperty({ type: String, required: true })\n  readonly userId: string;\n\n  @ApiProperty()\n  readonly columns: Record[];\n\n  @ApiProperty({ type: Number, required: false, default: 25 })\n  readonly datasetCount?: number;\n\n  @ApiProperty({ type: Number, required: false, default: 25 })\n  readonly jobCount?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CreateUserSettingsInterceptor.html":{"url":"injectables/CreateUserSettingsInterceptor.html","title":"injectable - CreateUserSettingsInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CreateUserSettingsInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/interceptors/create-user-settings.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/interceptors/create-user-settings.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/users/interceptors/create-user-settings.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  Logger,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { Observable, tap } from \"rxjs\";\nimport { CreateUserSettingsDto } from \"../dto/create-user-settings.dto\";\nimport { UsersService } from \"../users.service\";\n\n@Injectable()\nexport class CreateUserSettingsInterceptor implements NestInterceptor {\n  constructor(private usersService: UsersService) {}\n  async intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Promise> {\n    return next.handle().pipe(\n      tap(async () => {\n        const res = context.switchToHttp().getResponse();\n        const user = res.req.user;\n        if (!user) {\n          return;\n        }\n        const userId = user._id;\n        const userSettings = await this.usersService.findByIdUserSettings(\n          userId,\n        );\n        if (!userSettings) {\n          Logger.log(\n            `Adding default settings to user ${user.username}`,\n            \"CreateUserSettingsInterceptor\",\n          );\n          const createUserSettingsDto: CreateUserSettingsDto = {\n            userId,\n            columns: [],\n          };\n          return this.usersService.createUserSettings(\n            userId,\n            createUserSettingsDto,\n          );\n        }\n        return;\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CredentialsDto.html":{"url":"classes/CredentialsDto.html","title":"class - CredentialsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CredentialsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/credentials.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, description: 'The password of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/credentials.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true, description: 'The username of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/credentials.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class CredentialsDto {\n  @ApiProperty({ required: true, description: \"The username of the user\" })\n  readonly username: string;\n\n  @ApiProperty({ required: true, description: \"The password of the user\" })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataFile.html":{"url":"classes/DataFile.html","title":"class - DataFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/schemas/datafile.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                chk\n                            \n                            \n                                    \n                                    \n                                gid\n                            \n                            \n                                    \n                                    \n                                path\n                            \n                            \n                                    \n                                    \n                                perm\n                            \n                            \n                                    \n                                    \n                                size\n                            \n                            \n                                    \n                                    \n                                time\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        chk\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Checksum for the file, e.g. its sha-2 hashstring. The hash algorithm should be encoded in the (Orig)Datablock.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/schemas/datafile.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Group ID name as seen on filesystem.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/schemas/datafile.schema.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Relative path of the file within the dataset folder.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/schemas/datafile.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        perm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Posix permission bits.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/schemas/datafile.schema.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: true, description: 'Uncompressed file size in bytes.'})@Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/schemas/datafile.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, required: true, description: 'Time of file creation on disk, format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server.'})@Prop({type: Date, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/schemas/datafile.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'User ID name as seen on filesystem.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/schemas/datafile.schema.ts:63\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport type DataFileDocument = DataFile & Document;\n\n@Schema()\nexport class DataFile {\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"Relative path of the file within the dataset folder.\",\n  })\n  @Prop({\n    type: String,\n    required: true,\n  })\n  path: string;\n\n  @ApiProperty({\n    type: Number,\n    required: true,\n    description: \"Uncompressed file size in bytes.\",\n  })\n  @Prop({\n    type: Number,\n    required: true,\n  })\n  size: number;\n\n  @ApiProperty({\n    type: Date,\n    required: true,\n    description:\n      \"Time of file creation on disk, format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server.\",\n  })\n  @Prop({\n    type: Date,\n    required: true,\n  })\n  time: Date;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description:\n      \"Checksum for the file, e.g. its sha-2 hashstring. The hash algorithm should be encoded in the (Orig)Datablock.\",\n  })\n  @Prop({\n    type: String,\n    required: false,\n  })\n  chk: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"User ID name as seen on filesystem.\",\n  })\n  @Prop({\n    type: String,\n    required: false,\n  })\n  uid: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"Group ID name as seen on filesystem.\",\n  })\n  @Prop({\n    type: String,\n    required: false,\n  })\n  gid: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"Posix permission bits.\",\n  })\n  @Prop({\n    type: String,\n    required: false,\n  })\n  perm: string;\n}\n\nexport const DataFileSchema = SchemaFactory.createForClass(DataFile);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataFileDto.html":{"url":"classes/DataFileDto.html","title":"class - DataFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/datafile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                chk\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                gid\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                path\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                perm\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                size\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                time\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        chk\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Checksum for the file, e.g. its sha-2 hashstring. The hash algorithm should be encoded in the (Orig)Datablock.'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/datafile.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        gid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Group ID name as seen on filesystem.'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/datafile.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Relative path of the file within the dataset folder.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/datafile.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        perm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Posix permission bits.'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/datafile.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: true, description: 'Uncompressed file size in bytes.'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/datafile.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, required: true, description: 'Time of file creation on disk, format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server.'})@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/datafile.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'User ID name as seen on filesystem.'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/datafile.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsDateString, IsNumber, IsOptional, IsString } from \"class-validator\";\n\nexport class DataFileDto {\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"Relative path of the file within the dataset folder.\",\n  })\n  @IsString()\n  readonly path: string;\n\n  @ApiProperty({\n    type: Number,\n    required: true,\n    description: \"Uncompressed file size in bytes.\",\n  })\n  @IsNumber()\n  readonly size: number;\n\n  @ApiProperty({\n    type: Date,\n    required: true,\n    description:\n      \"Time of file creation on disk, format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server.\",\n  })\n  @IsDateString()\n  readonly time: Date;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description:\n      \"Checksum for the file, e.g. its sha-2 hashstring. The hash algorithm should be encoded in the (Orig)Datablock.\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly chk: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"User ID name as seen on filesystem.\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly uid: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"Group ID name as seen on filesystem.\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly gid: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"Posix permission bits.\",\n  })\n  @IsString()\n  @IsOptional()\n  readonly perm: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Datablock.html":{"url":"classes/Datablock.html","title":"class - Datablock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Datablock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datablocks/schemas/datablock.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OwnableClass\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                archiveId\n                            \n                            \n                                    \n                                    \n                                chkAlg\n                            \n                            \n                                    \n                                    \n                                dataFileList\n                            \n                            \n                                    \n                                    \n                                datasetId\n                            \n                            \n                                    \n                                    \n                                packedSize\n                            \n                            \n                                    \n                                    \n                                size\n                            \n                            \n                                    \n                                    \n                                version\n                            \n                            \n                                    \n                                    \n                                accessGroups\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                instrumentGroup\n                            \n                            \n                                    \n                                    \n                                ownerGroup\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, default: () => })@Prop({type: String, required: true, default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datablocks/schemas/datablock.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        archiveId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Unique identifier given by the archive system to the stored datablock. This id is used when data is retrieved back.'})@Prop({type: String, required: true, unique: true, sparse: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datablocks/schemas/datablock.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        chkAlg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Algorithm used for calculation of file checksums. Should be lowercase, e.g., sha2 or blake2b.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datablocks/schemas/datablock.schema.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dataFileList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataFile[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'array', items: undefined, required: true, description: 'Embedded schema definition for each file.'})@Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datablocks/schemas/datablock.schema.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        datasetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'PID of the dataset to which the datablock belongs.'})@Prop({type: String, ref: 'Dataset', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datablocks/schemas/datablock.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        packedSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: true, description: 'Total size in bytes of all files in the datablock when on archived.'})@Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datablocks/schemas/datablock.schema.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: true, description: 'Total size in bytes of all files in the datablock when on accessible.'})@Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datablocks/schemas/datablock.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Version string defining the format of how data is packed and stored in archive.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datablocks/schemas/datablock.schema.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'Optional additional groups which have read access to the data. Users which are members in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users.'})@Prop({type: undefined, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        instrumentGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Optional additional groups which have read and write access to the data. Users which are members in one of the groups listed here are allowed to access this data.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ownerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151'})@Prop({type: String, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was created. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:40\n\n                        \n                    \n\n            \n                \n                    NOTE: createdAt and updatedAt properties are handled automatically by mongoose when timestamps flag is set to true on a schema(https://mongoosejs.com/docs/guide.html#timestamps).\nWe still need to keep the fields available here because of the response model and swagger documentation. They are not required so we don't need to provide them manually on create/update.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who created this record. This property is added and maintained by the system.'})@Prop({type: String, index: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was updated last. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who updated this record last. This property is added and maintained by the system.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:26\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty, getSchemaPath } from \"@nestjs/swagger\";\nimport { DataFile, DataFileSchema } from \"src/common/schemas/datafile.schema\";\nimport { OwnableClass } from \"src/common/schemas/ownable.schema\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport type DatablockDocument = Datablock & Document;\n\n@Schema({\n  collection: \"Datablock\",\n  toJSON: {\n    getters: true,\n  },\n  timestamps: true,\n})\nexport class Datablock extends OwnableClass {\n  @ApiProperty({\n    type: String,\n    default: () => uuidv4(),\n  })\n  @Prop({\n    type: String,\n    required: true,\n    default: () => uuidv4(),\n  })\n  _id: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"PID of the dataset to which the datablock belongs.\",\n  })\n  @Prop({ type: String, ref: \"Dataset\", required: true })\n  datasetId: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description:\n      \"Unique identifier given by the archive system to the stored datablock. This id is used when data is retrieved back.\",\n  })\n  @Prop({\n    type: String,\n    required: true,\n    unique: true,\n    sparse: true,\n  })\n  archiveId: string;\n\n  @ApiProperty({\n    type: Number,\n    required: true,\n    description:\n      \"Total size in bytes of all files in the datablock when on accessible.\",\n  })\n  @Prop({\n    type: Number,\n    required: true,\n  })\n  size: number;\n\n  @ApiProperty({\n    type: Number,\n    required: true,\n    description:\n      \"Total size in bytes of all files in the datablock when on archived.\",\n  })\n  @Prop({\n    type: Number,\n    required: true,\n  })\n  packedSize: number;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description:\n      \"Algorithm used for calculation of file checksums. Should be lowercase, e.g., sha2 or blake2b.\",\n  })\n  @Prop({\n    type: String,\n    required: false,\n  })\n  chkAlg: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description:\n      \"Version string defining the format of how data is packed and stored in archive.\",\n  })\n  @Prop({\n    type: String,\n    required: true,\n  })\n  version: string;\n\n  @ApiProperty({\n    type: \"array\",\n    items: { $ref: getSchemaPath(DataFile) },\n    required: true,\n    description: \"Embedded schema definition for each file.\",\n  })\n  @Prop({\n    type: [DataFileSchema],\n    required: true,\n  })\n  dataFileList: DataFile[];\n}\n\nexport const DatablockSchema = SchemaFactory.createForClass(Datablock);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatablocksModule.html":{"url":"modules/DatablocksModule.html","title":"module - DatablocksModule","body":"\n                   \n\n\n\n\n    Modules\n    DatablocksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatablocksModule\n\n\n\ncluster_DatablocksModule_exports\n\n\n\ncluster_DatablocksModule_providers\n\n\n\n\nDatablocksService \n\nDatablocksService \n\n\n\nDatablocksModule\n\nDatablocksModule\n\nDatablocksService  -->\n\nDatablocksModule->DatablocksService \n\n\n\n\n\nDatablocksService\n\nDatablocksService\n\nDatablocksModule -->\n\nDatablocksService->DatablocksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/datablocks/datablocks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatablocksService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatablocksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { DatablocksService } from \"./datablocks.service\";\nimport { Datablock, DatablockSchema } from \"./schemas/datablock.schema\";\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Datablock.name,\n        schema: DatablockSchema,\n      },\n    ]),\n  ],\n  providers: [DatablocksService],\n  exports: [DatablocksService],\n})\nexport class DatablocksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatablocksService.html":{"url":"injectables/DatablocksService.html","title":"injectable - DatablocksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatablocksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datablocks/datablocks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(datablockModel: Model, request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/datablocks/datablocks.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        datablockModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createDatablockDto: CreateDatablockDto)\n                \n            \n\n\n            \n                \n                    Defined in src/datablocks/datablocks.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDatablockDto\n                                    \n                                                CreateDatablockDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/datablocks/datablocks.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/datablocks/datablocks.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/datablocks/datablocks.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(filter: FilterQuery, updateDatablockDto: UpdateDatablockDto)\n                \n            \n\n\n            \n                \n                    Defined in src/datablocks/datablocks.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDatablockDto\n                                    \n                                                UpdateDatablockDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@nestjs/common\";\nimport { REQUEST } from \"@nestjs/core\";\nimport { Request } from \"express\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { FilterQuery, Model } from \"mongoose\";\nimport { addCreatedByFields, addUpdatedByField } from \"src/common/utils\";\nimport { CreateDatablockDto } from \"./dto/create-datablock.dto\";\nimport { UpdateDatablockDto } from \"./dto/update-datablock.dto\";\nimport { Datablock, DatablockDocument } from \"./schemas/datablock.schema\";\nimport { JWTUser } from \"src/auth/interfaces/jwt-user.interface\";\n\n@Injectable()\nexport class DatablocksService {\n  constructor(\n    @InjectModel(Datablock.name)\n    private datablockModel: Model,\n    @Inject(REQUEST) private request: Request,\n  ) {}\n\n  async create(createDatablockDto: CreateDatablockDto): Promise {\n    const username = (this.request.user as JWTUser).username;\n    const createdDatablock = new this.datablockModel(\n      addCreatedByFields(createDatablockDto, username),\n    );\n    return createdDatablock.save();\n  }\n\n  async findAll(filter: FilterQuery): Promise {\n    return this.datablockModel.find(filter).exec();\n  }\n\n  async findOne(\n    filter: FilterQuery,\n  ): Promise {\n    return this.datablockModel.findOne(filter).exec();\n  }\n\n  async update(\n    filter: FilterQuery,\n    updateDatablockDto: UpdateDatablockDto,\n  ): Promise {\n    const username = (this.request.user as JWTUser).username;\n    return this.datablockModel\n      .findOneAndUpdate(\n        filter,\n        addUpdatedByField(updateDatablockDto, username),\n        {\n          new: true,\n        },\n      )\n      .exec();\n  }\n\n  async remove(filter: FilterQuery): Promise {\n    return this.datablockModel.findOneAndRemove(filter).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatasetListDto.html":{"url":"classes/DatasetListDto.html","title":"class - DatasetListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatasetListDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/dataset-list.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                files\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                pid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        files\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/dataset-list.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        pid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/dataset-list.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsNotEmpty, IsString } from \"class-validator\";\n\nexport class DatasetListDto {\n  @IsString()\n  @IsNotEmpty()\n  readonly pid: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  readonly files: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatasetsModule.html":{"url":"modules/DatasetsModule.html","title":"module - DatasetsModule","body":"\n                   \n\n\n\n\n    Modules\n    DatasetsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatasetsModule\n\n\n\ncluster_DatasetsModule_exports\n\n\n\ncluster_DatasetsModule_imports\n\n\n\ncluster_DatasetsModule_providers\n\n\n\n\nAttachmentsModule\n\nAttachmentsModule\n\n\n\nDatasetsModule\n\nDatasetsModule\n\nDatasetsModule -->\n\nAttachmentsModule->DatasetsModule\n\n\n\n\n\nDatablocksModule\n\nDatablocksModule\n\nDatasetsModule -->\n\nDatablocksModule->DatasetsModule\n\n\n\n\n\nInitialDatasetsModule\n\nInitialDatasetsModule\n\nDatasetsModule -->\n\nInitialDatasetsModule->DatasetsModule\n\n\n\n\n\nOrigDatablocksModule\n\nOrigDatablocksModule\n\nDatasetsModule -->\n\nOrigDatablocksModule->DatasetsModule\n\n\n\n\n\nDatasetsService \n\nDatasetsService \n\nDatasetsService  -->\n\nDatasetsModule->DatasetsService \n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nDatasetsModule -->\n\nCaslAbilityFactory->DatasetsModule\n\n\n\n\n\nDatasetsService\n\nDatasetsService\n\nDatasetsModule -->\n\nDatasetsService->DatasetsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/datasets/datasets.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslAbilityFactory\n                        \n                        \n                            DatasetsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatasetsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AttachmentsModule\n                        \n                        \n                            DatablocksModule\n                        \n                        \n                            InitialDatasetsModule\n                        \n                        \n                            OrigDatablocksModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatasetsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { DatasetClass, DatasetSchema } from \"./schemas/dataset.schema\";\nimport { DatasetsController } from \"./datasets.controller\";\nimport { DatasetsService } from \"./datasets.service\";\nimport { CaslAbilityFactory } from \"src/casl/casl-ability.factory\";\nimport { AttachmentsModule } from \"src/attachments/attachments.module\";\nimport { ConfigModule } from \"@nestjs/config\";\nimport { OrigDatablocksModule } from \"src/origdatablocks/origdatablocks.module\";\nimport { DatablocksModule } from \"src/datablocks/datablocks.module\";\nimport { InitialDatasetsModule } from \"src/initial-datasets/initial-datasets.module\";\nimport { LogbooksModule } from \"src/logbooks/logbooks.module\";\nimport { PoliciesService } from \"src/policies/policies.service\";\nimport { PoliciesModule } from \"src/policies/policies.module\";\n\n@Module({\n  imports: [\n    AttachmentsModule,\n    ConfigModule,\n    DatablocksModule,\n    OrigDatablocksModule,\n    InitialDatasetsModule,\n    forwardRef(() => LogbooksModule),\n    MongooseModule.forFeatureAsync([\n      {\n        name: DatasetClass.name,\n        imports: [PoliciesModule],\n        useFactory: (policyService: PoliciesService) => {\n          const schema = DatasetSchema;\n\n          schema.pre(\"save\", async function (next) {\n            // if _id is empty or differnet than pid,\n            // set _id to pid\n            if (!this._id) {\n              this._id = this.pid;\n            }\n            const policy = await policyService.findOne({\n              ownerGroup: this.ownerGroup,\n            });\n            let av: string;\n            if (policy) {\n              av = policy.tapeRedundancy || \"low\";\n            } else {\n              const regexLiteral = /(?\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatasetsService.html":{"url":"injectables/DatasetsService.html","title":"injectable - DatasetsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatasetsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/datasets.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByIdAndDelete\n                            \n                            \n                                    Async\n                                findByIdAndReplace\n                            \n                            \n                                    Async\n                                findByIdAndUpdate\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                fullFacet\n                            \n                            \n                                    Async\n                                fullquery\n                            \n                            \n                                    Async\n                                keepHistory\n                            \n                            \n                                    Async\n                                metadataKeys\n                            \n                            \n                                    Async\n                                updateAll\n                            \n                            \n                                    Async\n                                updateHistory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, datasetModel: Model, initialDatasetsService: InitialDatasetsService, logbooksService: LogbooksService, request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/datasets/datasets.service.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        datasetModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initialDatasetsService\n                                                  \n                                                        \n                                                                        InitialDatasetsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logbooksService\n                                                  \n                                                        \n                                                                        LogbooksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                    \n                    count(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/datasets/datasets.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createDatasetDto: CreateDatasetDto)\n                \n            \n\n\n            \n                \n                    Defined in src/datasets/datasets.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDatasetDto\n                                    \n                                                CreateDatasetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter: IFilters)\n                \n            \n\n\n            \n                \n                    Defined in src/datasets/datasets.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                IFilters\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByIdAndDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAndDelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/datasets/datasets.service.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByIdAndReplace\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAndReplace(id: string, updateDatasetDto: UpdateDatasetDto | UpdateRawDatasetDto | UpdateDerivedDatasetDto)\n                \n            \n\n\n            \n                \n                    Defined in src/datasets/datasets.service.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDatasetDto\n                                    \n                                            UpdateDatasetDto | UpdateRawDatasetDto | UpdateDerivedDatasetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByIdAndUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAndUpdate(id: string, updateDatasetDto: PartialUpdateDatasetDto | PartialUpdateRawDatasetDto | PartialUpdateDerivedDatasetDto | UpdateQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/datasets/datasets.service.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDatasetDto\n                                    \n                                                PartialUpdateDatasetDto | PartialUpdateRawDatasetDto | PartialUpdateDerivedDatasetDto | UpdateQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/datasets/datasets.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullFacet\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullFacet(filters: IFacets)\n                \n            \n\n\n            \n                \n                    Defined in src/datasets/datasets.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            IFacets\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullquery\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullquery(filter: IFilters, extraWhereClause: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/datasets/datasets.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                IFilters\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    extraWhereClause\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        keepHistory\n                        \n                    \n                \n            \n            \n                \n                    \n                    keepHistory(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/datasets/datasets.service.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        metadataKeys\n                        \n                    \n                \n            \n            \n                \n                    \n                    metadataKeys(filters: IFilters)\n                \n            \n\n\n            \n                \n                    Defined in src/datasets/datasets.service.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                IFilters\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAll(filter: FilterQuery, updateDatasetDto: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/datasets/datasets.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateDatasetDto\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateHistory\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHistory(req: Request, dataset: DatasetClass, data: UpdateDatasetDto)\n                \n            \n\n\n            \n                \n                    Defined in src/datasets/datasets.service.ts:358\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataset\n                                    \n                                                DatasetClass\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdateDatasetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  Logger,\n  NotFoundException,\n  Scope,\n} from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { REQUEST } from \"@nestjs/core\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Request } from \"express\";\nimport { FilterQuery, Model, QueryOptions, UpdateQuery } from \"mongoose\";\nimport { JWTUser } from \"src/auth/interfaces/jwt-user.interface\";\nimport { IFacets, IFilters } from \"src/common/interfaces/common.interface\";\nimport {\n  addCreatedByFields,\n  addUpdatedByField,\n  createFullfacetPipeline,\n  createFullqueryFilter,\n  extractMetadataKeys,\n  parseLimitFilters,\n} from \"src/common/utils\";\nimport { InitialDatasetsService } from \"src/initial-datasets/initial-datasets.service\";\nimport { LogbooksService } from \"src/logbooks/logbooks.service\";\nimport { DatasetType } from \"./dataset-type.enum\";\nimport { CreateDatasetDto } from \"./dto/create-dataset.dto\";\nimport {\n  PartialUpdateDatasetDto,\n  UpdateDatasetDto,\n} from \"./dto/update-dataset.dto\";\nimport {\n  PartialUpdateDerivedDatasetDto,\n  UpdateDerivedDatasetDto,\n} from \"./dto/update-derived-dataset.dto\";\nimport {\n  PartialUpdateRawDatasetDto,\n  UpdateRawDatasetDto,\n} from \"./dto/update-raw-dataset.dto\";\nimport { IDatasetFields } from \"./interfaces/dataset-filters.interface\";\nimport { DatasetClass, DatasetDocument } from \"./schemas/dataset.schema\";\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DatasetsService {\n  constructor(\n    private configService: ConfigService,\n    @InjectModel(DatasetClass.name)\n    private datasetModel: Model,\n    private initialDatasetsService: InitialDatasetsService,\n    private logbooksService: LogbooksService,\n    @Inject(REQUEST) private request: Request,\n  ) {}\n\n  async create(createDatasetDto: CreateDatasetDto): Promise {\n    const username = (this.request.user as JWTUser).username;\n    const createdDataset = new this.datasetModel(\n      // insert created and updated fields\n      addCreatedByFields(createDatasetDto, username),\n    );\n\n    return createdDataset.save();\n  }\n\n  async findAll(\n    filter: IFilters,\n  ): Promise {\n    const whereFilter: FilterQuery = filter.where ?? {};\n    const fieldsProjection: FilterQuery = filter.fields ?? {};\n    const { limit, skip, sort } = parseLimitFilters(filter.limits);\n\n    const datasetPromise = this.datasetModel\n      .find(whereFilter, fieldsProjection)\n      .limit(limit)\n      .skip(skip)\n      .sort(sort);\n\n    const datasets = await datasetPromise.exec();\n\n    return datasets;\n  }\n\n  async fullquery(\n    filter: IFilters,\n    extraWhereClause: FilterQuery = {},\n  ): Promise {\n    const filterQuery: FilterQuery =\n      createFullqueryFilter(\n        this.datasetModel,\n        \"pid\",\n        filter.fields as FilterQuery,\n      );\n    const whereClause: FilterQuery = {\n      ...filterQuery,\n      ...extraWhereClause,\n    };\n    const modifiers: QueryOptions = parseLimitFilters(filter.limits);\n\n    const datasets = await this.datasetModel\n      .find(whereClause, null, modifiers)\n      .exec();\n\n    return datasets;\n  }\n\n  async fullFacet(\n    filters: IFacets,\n  ): Promise[]> {\n    const fields = filters.fields ?? {};\n    const facets = filters.facets ?? [];\n\n    const pipeline = createFullfacetPipeline(\n      this.datasetModel,\n      \"pid\",\n      fields,\n      facets,\n    );\n\n    return await this.datasetModel.aggregate(pipeline).exec();\n  }\n\n  async updateAll(\n    filter: FilterQuery,\n    updateDatasetDto: Record,\n  ): Promise {\n    return this.datasetModel\n      .updateMany(filter, updateDatasetDto, { new: true })\n      .exec();\n  }\n\n  async findOne(\n    filter: FilterQuery,\n  ): Promise {\n    const whereFilter: FilterQuery = filter.where ?? {};\n    const fieldsProjection: FilterQuery = filter.fields ?? {};\n\n    return this.datasetModel.findOne(whereFilter, fieldsProjection).exec();\n  }\n\n  async count(\n    filter: FilterQuery,\n  ): Promise {\n    const whereFilter: FilterQuery = filter.where ?? {};\n\n    const count = await this.datasetModel.count(whereFilter).exec();\n    return { count };\n  }\n\n  // PUT dataset\n  // we update the full dataset if exist or create a new one if it does not\n  async findByIdAndReplace(\n    id: string,\n    updateDatasetDto:\n      | UpdateDatasetDto\n      | UpdateRawDatasetDto\n      | UpdateDerivedDatasetDto,\n  ): Promise {\n    const username = (this.request.user as JWTUser).username;\n    const existingDataset = await this.datasetModel.findOne({ pid: id }).exec();\n    if (!existingDataset) {\n      throw new NotFoundException();\n    }\n    // TODO: This might need a discussion.\n    // NOTE: _id, pid and some other fields should not be touched in any case.\n    const updatedDatasetInput = {\n      ...updateDatasetDto,\n      pid: existingDataset.pid,\n      createdBy: existingDataset.createdBy,\n      createdAt: existingDataset.createdAt,\n      history: existingDataset.history,\n    };\n    const updatedDataset = await this.datasetModel\n      .findOneAndReplace(\n        { pid: id },\n        addUpdatedByField(updatedDatasetInput, username),\n        {\n          new: true,\n        },\n      )\n      .exec();\n\n    // check if we were able to find the dataset and update it\n    if (!updatedDataset) {\n      throw new NotFoundException(`Dataset #${id} not found`);\n    }\n\n    // we were able to find the dataset and update it\n    return updatedDataset;\n  }\n\n  // PATCH dataset\n  // we update only the fields that have been modified on an existing dataset\n  async findByIdAndUpdate(\n    id: string,\n    updateDatasetDto:\n      | PartialUpdateDatasetDto\n      | PartialUpdateRawDatasetDto\n      | PartialUpdateDerivedDatasetDto\n      | UpdateQuery,\n  ): Promise {\n    const existingDataset = await this.datasetModel.findOne({ pid: id }).exec();\n    // check if we were able to find the dataset\n    if (!existingDataset) {\n      // no luck. we need to create a new dataset\n      throw new NotFoundException(`Dataset #${id} not found`);\n    }\n\n    const username = (this.request.user as JWTUser).username;\n\n    // NOTE: When doing findByIdAndUpdate in mongoose it does reset the subdocuments to default values if no value is provided\n    // https://stackoverflow.com/questions/57324321/mongoose-overwriting-data-in-mongodb-with-default-values-in-subdocuments\n    const patchedDataset = await this.datasetModel\n      .findOneAndUpdate(\n        { pid: id },\n        addUpdatedByField(\n          updateDatasetDto as UpdateQuery,\n          username,\n        ),\n        { new: true },\n      )\n      .exec();\n\n    // we were able to find the dataset and update it\n    return patchedDataset;\n  }\n\n  // DELETE dataset\n  async findByIdAndDelete(id: string): Promise {\n    return await this.datasetModel.findOneAndRemove({ pid: id });\n  }\n\n  // Get metadata keys\n  async metadataKeys(\n    filters: IFilters,\n  ): Promise {\n    const blacklist = [\n      new RegExp(\".*_date\"),\n      new RegExp(\"runNumber\"),\n      new RegExp(\"Entrych*.\"),\n      new RegExp(\"entryCh*.\"),\n      new RegExp(\"FMC-PICO*.\"),\n      new RegExp(\"BW_measurement*.\"),\n      new RegExp(\"Linearity_measurement*.\"),\n      new RegExp(\"Pulse_measurement*.\"),\n    ];\n\n    // ensure that no more than MAXLIMIT someCollections are read for metadata key extraction\n    let MAXLIMIT;\n    if (this.configService.get(\"metadataParentInstancesReturnLimit\")) {\n      MAXLIMIT = this.configService.get(\n        \"metadataParentInstancesReturnLimit\",\n      );\n\n      let lm;\n\n      if (filters.limits) {\n        lm = JSON.parse(JSON.stringify(filters.limits));\n      } else {\n        lm = {};\n      }\n\n      if (MAXLIMIT && lm.limit) {\n        if (lm.limit > MAXLIMIT) {\n          lm.limit = MAXLIMIT;\n        }\n      } else {\n        lm.limit = MAXLIMIT;\n      }\n      filters.limits = lm;\n    }\n\n    const datasets = await this.fullquery(filters);\n\n    const metadataKeys = extractMetadataKeys(\n      datasets as unknown as DatasetClass[],\n      \"scientificMetadata\",\n    ).filter((key) => !blacklist.some((regex) => regex.test(key)));\n\n    const metadataKey = filters.fields ? filters.fields.metadataKey : undefined;\n    const returnLimit = this.configService.get(\n      \"metadataKeysReturnLimit\",\n    );\n\n    if (metadataKey && metadataKey.length > 0) {\n      const filterKey = metadataKey.toLowerCase();\n      return metadataKeys\n        .filter((key) => key.toLowerCase().includes(filterKey))\n        .slice(0, returnLimit);\n    } else {\n      return metadataKeys.slice(0, returnLimit);\n    }\n  }\n\n  // this should update the history in all affected documents\n  async keepHistory(req: Request) {\n    // 4 different cases: (ctx.where:single/multiple instances)*(ctx.data: update of data/replacement of data)\n    if (req.query.where && req.body) {\n      // do not keep history for status updates from jobs, because this can take much too long for large jobs\n      if (req.body.$set) {\n        return;\n      }\n\n      const datasets = await this.findAll({\n        where: JSON.parse(\n          req.query.where as string,\n        ) as FilterQuery,\n      });\n\n      const dataCopy = JSON.parse(JSON.stringify(req.body));\n      await Promise.all(\n        datasets.map(async (dataset) => {\n          req.body = JSON.parse(JSON.stringify(dataCopy));\n          if (req.body && req.body.datasetlifecycle) {\n            const changes = JSON.parse(\n              JSON.stringify(req.body.datasetlifecycle),\n            );\n            req.body.datasetlifecycle = JSON.parse(\n              JSON.stringify(dataset.datasetlifecycle),\n            );\n            for (const k in changes) {\n              req.body.datasetlifecycle[k] = changes[k];\n            }\n\n            const initialDataset = await this.initialDatasetsService.findById(\n              dataset.pid,\n            );\n\n            if (!initialDataset) {\n              await this.initialDatasetsService.create({ _id: dataset.pid });\n              await this.updateHistory(req, dataset as DatasetClass, dataCopy);\n            } else {\n              await this.updateHistory(req, dataset as DatasetClass, dataCopy);\n            }\n          }\n        }),\n      );\n    }\n\n    // single dataset, update\n    if (!req.query.where && req.body.data) {\n      Logger.warn(\n        \"Single dataset update case without where condition is currently not treated: \" +\n          req.body.data,\n        \"DatasetsService.keepHistory\",\n      );\n      return;\n    }\n\n    // single dataset, update\n    if (!req.query.where && !req.body.data) {\n      return;\n    }\n\n    // single dataset, update\n    if (req.query.where && !req.body.data) {\n      return;\n    }\n  }\n\n  async updateHistory(\n    req: Request,\n    dataset: DatasetClass,\n    data: UpdateDatasetDto,\n  ) {\n    if (req.body.history) {\n      delete req.body.history;\n    }\n\n    if (!req.body.size && !req.body.packedSize) {\n      const updatedFields: Omit =\n        data;\n      const historyItem: Record = {};\n      Object.keys(updatedFields).forEach((updatedField) => {\n        historyItem[updatedField as keyof UpdateDatasetDto] = {\n          currentValue: data[updatedField as keyof UpdateDatasetDto],\n          previousValue: dataset[updatedField as keyof UpdateDatasetDto],\n        };\n      });\n      dataset.history = dataset.history ?? [];\n      dataset.history.push({\n        updatedBy: (req.user as JWTUser).username,\n        ...JSON.parse(JSON.stringify(historyItem).replace(/\\$/g, \"\")),\n      });\n      await this.findByIdAndUpdate(dataset.pid, { history: dataset.history });\n      const logbookEnabled = this.configService.get(\"logbook.enabled\");\n      if (logbookEnabled) {\n        const user = (req.user as JWTUser).username.replace(\"ldap.\", \"\");\n        const datasetPid = dataset.pid;\n        const proposalId =\n          dataset.type === DatasetType.Raw\n            ? (dataset as unknown as DatasetClass).proposalId\n            : undefined;\n        if (proposalId) {\n          await Promise.all(\n            Object.keys(updatedFields).map(async (updatedField) => {\n              const message = `${user} updated \"${updatedField}\" of dataset with PID ${datasetPid}`;\n              await this.logbooksService.sendMessage(proposalId, { message });\n            }),\n          );\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterPipe.html":{"url":"injectables/FilterPipe.html","title":"injectable - FilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/filter.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(inValue: literal type, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/filter.pipe.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inValue\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata } from \"@nestjs/common\";\n\n@Injectable()\nexport class FilterPipe\n  implements\n    PipeTransform\n{\n  transform(\n    inValue: { filter?: string; fields?: string },\n    metadata: ArgumentMetadata,\n  ): { filter?: string; fields?: string } {\n    /*\n     * intercept filter and make sure to convert loopback operators to mongo operators\n     */\n    const outValue = inValue;\n    if (inValue.filter) {\n      let filter = inValue.filter;\n      // subsitute the loopback operators to mongo equivalent\n      // nin => $in\n      // eslint-disable-next-line @typescript-eslint/quotes\n      filter = filter.replace(/{\"inq\":/g, '{\"$in\":');\n      // nin => $nin\n      // eslint-disable-next-line @typescript-eslint/quotes\n      filter = filter.replace(/{\"nin\":/g, '{\"$nin\":');\n      // and => $and\n      // eslint-disable-next-line @typescript-eslint/quotes\n      filter = filter.replace(/{\"and\":\\[/g, '{\"$and\":[');\n      // and => $or\n      // eslint-disable-next-line @typescript-eslint/quotes\n      filter = filter.replace(/{\"or\":\\[/g, '{\"$or\":[');\n      outValue.filter = filter;\n    }\n    return outValue;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormatPhysicalQuantitiesInterceptor.html":{"url":"injectables/FormatPhysicalQuantitiesInterceptor.html","title":"injectable - FormatPhysicalQuantitiesInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormatPhysicalQuantitiesInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/format-physical-quantities.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(propName)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/format-physical-quantities.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propName\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/format-physical-quantities.interceptor.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propName\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/common/interceptors/format-physical-quantities.interceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { Observable } from \"rxjs\";\nimport { appendSIUnitToPhysicalQuantity } from \"../utils\";\n\n@Injectable()\nexport class FormatPhysicalQuantitiesInterceptor implements NestInterceptor {\n  propName: keyof T;\n\n  constructor(propName: keyof T) {\n    this.propName = propName;\n  }\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    const req = context.switchToHttp().getRequest();\n    const instance: unknown = (req.body as T)[this.propName];\n\n    if (req.body[this.propName]) {\n      req.body[this.propName] = appendSIUnitToPhysicalQuantity(\n        instance as object,\n      );\n    }\n\n    return next.handle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FullQueryInterceptor.html":{"url":"injectables/FullQueryInterceptor.html","title":"injectable - FullQueryInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FullQueryInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/interceptors/fullquery.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/datasets/interceptors/fullquery.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { get, update } from \"lodash\";\nimport { map, Observable } from \"rxjs\";\nimport { convertToRequestedUnit } from \"src/common/utils\";\nimport { IDatasetFields } from \"../interfaces/dataset-filters.interface\";\nimport { DatasetClass } from \"../schemas/dataset.schema\";\n\n@Injectable()\nexport class FullQueryInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    return next.handle().pipe(\n      map((data: DatasetClass[]) => {\n        const req = context.switchToHttp().getRequest();\n        const fields: IDatasetFields = req.query.fields\n          ? JSON.parse(req.query.fields)\n          : {};\n        if (fields.scientific) {\n          const { scientific } = fields;\n          data.forEach(({ scientificMetadata }) => {\n            scientific.forEach(({ lhs, unit }) => {\n              const currentUnit = get(\n                scientificMetadata,\n                `${lhs}.unit`,\n              ) as string;\n              const currentValue = get(\n                scientificMetadata,\n                `${lhs}.value`,\n              ) as number;\n              if (\n                unit &&\n                currentUnit &&\n                currentUnit !== unit &&\n                scientificMetadata\n              ) {\n                const { valueRequested, unitRequested } =\n                  convertToRequestedUnit(currentValue, currentUnit, unit);\n                update(scientificMetadata, `${lhs}.unit`, () => unitRequested);\n                update(\n                  scientificMetadata,\n                  `${lhs}.value`,\n                  () => valueRequested,\n                );\n              }\n            });\n          });\n        }\n        return data;\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HistoryClass.html":{"url":"classes/HistoryClass.html","title":"class - HistoryClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HistoryClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/schemas/history.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, default: undefined, description: 'Persistent Identifier for datasets derived from UUIDv4 and prepended automatically by site specific PID prefix like 20.500.12345/'})@Prop({type: String, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/history.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, required: true, default: undefined, description: 'Time when the update was performed.'})@Prop({type: Date, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/history.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, required: true, default: undefined, description: 'Username of the user that performed the update.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/history.schema.ts:72\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Document } from \"mongoose\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport type HistoryDocument = HistoryClass & Document;\n\n@Schema({\n  strict: false,\n  timestamps: {\n    createdAt: false,\n    updatedAt: true,\n  },\n})\nexport class HistoryClass {\n  @ApiProperty({\n    type: String,\n    required: true,\n    default: uuidv4(),\n    description:\n      \"Persistent Identifier for datasets derived from UUIDv4 and prepended automatically by site specific PID prefix like 20.500.12345/\",\n  })\n  @Prop({\n    type: String,\n    //unique: true,\n    required: true,\n    default: uuidv4(),\n  })\n  /*\n  id: string;\n\n  @Prop({\n    type: String,\n  })\n  */\n  _id: string;\n\n  /*\n   * updated fields are added with the following syntax\n   * : {\n   *   currentValue: \n   *   previousValue: \n   * }\n   *\n   * After the migration, we should look in to change the structure\n   * to a new one that can be better validated\n   */\n\n  @ApiProperty({\n    type: Date,\n    required: true,\n    default: Date.now(),\n    description: \"Time when the update was performed.\",\n  })\n  @Prop({\n    type: Date,\n    required: true,\n    default: Date.now(),\n  })\n  updatedAt: Date;\n\n  @ApiProperty({\n    type: Date,\n    required: true,\n    default: Date.now(),\n    description: \"Username of the user that performed the update.\",\n  })\n  @Prop({\n    type: String,\n    required: true,\n  })\n  updatedBy: string;\n}\n\nexport const HistorySchema = SchemaFactory.createForClass(HistoryClass);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryInterceptor.html":{"url":"injectables/HistoryInterceptor.html","title":"injectable - HistoryInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HistoryInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/history.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(datasetsService: DatasetsService)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/history.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        datasetsService\n                                                  \n                                                        \n                                                                        DatasetsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/history.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { Observable } from \"rxjs\";\nimport { DatasetsService } from \"src/datasets/datasets.service\";\n\n@Injectable()\nexport class HistoryInterceptor implements NestInterceptor {\n  constructor(\n    @Inject(DatasetsService) readonly datasetsService: DatasetsService,\n  ) {}\n\n  async intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Promise> {\n    const req = context.switchToHttp().getRequest();\n    await this.datasetsService.keepHistory(req);\n    return next.handle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAxiosError.html":{"url":"interfaces/IAxiosError.html","title":"interface - IAxiosError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAxiosError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/common.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            config\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            request\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            response\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        request:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FilterQuery } from \"mongoose\";\nimport { ScientificRelation } from \"../scientific-relation.enum\";\n\nexport interface IScientificFilter {\n  lhs: string;\n  relation: ScientificRelation;\n  rhs: string | number;\n  unit: string | undefined;\n}\n\nexport interface IAxiosError {\n  response?: {\n    data: Record;\n    status: number;\n    headers: Record;\n  };\n  request?: Record;\n  message: unknown;\n  config: Record;\n}\n\nexport interface IProposalMember {\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\nexport interface IProposalAcceptedMessage {\n  proposalId: number;\n  shortCode: string;\n  title: string;\n  abstract: string;\n  members: IProposalMember[];\n  proposer: IProposalMember;\n}\n\nexport interface ILimitsFilter {\n  limit: number;\n  skip: number;\n  order: string;\n}\n\nexport interface IFilters {\n  where?: FilterQuery;\n  include?: { relation: string }[];\n  fields?: Y;\n  limits?: ILimitsFilter;\n}\n\nexport interface IFacets {\n  fields?: T;\n  facets?: string[];\n}\n\nexport interface IDatafileFilter {\n  path?: string;\n  size?: {\n    min?: number;\n    max?: number;\n  };\n  time?: {\n    min?: string;\n    max?: string;\n  };\n  chk?: string;\n  uid?: string;\n  gid?: string;\n  perm?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICount.html":{"url":"interfaces/ICount.html","title":"interface - ICount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/published-data/interfaces/published-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FilterQuery } from \"mongoose\";\nimport { PublishedDataDocument } from \"../schemas/published-data.schema\";\n\nexport interface IPublishedDataFilters {\n  where?: FilterQuery;\n  include?: { relation: string }[];\n  fields?: {\n    status: string;\n  };\n  limits?: {\n    skip: number;\n    limit: number;\n    order: string;\n  };\n}\n\nexport interface ICount {\n  count: number;\n}\n\nexport interface IFormPopulateData {\n  resourceType?: string;\n  description?: string;\n  title?: string;\n  abstract?: string;\n  thumbnail?: string;\n}\n\nexport interface IRegister {\n  doi: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatablockFields.html":{"url":"interfaces/IDatablockFields.html","title":"interface - IDatablockFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatablockFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datablocks/interfaces/datablocks.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            archiveId\n                                        \n                                \n                                \n                                        \n                                            dataFilelist\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            datasetId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            packedSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        archiveId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        archiveId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataFilelist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataFilelist:         IDatafileFilter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDatafileFilter[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datasetId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datasetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        packedSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        packedSize:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDatafileFilter } from \"src/common/interfaces/common.interface\";\n\nexport interface IDatablockFields {\n  datasetId?: string;\n  archiveId?: string;\n  size?: {\n    min?: string;\n    max?: string;\n  };\n  packedSize?: {\n    min?: string;\n    max?: string;\n  };\n  dataFilelist: IDatafileFilter[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatafileFilter.html":{"url":"interfaces/IDatafileFilter.html","title":"interface - IDatafileFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatafileFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/common.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            chk\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gid\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            perm\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            time\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chk\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chk:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        perm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        perm:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FilterQuery } from \"mongoose\";\nimport { ScientificRelation } from \"../scientific-relation.enum\";\n\nexport interface IScientificFilter {\n  lhs: string;\n  relation: ScientificRelation;\n  rhs: string | number;\n  unit: string | undefined;\n}\n\nexport interface IAxiosError {\n  response?: {\n    data: Record;\n    status: number;\n    headers: Record;\n  };\n  request?: Record;\n  message: unknown;\n  config: Record;\n}\n\nexport interface IProposalMember {\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\nexport interface IProposalAcceptedMessage {\n  proposalId: number;\n  shortCode: string;\n  title: string;\n  abstract: string;\n  members: IProposalMember[];\n  proposer: IProposalMember;\n}\n\nexport interface ILimitsFilter {\n  limit: number;\n  skip: number;\n  order: string;\n}\n\nexport interface IFilters {\n  where?: FilterQuery;\n  include?: { relation: string }[];\n  fields?: Y;\n  limits?: ILimitsFilter;\n}\n\nexport interface IFacets {\n  fields?: T;\n  facets?: string[];\n}\n\nexport interface IDatafileFilter {\n  path?: string;\n  size?: {\n    min?: number;\n    max?: number;\n  };\n  time?: {\n    min?: string;\n    max?: string;\n  };\n  chk?: string;\n  uid?: string;\n  gid?: string;\n  perm?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatasetFields.html":{"url":"interfaces/IDatasetFields.html","title":"interface - IDatasetFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatasetFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/interfaces/dataset-filters.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            creationLocation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            creationTime\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isPublished\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            keywords\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            metadataKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ownerGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scientific\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sharedWith\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userGroups\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    \n\n                    \n                \n                        \n                            \n                                Defined in src/datasets/interfaces/dataset-filters.interface.ts:19\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creationLocation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creationLocation:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creationTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creationTime:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPublished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keywords\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keywords:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadataKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadataKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerGroup:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scientific\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scientific:         IScientificFilter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IScientificFilter[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sharedWith\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sharedWith:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userGroups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userGroups:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IScientificFilter } from \"src/common/interfaces/common.interface\";\n\nexport interface IDatasetFields {\n  mode?: Record;\n  text?: string;\n  creationTime?: {\n    begin: string;\n    end: string;\n  };\n  type?: string[];\n  creationLocation?: string[];\n  ownerGroup?: string[];\n  keywords?: string[];\n  isPublished?: boolean;\n  scientific?: IScientificFilter[];\n  metadataKey?: string;\n  _id?: string;\n  userGroups?: string[];\n  sharedWith?: string;\n  [key: string]: unknown;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDatasetList.html":{"url":"interfaces/IDatasetList.html","title":"interface - IDatasetList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDatasetList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/interfaces/dataset-list.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            files\n                                        \n                                \n                                \n                                        \n                                            pid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        files\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        files:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDatasetList {\n  pid: string;\n  files: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDateRange.html":{"url":"interfaces/IDateRange.html","title":"interface - IDateRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDateRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/proposals/interfaces/proposal-filters.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            begin\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        begin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        begin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IProposalFieldObject {\n  $regex: string;\n  $options: string;\n}\n\ninterface IDateRange {\n  begin: string;\n  end: string;\n}\n\nexport interface IProposalFields {\n  text?: string;\n  startTime?: IDateRange;\n  proposalId?: IProposalFieldObject;\n  title?: IProposalFieldObject;\n  firstname?: IProposalFieldObject;\n  lastname?: IProposalFieldObject;\n  endTime?: IDateRange;\n  userGroups?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFacets.html":{"url":"interfaces/IFacets.html","title":"interface - IFacets","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFacets\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/common.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            facets\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fields\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        facets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        facets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fields:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FilterQuery } from \"mongoose\";\nimport { ScientificRelation } from \"../scientific-relation.enum\";\n\nexport interface IScientificFilter {\n  lhs: string;\n  relation: ScientificRelation;\n  rhs: string | number;\n  unit: string | undefined;\n}\n\nexport interface IAxiosError {\n  response?: {\n    data: Record;\n    status: number;\n    headers: Record;\n  };\n  request?: Record;\n  message: unknown;\n  config: Record;\n}\n\nexport interface IProposalMember {\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\nexport interface IProposalAcceptedMessage {\n  proposalId: number;\n  shortCode: string;\n  title: string;\n  abstract: string;\n  members: IProposalMember[];\n  proposer: IProposalMember;\n}\n\nexport interface ILimitsFilter {\n  limit: number;\n  skip: number;\n  order: string;\n}\n\nexport interface IFilters {\n  where?: FilterQuery;\n  include?: { relation: string }[];\n  fields?: Y;\n  limits?: ILimitsFilter;\n}\n\nexport interface IFacets {\n  fields?: T;\n  facets?: string[];\n}\n\nexport interface IDatafileFilter {\n  path?: string;\n  size?: {\n    min?: number;\n    max?: number;\n  };\n  time?: {\n    min?: string;\n    max?: string;\n  };\n  chk?: string;\n  uid?: string;\n  gid?: string;\n  perm?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFilters.html":{"url":"interfaces/IFilters.html","title":"interface - IFilters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFilters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/common.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fields\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            include\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            limits\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            where\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fields:     Y\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Y\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        include\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        include:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limits\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limits:         ILimitsFilter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ILimitsFilter\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        where\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        where:     FilterQuery\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FilterQuery\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FilterQuery } from \"mongoose\";\nimport { ScientificRelation } from \"../scientific-relation.enum\";\n\nexport interface IScientificFilter {\n  lhs: string;\n  relation: ScientificRelation;\n  rhs: string | number;\n  unit: string | undefined;\n}\n\nexport interface IAxiosError {\n  response?: {\n    data: Record;\n    status: number;\n    headers: Record;\n  };\n  request?: Record;\n  message: unknown;\n  config: Record;\n}\n\nexport interface IProposalMember {\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\nexport interface IProposalAcceptedMessage {\n  proposalId: number;\n  shortCode: string;\n  title: string;\n  abstract: string;\n  members: IProposalMember[];\n  proposer: IProposalMember;\n}\n\nexport interface ILimitsFilter {\n  limit: number;\n  skip: number;\n  order: string;\n}\n\nexport interface IFilters {\n  where?: FilterQuery;\n  include?: { relation: string }[];\n  fields?: Y;\n  limits?: ILimitsFilter;\n}\n\nexport interface IFacets {\n  fields?: T;\n  facets?: string[];\n}\n\nexport interface IDatafileFilter {\n  path?: string;\n  size?: {\n    min?: number;\n    max?: number;\n  };\n  time?: {\n    min?: string;\n    max?: string;\n  };\n  chk?: string;\n  uid?: string;\n  gid?: string;\n  perm?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFormPopulateData.html":{"url":"interfaces/IFormPopulateData.html","title":"interface - IFormPopulateData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFormPopulateData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/published-data/interfaces/published-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            abstract\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            resourceType\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            thumbnail\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abstract\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        abstract:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resourceType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resourceType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FilterQuery } from \"mongoose\";\nimport { PublishedDataDocument } from \"../schemas/published-data.schema\";\n\nexport interface IPublishedDataFilters {\n  where?: FilterQuery;\n  include?: { relation: string }[];\n  fields?: {\n    status: string;\n  };\n  limits?: {\n    skip: number;\n    limit: number;\n    order: string;\n  };\n}\n\nexport interface ICount {\n  count: number;\n}\n\nexport interface IFormPopulateData {\n  resourceType?: string;\n  description?: string;\n  title?: string;\n  abstract?: string;\n  thumbnail?: string;\n}\n\nexport interface IRegister {\n  doi: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILimitsFilter.html":{"url":"interfaces/ILimitsFilter.html","title":"interface - ILimitsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILimitsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/common.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            limit\n                                        \n                                \n                                \n                                        \n                                            order\n                                        \n                                \n                                \n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FilterQuery } from \"mongoose\";\nimport { ScientificRelation } from \"../scientific-relation.enum\";\n\nexport interface IScientificFilter {\n  lhs: string;\n  relation: ScientificRelation;\n  rhs: string | number;\n  unit: string | undefined;\n}\n\nexport interface IAxiosError {\n  response?: {\n    data: Record;\n    status: number;\n    headers: Record;\n  };\n  request?: Record;\n  message: unknown;\n  config: Record;\n}\n\nexport interface IProposalMember {\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\nexport interface IProposalAcceptedMessage {\n  proposalId: number;\n  shortCode: string;\n  title: string;\n  abstract: string;\n  members: IProposalMember[];\n  proposer: IProposalMember;\n}\n\nexport interface ILimitsFilter {\n  limit: number;\n  skip: number;\n  order: string;\n}\n\nexport interface IFilters {\n  where?: FilterQuery;\n  include?: { relation: string }[];\n  fields?: Y;\n  limits?: ILimitsFilter;\n}\n\nexport interface IFacets {\n  fields?: T;\n  facets?: string[];\n}\n\nexport interface IDatafileFilter {\n  path?: string;\n  size?: {\n    min?: number;\n    max?: number;\n  };\n  time?: {\n    min?: string;\n    max?: string;\n  };\n  chk?: string;\n  uid?: string;\n  gid?: string;\n  perm?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOrigDatablockFields.html":{"url":"interfaces/IOrigDatablockFields.html","title":"interface - IOrigDatablockFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IOrigDatablockFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/origdatablocks/interfaces/origdatablocks.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dataFilelist\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            datasetId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dataFilelist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataFilelist:         IDatafileFilter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDatafileFilter[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datasetId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datasetId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDatafileFilter } from \"src/common/interfaces/common.interface\";\n\nexport interface IOrigDatablockFields {\n  datasetId?: string;\n  size?: {\n    min?: string;\n    max?: string;\n  };\n  dataFilelist: IDatafileFilter[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPolicyFilter.html":{"url":"interfaces/IPolicyFilter.html","title":"interface - IPolicyFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPolicyFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/policies/interfaces/policy-filters.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            where\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        where\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        where:         FilterQuery\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FilterQuery\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FilterQuery } from \"mongoose\";\nimport { PolicyDocument } from \"../schemas/policy.schema\";\n\nexport interface IPolicyFilter {\n  where?: FilterQuery;\n  order?: string;\n  skip?: number;\n  limit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPolicyHandler.html":{"url":"interfaces/IPolicyHandler.html","title":"interface - IPolicyHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPolicyHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/casl/interfaces/policy-handler.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        handle\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in src/casl/interfaces/policy-handler.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AppAbility } from \"../casl-ability.factory\";\n\ninterface IPolicyHandler {\n  handle(ability: AppAbility): boolean;\n}\n\ntype PolicyHandlerCallback = (ability: AppAbility) => boolean;\n\nexport type PolicyHandler = IPolicyHandler | PolicyHandlerCallback;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProposalAcceptedMessage.html":{"url":"interfaces/IProposalAcceptedMessage.html","title":"interface - IProposalAcceptedMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProposalAcceptedMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/common.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            abstract\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                                \n                                        \n                                            proposalId\n                                        \n                                \n                                \n                                        \n                                            proposer\n                                        \n                                \n                                \n                                        \n                                            shortCode\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        abstract\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        abstract:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:         IProposalMember[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IProposalMember[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        proposalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        proposalId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        proposer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        proposer:         IProposalMember\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IProposalMember\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shortCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shortCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FilterQuery } from \"mongoose\";\nimport { ScientificRelation } from \"../scientific-relation.enum\";\n\nexport interface IScientificFilter {\n  lhs: string;\n  relation: ScientificRelation;\n  rhs: string | number;\n  unit: string | undefined;\n}\n\nexport interface IAxiosError {\n  response?: {\n    data: Record;\n    status: number;\n    headers: Record;\n  };\n  request?: Record;\n  message: unknown;\n  config: Record;\n}\n\nexport interface IProposalMember {\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\nexport interface IProposalAcceptedMessage {\n  proposalId: number;\n  shortCode: string;\n  title: string;\n  abstract: string;\n  members: IProposalMember[];\n  proposer: IProposalMember;\n}\n\nexport interface ILimitsFilter {\n  limit: number;\n  skip: number;\n  order: string;\n}\n\nexport interface IFilters {\n  where?: FilterQuery;\n  include?: { relation: string }[];\n  fields?: Y;\n  limits?: ILimitsFilter;\n}\n\nexport interface IFacets {\n  fields?: T;\n  facets?: string[];\n}\n\nexport interface IDatafileFilter {\n  path?: string;\n  size?: {\n    min?: number;\n    max?: number;\n  };\n  time?: {\n    min?: string;\n    max?: string;\n  };\n  chk?: string;\n  uid?: string;\n  gid?: string;\n  perm?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProposalFieldObject.html":{"url":"interfaces/IProposalFieldObject.html","title":"interface - IProposalFieldObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProposalFieldObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/proposals/interfaces/proposal-filters.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            $options\n                                        \n                                \n                                \n                                        \n                                            $regex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $options:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $regex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $regex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IProposalFieldObject {\n  $regex: string;\n  $options: string;\n}\n\ninterface IDateRange {\n  begin: string;\n  end: string;\n}\n\nexport interface IProposalFields {\n  text?: string;\n  startTime?: IDateRange;\n  proposalId?: IProposalFieldObject;\n  title?: IProposalFieldObject;\n  firstname?: IProposalFieldObject;\n  lastname?: IProposalFieldObject;\n  endTime?: IDateRange;\n  userGroups?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProposalFields.html":{"url":"interfaces/IProposalFields.html","title":"interface - IProposalFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProposalFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/proposals/interfaces/proposal-filters.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            endTime\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            proposalId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startTime\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userGroups\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endTime:         IDateRange\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDateRange\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         IProposalFieldObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IProposalFieldObject\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         IProposalFieldObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IProposalFieldObject\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        proposalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        proposalId:         IProposalFieldObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IProposalFieldObject\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startTime:         IDateRange\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IDateRange\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         IProposalFieldObject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IProposalFieldObject\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userGroups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userGroups:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IProposalFieldObject {\n  $regex: string;\n  $options: string;\n}\n\ninterface IDateRange {\n  begin: string;\n  end: string;\n}\n\nexport interface IProposalFields {\n  text?: string;\n  startTime?: IDateRange;\n  proposalId?: IProposalFieldObject;\n  title?: IProposalFieldObject;\n  firstname?: IProposalFieldObject;\n  lastname?: IProposalFieldObject;\n  endTime?: IDateRange;\n  userGroups?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProposalMember.html":{"url":"interfaces/IProposalMember.html","title":"interface - IProposalMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IProposalMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/common.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FilterQuery } from \"mongoose\";\nimport { ScientificRelation } from \"../scientific-relation.enum\";\n\nexport interface IScientificFilter {\n  lhs: string;\n  relation: ScientificRelation;\n  rhs: string | number;\n  unit: string | undefined;\n}\n\nexport interface IAxiosError {\n  response?: {\n    data: Record;\n    status: number;\n    headers: Record;\n  };\n  request?: Record;\n  message: unknown;\n  config: Record;\n}\n\nexport interface IProposalMember {\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\nexport interface IProposalAcceptedMessage {\n  proposalId: number;\n  shortCode: string;\n  title: string;\n  abstract: string;\n  members: IProposalMember[];\n  proposer: IProposalMember;\n}\n\nexport interface ILimitsFilter {\n  limit: number;\n  skip: number;\n  order: string;\n}\n\nexport interface IFilters {\n  where?: FilterQuery;\n  include?: { relation: string }[];\n  fields?: Y;\n  limits?: ILimitsFilter;\n}\n\nexport interface IFacets {\n  fields?: T;\n  facets?: string[];\n}\n\nexport interface IDatafileFilter {\n  path?: string;\n  size?: {\n    min?: number;\n    max?: number;\n  };\n  time?: {\n    min?: string;\n    max?: string;\n  };\n  chk?: string;\n  uid?: string;\n  gid?: string;\n  perm?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPublishedDataFilters.html":{"url":"interfaces/IPublishedDataFilters.html","title":"interface - IPublishedDataFilters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPublishedDataFilters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/published-data/interfaces/published-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            fields\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            include\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            limits\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            where\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fields:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        include\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        include:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limits\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limits:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        where\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        where:         FilterQuery\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FilterQuery\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FilterQuery } from \"mongoose\";\nimport { PublishedDataDocument } from \"../schemas/published-data.schema\";\n\nexport interface IPublishedDataFilters {\n  where?: FilterQuery;\n  include?: { relation: string }[];\n  fields?: {\n    status: string;\n  };\n  limits?: {\n    skip: number;\n    limit: number;\n    order: string;\n  };\n}\n\nexport interface ICount {\n  count: number;\n}\n\nexport interface IFormPopulateData {\n  resourceType?: string;\n  description?: string;\n  title?: string;\n  abstract?: string;\n  thumbnail?: string;\n}\n\nexport interface IRegister {\n  doi: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRegister.html":{"url":"interfaces/IRegister.html","title":"interface - IRegister","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRegister\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/published-data/interfaces/published-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            doi\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        doi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        doi:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FilterQuery } from \"mongoose\";\nimport { PublishedDataDocument } from \"../schemas/published-data.schema\";\n\nexport interface IPublishedDataFilters {\n  where?: FilterQuery;\n  include?: { relation: string }[];\n  fields?: {\n    status: string;\n  };\n  limits?: {\n    skip: number;\n    limit: number;\n    order: string;\n  };\n}\n\nexport interface ICount {\n  count: number;\n}\n\nexport interface IFormPopulateData {\n  resourceType?: string;\n  description?: string;\n  title?: string;\n  abstract?: string;\n  thumbnail?: string;\n}\n\nexport interface IRegister {\n  doi: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISampleFields.html":{"url":"interfaces/ISampleFields.html","title":"interface - ISampleFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISampleFields\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/samples/interfaces/sample-filters.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            characteristics\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            metadataKey\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        characteristics\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        characteristics:         IScientificFilter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IScientificFilter[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadataKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        metadataKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IScientificFilter } from \"src/common/interfaces/common.interface\";\n\nexport interface ISampleFields {\n  text?: string;\n  metadataKey?: string;\n  characteristics: IScientificFilter[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IScientificFilter.html":{"url":"interfaces/IScientificFilter.html","title":"interface - IScientificFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IScientificFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/common.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            lhs\n                                        \n                                \n                                \n                                        \n                                            relation\n                                        \n                                \n                                \n                                        \n                                            rhs\n                                        \n                                \n                                \n                                        \n                                            unit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lhs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lhs:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        relation:         ScientificRelation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ScientificRelation\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rhs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rhs:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unit:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FilterQuery } from \"mongoose\";\nimport { ScientificRelation } from \"../scientific-relation.enum\";\n\nexport interface IScientificFilter {\n  lhs: string;\n  relation: ScientificRelation;\n  rhs: string | number;\n  unit: string | undefined;\n}\n\nexport interface IAxiosError {\n  response?: {\n    data: Record;\n    status: number;\n    headers: Record;\n  };\n  request?: Record;\n  message: unknown;\n  config: Record;\n}\n\nexport interface IProposalMember {\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n\nexport interface IProposalAcceptedMessage {\n  proposalId: number;\n  shortCode: string;\n  title: string;\n  abstract: string;\n  members: IProposalMember[];\n  proposer: IProposalMember;\n}\n\nexport interface ILimitsFilter {\n  limit: number;\n  skip: number;\n  order: string;\n}\n\nexport interface IFilters {\n  where?: FilterQuery;\n  include?: { relation: string }[];\n  fields?: Y;\n  limits?: ILimitsFilter;\n}\n\nexport interface IFacets {\n  fields?: T;\n  facets?: string[];\n}\n\nexport interface IDatafileFilter {\n  path?: string;\n  size?: {\n    min?: number;\n    max?: number;\n  };\n  time?: {\n    min?: string;\n    max?: string;\n  };\n  chk?: string;\n  uid?: string;\n  gid?: string;\n  perm?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitialDataset.html":{"url":"classes/InitialDataset.html","title":"class - InitialDataset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitialDataset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/initial-datasets/schemas/initial-dataset.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/initial-datasets/schemas/initial-dataset.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n\nexport type InitialDatasetDocument = InitialDataset & Document;\n\n@Schema({\n  collection: \"InitialDataset\",\n  toJSON: {\n    getters: true,\n  },\n})\nexport class InitialDataset {\n  @Prop({ type: String, required: true })\n  _id: string;\n}\n\nexport const InitialDatasetSchema =\n  SchemaFactory.createForClass(InitialDataset);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InitialDatasetsModule.html":{"url":"modules/InitialDatasetsModule.html","title":"module - InitialDatasetsModule","body":"\n                   \n\n\n\n\n    Modules\n    InitialDatasetsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InitialDatasetsModule\n\n\n\ncluster_InitialDatasetsModule_exports\n\n\n\ncluster_InitialDatasetsModule_providers\n\n\n\n\nInitialDatasetsService \n\nInitialDatasetsService \n\n\n\nInitialDatasetsModule\n\nInitialDatasetsModule\n\nInitialDatasetsService  -->\n\nInitialDatasetsModule->InitialDatasetsService \n\n\n\n\n\nInitialDatasetsService\n\nInitialDatasetsService\n\nInitialDatasetsModule -->\n\nInitialDatasetsService->InitialDatasetsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/initial-datasets/initial-datasets.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InitialDatasetsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InitialDatasetsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { InitialDatasetsService } from \"./initial-datasets.service\";\nimport {\n  InitialDataset,\n  InitialDatasetSchema,\n} from \"./schemas/initial-dataset.schema\";\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: InitialDataset.name,\n        schema: InitialDatasetSchema,\n      },\n    ]),\n  ],\n  exports: [InitialDatasetsService],\n  providers: [InitialDatasetsService],\n})\nexport class InitialDatasetsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InitialDatasetsService.html":{"url":"injectables/InitialDatasetsService.html","title":"injectable - InitialDatasetsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InitialDatasetsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/initial-datasets/initial-datasets.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(initialDatasetModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/initial-datasets/initial-datasets.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initialDatasetModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createInitialDatasetDto: CreateInitialDatasetDto)\n                \n            \n\n\n            \n                \n                    Defined in src/initial-datasets/initial-datasets.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createInitialDatasetDto\n                                    \n                                                CreateInitialDatasetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/initial-datasets/initial-datasets.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Model } from \"mongoose\";\nimport { CreateInitialDatasetDto } from \"./dto/create-initial-dataset.dto\";\nimport {\n  InitialDataset,\n  InitialDatasetDocument,\n} from \"./schemas/initial-dataset.schema\";\n\n@Injectable()\nexport class InitialDatasetsService {\n  constructor(\n    @InjectModel(InitialDataset.name)\n    private initialDatasetModel: Model,\n  ) {}\n\n  async create(\n    createInitialDatasetDto: CreateInitialDatasetDto,\n  ): Promise {\n    const createdInitialDataset = new this.initialDatasetModel(\n      createInitialDatasetDto,\n    );\n    return createdInitialDataset.save();\n  }\n\n  async findById(id: string): Promise {\n    return this.initialDatasetModel.findById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Instrument.html":{"url":"classes/Instrument.html","title":"class - Instrument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Instrument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/instruments/schemas/instrument.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                customMetadata\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                pid\n                            \n                            \n                                    \n                                    \n                                uniqueName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/instruments/schemas/instrument.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        customMetadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, required: false, default: undefined, description: 'JSON object containing custom metadata.'})@Prop({type: Object, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/instruments/schemas/instrument.schema.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'The common name of the instrument. This name can be non unique as it is the name that users use to commonly refer to this instrument.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/instruments/schemas/instrument.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        pid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, default: undefined, required: true, description: 'PID of the instrument.'})@Prop({type: String, unique: true, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/instruments/schemas/instrument.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uniqueName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'The unique name of the instrument. This name has to be unique within the scicat instance.'})@Prop({type: String, unique: true, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/instruments/schemas/instrument.schema.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Document } from \"mongoose\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport type InstrumentDocument = Instrument & Document;\n\n@Schema({\n  collection: \"Instrument\",\n  minimize: false,\n  timestamps: true,\n  toJSON: {\n    getters: true,\n  },\n})\nexport class Instrument {\n  @ApiProperty({\n    type: String,\n    default: function genUUID(): string {\n      return (process.env.PID_PREFIX ? process.env.PID_PREFIX : \"\") + uuidv4();\n    },\n    required: true,\n    description: \"PID of the instrument.\",\n  })\n  @Prop({\n    type: String,\n    unique: true,\n    required: true,\n    default: function genUUID(): string {\n      return (process.env.PID_PREFIX ? process.env.PID_PREFIX : \"\") + uuidv4();\n    },\n  })\n  pid: string;\n\n  @Prop({\n    type: String,\n  })\n  _id: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description:\n      \"The unique name of the instrument. This name has to be unique within the scicat instance.\",\n  })\n  @Prop({\n    type: String,\n    unique: true,\n    required: true,\n  })\n  uniqueName: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description:\n      \"The common name of the instrument. This name can be non unique as it is the name that users use to commonly refer to this instrument.\",\n  })\n  @Prop({\n    type: String,\n    required: true,\n  })\n  name: string;\n\n  @ApiProperty({\n    type: Object,\n    required: false,\n    default: {},\n    description: \"JSON object containing custom metadata.\",\n  })\n  @Prop({\n    type: Object,\n    required: false,\n    default: {},\n  })\n  customMetadata: Record;\n}\n\nexport const InstrumentSchema = SchemaFactory.createForClass(Instrument);\n\nInstrumentSchema.index({ \"$**\": \"text\" });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InstrumentsController.html":{"url":"controllers/InstrumentsController.html","title":"controller - InstrumentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InstrumentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/instruments/instruments.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                instruments\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createInstrumentDto: CreateInstrumentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@UseInterceptors(new FormatPhysicalQuantitiesInterceptor())@Post()\n                \n            \n\n            \n                \n                    Defined in src/instruments/instruments.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createInstrumentDto\n                                    \n                                                CreateInstrumentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get()@ApiQuery({name: 'filter', description: 'Database filters to apply when retrieve all instruments', required: false})\n                \n            \n\n            \n                \n                    Defined in src/instruments/instruments.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(pid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/instruments/instruments.controller.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get('/findOne')@ApiOperation({summary: 'It returns the first instrument found.', description: 'It returns the first instrument of the ones that matches the filter provided. The list returned can be modified by providing a filter.'})@ApiQuery({name: 'filter', description: undefined, required: false, type: String, example: filterExample})@ApiResponse({status: 200, type: Instrument, description: 'Return the instrument requested'})\n                \n            \n\n            \n                \n                    Defined in src/instruments/instruments.controller.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/instruments/instruments.controller.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateInstrumentDto: UpdateInstrumentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@UseInterceptors(new FormatPhysicalQuantitiesInterceptor())@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/instruments/instruments.controller.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateInstrumentDto\n                                    \n                                                UpdateInstrumentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n  UseInterceptors,\n  HttpException,\n  HttpStatus,\n} from \"@nestjs/common\";\nimport { InstrumentsService } from \"./instruments.service\";\nimport { CreateInstrumentDto } from \"./dto/create-instrument.dto\";\nimport { UpdateInstrumentDto } from \"./dto/update-instrument.dto\";\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { PoliciesGuard } from \"src/casl/guards/policies.guard\";\nimport { CheckPolicies } from \"src/casl/decorators/check-policies.decorator\";\nimport { AppAbility } from \"src/casl/casl-ability.factory\";\nimport { Action } from \"src/casl/action.enum\";\nimport { Instrument, InstrumentDocument } from \"./schemas/instrument.schema\";\nimport { FormatPhysicalQuantitiesInterceptor } from \"src/common/interceptors/format-physical-quantities.interceptor\";\nimport { IFilters } from \"src/common/interfaces/common.interface\";\nimport {\n  filterDescription,\n  filterExample,\n  replaceLikeOperator,\n} from \"src/common/utils\";\n\n@ApiBearerAuth()\n@ApiTags(\"instruments\")\n@Controller(\"instruments\")\nexport class InstrumentsController {\n  constructor(private readonly instrumentsService: InstrumentsService) {}\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.InstrumentCreate, Instrument),\n  )\n  @UseInterceptors(\n    new FormatPhysicalQuantitiesInterceptor(\"customMetadata\"),\n  )\n  @Post()\n  async create(\n    @Body() createInstrumentDto: CreateInstrumentDto,\n  ): Promise {\n    try {\n      const instrument = await this.instrumentsService.create(\n        createInstrumentDto,\n      );\n      return instrument;\n    } catch (e) {\n      throw new HttpException(\n        \"Instrument with the same unique name already exists\",\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.InstrumentRead, Instrument),\n  )\n  @Get()\n  @ApiQuery({\n    name: \"filter\",\n    description: \"Database filters to apply when retrieve all instruments\",\n    required: false,\n  })\n  async findAll(@Query(\"filter\") filter?: string): Promise {\n    const instrumentFilter: IFilters = replaceLikeOperator(\n      JSON.parse(filter ?? \"{}\"),\n    );\n    return this.instrumentsService.findAll(instrumentFilter);\n  }\n\n  // GET /instrument/findOne\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.InstrumentRead, Instrument),\n  )\n  @Get(\"/findOne\")\n  @ApiOperation({\n    summary: \"It returns the first instrument found.\",\n    description:\n      \"It returns the first instrument of the ones that matches the filter provided. The list returned can be modified by providing a filter.\",\n  })\n  @ApiQuery({\n    name: \"filter\",\n    description:\n      \"Database filters to apply when retrieving instruments\\n\" +\n      filterDescription,\n    required: false,\n    type: String,\n    example: filterExample,\n  })\n  @ApiResponse({\n    status: 200,\n    type: Instrument,\n    description: \"Return the instrument requested\",\n  })\n  async findOne(@Query(\"filter\") filter?: string): Promise {\n    const instrumentFilters = replaceLikeOperator(JSON.parse(filter ?? \"{}\"));\n\n    return this.instrumentsService.findOne(instrumentFilters);\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.InstrumentRead, Instrument),\n  )\n  @Get(\":id\")\n  async findById(@Param(\"id\") pid: string): Promise {\n    return this.instrumentsService.findOne({ where: { _id: pid } });\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.InstrumentUpdate, Instrument),\n  )\n  @UseInterceptors(\n    new FormatPhysicalQuantitiesInterceptor(\"customMetadata\"),\n  )\n  @Patch(\":id\")\n  async update(\n    @Param(\"id\") id: string,\n    @Body() updateInstrumentDto: UpdateInstrumentDto,\n  ): Promise {\n    try {\n      const instrument = await this.instrumentsService.update(\n        { _id: id },\n        updateInstrumentDto,\n      );\n      return instrument;\n    } catch (e) {\n      throw new HttpException(\n        \"Instrument with the same unique name already exists\",\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.InstrumentDelete, Instrument),\n  )\n  @Delete(\":id\")\n  async remove(@Param(\"id\") id: string): Promise {\n    return this.instrumentsService.remove({ pid: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InstrumentsModule.html":{"url":"modules/InstrumentsModule.html","title":"module - InstrumentsModule","body":"\n                   \n\n\n\n\n    Modules\n    InstrumentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InstrumentsModule\n\n\n\ncluster_InstrumentsModule_providers\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\n\n\nInstrumentsModule\n\nInstrumentsModule\n\nInstrumentsModule -->\n\nCaslAbilityFactory->InstrumentsModule\n\n\n\n\n\nInstrumentsService\n\nInstrumentsService\n\nInstrumentsModule -->\n\nInstrumentsService->InstrumentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/instruments/instruments.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslAbilityFactory\n                        \n                        \n                            InstrumentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InstrumentsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { InstrumentsService } from \"./instruments.service\";\nimport { InstrumentsController } from \"./instruments.controller\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { Instrument, InstrumentSchema } from \"./schemas/instrument.schema\";\nimport { CaslAbilityFactory } from \"src/casl/casl-ability.factory\";\n\n@Module({\n  controllers: [InstrumentsController],\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Instrument.name,\n        useFactory: () => {\n          const schema = InstrumentSchema;\n\n          schema.pre(\"save\", function (next) {\n            // if _id is empty or different than pid,\n            // set _id to pid\n            if (!this._id) {\n              this._id = this.pid;\n            }\n            next();\n          });\n          return schema;\n        },\n      },\n    ]),\n  ],\n  providers: [InstrumentsService, CaslAbilityFactory],\n})\nexport class InstrumentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InstrumentsService.html":{"url":"injectables/InstrumentsService.html","title":"injectable - InstrumentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InstrumentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/instruments/instruments.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(instrumentModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/instruments/instruments.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        instrumentModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createInstrumentDto: CreateInstrumentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/instruments/instruments.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createInstrumentDto\n                                    \n                                                CreateInstrumentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter: IFilters)\n                \n            \n\n\n            \n                \n                    Defined in src/instruments/instruments.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                IFilters\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/instruments/instruments.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/instruments/instruments.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(filter: FilterQuery, updateInstrumentDto: UpdateInstrumentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/instruments/instruments.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateInstrumentDto\n                                    \n                                                UpdateInstrumentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { FilterQuery, Model } from \"mongoose\";\nimport { IFilters } from \"src/common/interfaces/common.interface\";\nimport { parseLimitFilters } from \"src/common/utils\";\nimport { CreateInstrumentDto } from \"./dto/create-instrument.dto\";\nimport { UpdateInstrumentDto } from \"./dto/update-instrument.dto\";\nimport { Instrument, InstrumentDocument } from \"./schemas/instrument.schema\";\n\n@Injectable()\nexport class InstrumentsService {\n  constructor(\n    @InjectModel(Instrument.name)\n    private instrumentModel: Model,\n  ) {}\n\n  async create(createInstrumentDto: CreateInstrumentDto): Promise {\n    const createdInstrument = new this.instrumentModel(createInstrumentDto);\n    return createdInstrument.save();\n  }\n\n  async findAll(filter: IFilters): Promise {\n    const whereFilter: FilterQuery = filter.where ?? {};\n    const fieldsProjection: FilterQuery =\n      filter.fields ?? {};\n    const { limit, skip, sort } = parseLimitFilters(filter.limits);\n\n    const instrumentPromise = this.instrumentModel\n      .find(whereFilter, fieldsProjection)\n      .limit(limit)\n      .skip(skip)\n      .sort(sort);\n\n    const instruments = await instrumentPromise.exec();\n\n    return instruments;\n  }\n\n  async findOne(\n    filter: FilterQuery,\n  ): Promise {\n    const whereFilter: FilterQuery = filter.where ?? {};\n    const fieldsProjection: FilterQuery =\n      filter.fields ?? {};\n\n    return this.instrumentModel.findOne(whereFilter, fieldsProjection).exec();\n  }\n\n  async update(\n    filter: FilterQuery,\n    updateInstrumentDto: UpdateInstrumentDto,\n  ): Promise {\n    return this.instrumentModel\n      .findOneAndUpdate(filter, updateInstrumentDto, { new: true })\n      .exec();\n  }\n\n  async remove(filter: FilterQuery): Promise {\n    return this.instrumentModel.findOneAndRemove(filter).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JWTUser.html":{"url":"interfaces/JWTUser.html","title":"interface - JWTUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JWTUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/jwt-user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            authStrategy\n                                        \n                                \n                                \n                                        \n                                            currentGroups\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authStrategy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authStrategy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentGroups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentGroups:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JWTUser {\n  _id: string;\n  username: string;\n  email: string;\n  currentGroups: string[];\n  authStrategy?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                creationTime\n                            \n                            \n                                    \n                                    \n                                datasetList\n                            \n                            \n                                    \n                                    \n                                emailJobInitiator\n                            \n                            \n                                    \n                                    \n                                executionTime\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                jobParams\n                            \n                            \n                                    \n                                    \n                                jobResultObject\n                            \n                            \n                                    \n                                    \n                                jobStatusMessage\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Globally unique identifier of a job.', readOnly: true})@Prop({type: String, default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        creationTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Time when job is created. Format according to chapter 5.6 internet date/time format in RFC 3339. This is handled automatically by mongoose with timestamps flag.'})@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        datasetList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of objects with keys: pid, files. The value for the pid key defines the dataset ID, the value for the files key is an array of file names. This array is either an empty array, implying that all files within the dataset are selected or an explicit list of dataset-relative file paths, which should be selected.'})@Prop({type: undefined, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        emailJobInitiator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The email of the person initiating the job request.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        executionTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Time when job should be executed. If not specified then the Job will be executed asap. Format according to chapter 5.6 internet date/time format in RFC 3339.'})@Prop({type: Date, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Object of key-value pairs defining job input parameters, e.g. 'destinationPath' for retrieve jobs or 'tapeCopies' for archive jobs.'})@Prop({type: Object, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobResultObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Detailed return value after job is finished.'})@Prop({type: Object, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobStatusMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Defines current status of job lifecycle.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Type of job, e.g. archive, retrieve etc'})@Prop({type: String, required: true, enum: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Document } from \"mongoose\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { JobType } from \"../job-type.enum\";\n\nexport type JobDocument = Job & Document;\n\n@Schema({\n  collection: \"Job\",\n  timestamps: { createdAt: \"creationTime\", updatedAt: false },\n  toJSON: {\n    getters: true,\n  },\n})\nexport class Job {\n  @ApiProperty({\n    type: String,\n    description: \"Globally unique identifier of a job.\",\n    readOnly: true,\n  })\n  @Prop({ type: String, default: () => uuidv4() })\n  _id: string;\n\n  id?: string;\n\n  @ApiProperty({\n    description: \"The email of the person initiating the job request.\",\n  })\n  @Prop({ type: String, required: true })\n  emailJobInitiator: string;\n\n  @ApiProperty({ description: \"Type of job, e.g. archive, retrieve etc\" })\n  @Prop({\n    type: String,\n    required: true,\n    enum: [JobType.Archive, JobType.Retrieve, JobType.Public],\n    default: JobType.Retrieve,\n  })\n  type: string;\n\n  @ApiProperty({\n    description:\n      \"Time when job is created. Format according to chapter 5.6 internet date/time format in RFC 3339. This is handled automatically by mongoose with timestamps flag.\",\n  })\n  @Prop({ type: Date })\n  creationTime: Date;\n\n  @ApiProperty({\n    description:\n      \"Time when job should be executed. If not specified then the Job will be executed asap. Format according to chapter 5.6 internet date/time format in RFC 3339.\",\n  })\n  @Prop({ type: Date, required: false })\n  executionTime: Date;\n\n  @ApiProperty({\n    description:\n      \"Object of key-value pairs defining job input parameters, e.g. 'destinationPath' for retrieve jobs or 'tapeCopies' for archive jobs.\",\n  })\n  @Prop({ type: Object, required: false })\n  jobParams: Record;\n\n  @ApiProperty({ description: \"Defines current status of job lifecycle.\" })\n  @Prop({ type: String, required: false })\n  jobStatusMessage: string;\n\n  @ApiProperty({\n    description:\n      \"Array of objects with keys: pid, files. The value for the pid key defines the dataset ID, the value for the files key is an array of file names. This array is either an empty array, implying that all files within the dataset are selected or an explicit list of dataset-relative file paths, which should be selected.\",\n  })\n  @Prop({ type: [Object], required: false })\n  datasetList: Record[];\n\n  @ApiProperty({ description: \"Detailed return value after job is finished.\" })\n  @Prop({ type: Object, required: false })\n  jobResultObject: Record;\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job);\n\nJobSchema.index({ \"$**\": \"text\" });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkDatasetsExistence\n                            \n                            \n                                    Async\n                                checkDatasetsState\n                            \n                            \n                                    Async\n                                checkFilesExistence\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                fullfacet\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                fullquery\n                            \n                            \n                                publishJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                validateJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkDatasetsExistence\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDatasetsExistence(ids: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:57\n                \n            \n\n\n            \n                \n                    Check that all dataset exists\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkDatasetsState\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDatasetsState(type: string, ids: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:98\n                \n            \n\n\n            \n                \n                    Check that datasets is in state which the job can be performed\nFor retrieve jobs all datasets must be in state retrievable\nFor archive jobs all datasets must be in state archivable\n     * For copy jobs no need to check only need to filter out datasets that have already been copied when submitting to job queue\nownerGroup is tested implicitly via Ownable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkFilesExistence\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkFilesExistence(crateJobDto: CreateJobDto)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    crateJobDto\n                                    \n                                                CreateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(request: Request, createJobDto: CreateJobDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AllowAny()@Post()@ApiResponse({status: undefined, type: Job, description: 'Created job'})\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:272\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createJobDto\n                                    \n                                                CreateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get()@ApiQuery({name: 'filter', description: 'Database filters to apply when retrieve all jobs', required: false})\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:298\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:335\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        fullfacet\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullfacet(filters: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get('/fullfacet')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:322\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        fullquery\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullquery(filters: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get('/fullquery')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:309\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publishJob\n                        \n                    \n                \n            \n            \n                \npublishJob()\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:361\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateJobDto: UpdateJobDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:342\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateJobDto\n                                    \n                                                UpdateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateJob\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateJob(createJobDto: CreateJobDto, request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:257\n                \n            \n\n\n            \n                \n                    Validate if the job is performable\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createJobDto\n                                    \n                                                CreateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n  HttpStatus,\n  HttpException,\n  Req,\n} from \"@nestjs/common\";\nimport { Request } from \"express\";\nimport { FilterQuery } from \"mongoose\";\nimport { JobsService } from \"./jobs.service\";\nimport { CreateJobDto } from \"./dto/create-job.dto\";\nimport { UpdateJobDto } from \"./dto/update-job.dto\";\nimport { PoliciesGuard } from \"src/casl/guards/policies.guard\";\nimport { CheckPolicies } from \"src/casl/decorators/check-policies.decorator\";\nimport { AppAbility } from \"src/casl/casl-ability.factory\";\nimport { Action } from \"src/casl/action.enum\";\nimport { Job, JobDocument } from \"./schemas/job.schema\";\nimport { ApiBearerAuth, ApiQuery, ApiResponse, ApiTags } from \"@nestjs/swagger\";\nimport { IFacets, IFilters } from \"src/common/interfaces/common.interface\";\nimport { DatasetsService } from \"src/datasets/datasets.service\";\nimport { JobType, DatasetState } from \"./job-type.enum\";\nimport configuration from \"src/config/configuration\";\nimport { EventEmitter2 } from \"@nestjs/event-emitter\";\nimport { OrigDatablocksService } from \"src/origdatablocks/origdatablocks.service\";\nimport { AllowAny } from \"src/auth/decorators/allow-any.decorator\";\n\n@ApiBearerAuth()\n@ApiTags(\"jobs\")\n@Controller(\"jobs\")\nexport class JobsController {\n  constructor(\n    private readonly jobsService: JobsService,\n    private readonly datasetsService: DatasetsService,\n    private readonly origDatablocksService: OrigDatablocksService,\n    private eventEmitter: EventEmitter2,\n  ) {}\n\n  publishJob() {\n    if (configuration().rabbitMq.enabled) {\n      // TODO: This should publish the job to the message broker.\n      // job.publishJob(ctx.instance, \"jobqueue\");\n      console.log(\"Saved Job %s#%s and published to message broker\");\n    }\n  }\n\n  /**\n   * Check that all dataset exists\n   * @param {List of dataset id} ids\n   */\n  async checkDatasetsExistence(ids: string[]) {\n    if (ids.length === 0) {\n      throw new HttpException(\n        {\n          status: HttpStatus.BAD_REQUEST,\n          message: \"Empty list of datasets - no Job sent\",\n        },\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n    const filter = {\n      fields: {\n        pid: true,\n      },\n      where: {\n        pid: {\n          $in: ids,\n        },\n      },\n    };\n\n    const datasets = await this.datasetsService.findAll(filter);\n    if (datasets.length != ids.length) {\n      throw new HttpException(\n        {\n          status: HttpStatus.BAD_REQUEST,\n          message:\n            \"At least one of the datasets could not be found - no Job sent\",\n        },\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n  }\n\n  /**\n   * Check that datasets is in state which the job can be performed\n   * For retrieve jobs all datasets must be in state retrievable\n   * For archive jobs all datasets must be in state archivable\n   *      * For copy jobs no need to check only need to filter out datasets that have already been copied when submitting to job queue\n   * ownerGroup is tested implicitly via Ownable\n   */\n  async checkDatasetsState(type: string, ids: string[]) {\n    switch (type) {\n      case JobType.Retrieve: //Intentional fall through\n      case JobType.Archive:\n        {\n          const filter = {\n            fields: {\n              pid: true,\n            },\n            where: {\n              [`datasetlifecycle.${DatasetState[type]}`]: false,\n              pid: {\n                $in: ids,\n              },\n            },\n          };\n          const result = await this.datasetsService.findAll(filter);\n          if (result.length > 0) {\n            throw new HttpException(\n              {\n                status: HttpStatus.CONFLICT,\n                message: `The following datasets are not in ${DatasetState[type]} state - no ${type} job sent:\\n`,\n                error: JSON.stringify(result),\n              },\n              HttpStatus.CONFLICT,\n            );\n          }\n        }\n        break;\n      case JobType.Public:\n        {\n          const filter = {\n            fields: {\n              pid: true,\n            },\n            where: {\n              [DatasetState.public]: true,\n              pid: {\n                $in: ids,\n              },\n            },\n          };\n          const result = await this.datasetsService.findAll(filter);\n          if (result.length !== ids.length) {\n            throw new HttpException(\n              {\n                status: HttpStatus.CONFLICT,\n                message: \"The following datasets are not public - no job sent\",\n                error: JSON.stringify(result),\n              },\n              HttpStatus.CONFLICT,\n            );\n          }\n        }\n        break;\n      default:\n        //Not check other job types\n        break;\n    }\n  }\n\n  async checkFilesExistence(crateJobDto: CreateJobDto) {\n    const datasetsToCheck = crateJobDto.datasetList.filter(\n      (x) => x.files.length > 0,\n    );\n    const ids = datasetsToCheck.map((x) => x.pid);\n    switch (crateJobDto.type) {\n      case JobType.Public:\n        if (ids.length > 0) {\n          const filter = {\n            fields: {\n              pid: true,\n              datasetId: true,\n              dataFileList: true,\n            },\n            where: {\n              pid: {\n                $in: ids,\n              },\n            },\n          };\n          // Indexing originDataBlock with pid and create set of files for each dataset\n          const datasets = await this.datasetsService.findAll(filter);\n          // Include origdatablocks\n          await Promise.all(\n            datasets.map(async (dataset) => {\n              dataset.origdatablocks = await this.origDatablocksService.findAll(\n                {\n                  datasetId: dataset.pid,\n                },\n              );\n            }),\n          );\n          const result: Record> = datasets.reduce(\n            (acc: Record>, dataset) => {\n              // Using Set make searching more efficient\n              const files = dataset.origdatablocks.reduce((acc, block) => {\n                block.dataFileList.forEach((file) => {\n                  acc.add(file.path);\n                });\n                return acc;\n              }, new Set());\n              acc[dataset.pid] = files;\n              return acc;\n            },\n            {},\n          );\n          // Get a list of requested files that is not in originDataBlocks\n          const checkResults = datasetsToCheck.reduce(\n            (acc: { pid: string; nonExistFiles: string[] }[], x) => {\n              const pid = x.pid;\n              const referenceFiles = result[pid];\n              const nonExistFiles = x.files.filter(\n                (f) => !referenceFiles.has(f),\n              );\n              if (nonExistFiles.length > 0) {\n                acc.push({ pid, nonExistFiles });\n              }\n              return acc;\n            },\n            [],\n          );\n\n          if (checkResults.length > 0) {\n            throw new HttpException(\n              {\n                status: HttpStatus.BAD_REQUEST,\n                message:\n                  \"At least one requested file could not be found - no job created\",\n              },\n              HttpStatus.BAD_REQUEST,\n            );\n          }\n        }\n        break;\n      default:\n        // Not check for other job\n        break;\n    }\n  }\n\n  /**\n   * Check the the user is authenticated when requesting other job types than public job\n   */\n  checkPermission = (request: Request, type: string) => {\n    const unauthenticated = request.user === null;\n    if (unauthenticated && type !== JobType.Public) {\n      throw new HttpException(\n        {\n          status: HttpStatus.UNAUTHORIZED,\n        },\n        HttpStatus.UNAUTHORIZED,\n      );\n    }\n  };\n\n  /**\n   * Validate if the job is performable\n   */\n  async validateJob(createJobDto: CreateJobDto, request: Request) {\n    const ids = createJobDto.datasetList.map((x) => x.pid);\n    this.checkPermission(request, createJobDto.type);\n    await this.checkDatasetsExistence(ids);\n    await this.checkDatasetsState(createJobDto.type, ids);\n    await this.checkFilesExistence(createJobDto);\n  }\n\n  @AllowAny()\n  @Post()\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    type: Job,\n    description: \"Created job\",\n  })\n  async create(\n    @Req() request: Request,\n    @Body() createJobDto: CreateJobDto,\n  ): Promise {\n    const jobToCreate = { ...createJobDto, jobStatusMessage: \"jobSubmitted\" };\n    await this.validateJob(jobToCreate, request);\n\n    const createdJob = await this.jobsService.create(jobToCreate);\n\n    if (createdJob) {\n      // Emit event so facilities can trigger custom code\n      this.publishJob();\n      this.eventEmitter.emit(\"jobCreated\", { instance: createdJob });\n    }\n\n    return createdJob;\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => ability.can(Action.Read, Job))\n  @Get()\n  @ApiQuery({\n    name: \"filter\",\n    description: \"Database filters to apply when retrieve all jobs\",\n    required: false,\n  })\n  async findAll(@Query(\"filter\") filter?: string): Promise {\n    const parsedFilter: IFilters\n    > = JSON.parse(filter ?? \"{}\");\n    return this.jobsService.findAll(parsedFilter);\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => ability.can(Action.Read, Job))\n  @Get(\"/fullquery\")\n  async fullquery(\n    @Query() filters: { fields?: string; limits?: string },\n  ): Promise {\n    const parsedFilters: IFilters> = {\n      fields: JSON.parse(filters.fields ?? \"{}\"),\n      limits: JSON.parse(filters.limits ?? \"{}\"),\n    };\n    return this.jobsService.fullquery(parsedFilters);\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => ability.can(Action.Read, Job))\n  @Get(\"/fullfacet\")\n  async fullfacet(\n    @Query() filters: { fields?: string; facets?: string },\n  ): Promise[]> {\n    const parsedFilters: IFacets> = {\n      fields: JSON.parse(filters.fields ?? \"{}\"),\n      facets: JSON.parse(filters.facets ?? \"[]\"),\n    };\n    return this.jobsService.fullfacet(parsedFilters);\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => ability.can(Action.Read, Job))\n  @Get(\":id\")\n  async findOne(@Param(\"id\") id: string): Promise {\n    return this.jobsService.findOne({ _id: id });\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => ability.can(Action.Update, Job))\n  @Patch(\":id\")\n  async update(\n    @Param(\"id\") id: string,\n    @Body() updateJobDto: UpdateJobDto,\n  ): Promise {\n    const updatedJob = await this.jobsService.update({ _id: id }, updateJobDto);\n\n    if (updatedJob) {\n      this.eventEmitter.emit(\"jobUpdated\", {\n        instance: updatedJob,\n        hookState: { oldData: [updatedJob] },\n      });\n    }\n\n    return updatedJob;\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => ability.can(Action.Delete, Job))\n  @Delete(\":id\")\n  async remove(@Param(\"id\") id: string): Promise {\n    return this.jobsService.remove({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_JobsModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nCommonModule->JobsModule\n\n\n\n\n\nDatasetsModule\n\nDatasetsModule\n\nJobsModule -->\n\nDatasetsModule->JobsModule\n\n\n\n\n\nOrigDatablocksModule\n\nOrigDatablocksModule\n\nJobsModule -->\n\nOrigDatablocksModule->JobsModule\n\n\n\n\n\nPoliciesModule\n\nPoliciesModule\n\nJobsModule -->\n\nPoliciesModule->JobsModule\n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nJobsModule -->\n\nCaslAbilityFactory->JobsModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslAbilityFactory\n                        \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            DatasetsModule\n                        \n                        \n                            OrigDatablocksModule\n                        \n                        \n                            PoliciesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { JobsService } from \"./jobs.service\";\nimport { JobsController } from \"./jobs.controller\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { Job, JobSchema } from \"./schemas/job.schema\";\nimport { CaslAbilityFactory } from \"src/casl/casl-ability.factory\";\nimport { DatasetsModule } from \"src/datasets/datasets.module\";\nimport { PoliciesModule } from \"src/policies/policies.module\";\nimport { CommonModule } from \"src/common/common.module\";\nimport { ConfigModule } from \"@nestjs/config\";\nimport { OrigDatablocksModule } from \"src/origdatablocks/origdatablocks.module\";\n\n@Module({\n  controllers: [JobsController],\n  imports: [\n    CommonModule,\n    ConfigModule,\n    DatasetsModule,\n    MongooseModule.forFeature([\n      {\n        name: Job.name,\n        schema: JobSchema,\n      },\n    ]),\n    PoliciesModule,\n    OrigDatablocksModule,\n  ],\n  providers: [JobsService, CaslAbilityFactory],\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                domainName\n                            \n                            \n                                    Private\n                                smtpMessageFrom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                applyPolicyAndSendEmail\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                fullfacet\n                            \n                            \n                                    Async\n                                fullquery\n                            \n                            \n                                    Async\n                                getPolicy\n                            \n                            \n                                    Async\n                                markDatasetsAsScheduled\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                sendEmail\n                            \n                            \n                                    \n                                    Async\n                                sendFinishJobEmail\n                            \n                            \n                                    \n                                    Async\n                                sendStartJobEmail\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, datasetsService: DatasetsService, jobModel: Model, mailService: MailService, policiesService: PoliciesService)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        datasetsService\n                                                  \n                                                        \n                                                                        DatasetsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        policiesService\n                                                  \n                                                        \n                                                                        PoliciesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        applyPolicyAndSendEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyPolicyAndSendEmail(jobType: string, policy: Partial, emailContext: Record, to: string, cc: string)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:321\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    jobType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    policy\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    emailContext\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    cc\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createJobDto: CreateJobDto)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createJobDto\n                                    \n                                                CreateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter: IFilters>)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                IFilters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullfacet\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullfacet(filters: IFacets>)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                IFacets>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullquery\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullquery(filter: IFilters>)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                IFilters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPolicy\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPolicy(datasetId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:282\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datasetId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        markDatasetsAsScheduled\n                        \n                    \n                \n            \n            \n                \n                    \n                    markDatasetsAsScheduled(ids: string[], jobType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:243\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jobType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmail(to: string, cc: string, emailContext: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:365\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cc\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    emailContext\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        sendFinishJobEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendFinishJobEmail(context: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('jobUpdated')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        sendStartJobEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendStartJobEmail(context: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('jobCreated')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(filter: FilterQuery, updateJobDto: UpdateJobDto)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateJobDto\n                                    \n                                                UpdateJobDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        domainName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.HOST\n                    \n                \n                    \n                        \n                                Defined in src/jobs/jobs.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        smtpMessageFrom\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/jobs/jobs.service.ts:28\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { OnEvent } from \"@nestjs/event-emitter\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { readFileSync } from \"fs\";\nimport { compile } from \"handlebars\";\nimport { FilterQuery, Model, PipelineStage, QueryOptions } from \"mongoose\";\nimport { IFacets, IFilters } from \"src/common/interfaces/common.interface\";\nimport { MailService } from \"src/common/mail.service\";\nimport {\n  createFullfacetPipeline,\n  createFullqueryFilter,\n  parseLimitFilters,\n} from \"src/common/utils\";\nimport { DatasetsService } from \"src/datasets/datasets.service\";\nimport { IDatasetFields } from \"src/datasets/interfaces/dataset-filters.interface\";\nimport { DatasetDocument } from \"src/datasets/schemas/dataset.schema\";\nimport { PoliciesService } from \"src/policies/policies.service\";\nimport { Policy } from \"src/policies/schemas/policy.schema\";\nimport { CreateJobDto } from \"./dto/create-job.dto\";\nimport { UpdateJobDto } from \"./dto/update-job.dto\";\nimport { JobType } from \"./job-type.enum\";\nimport { Job, JobDocument } from \"./schemas/job.schema\";\n\n@Injectable()\nexport class JobsService {\n  private domainName = process.env.HOST;\n  private smtpMessageFrom;\n\n  constructor(\n    private configService: ConfigService,\n    private datasetsService: DatasetsService,\n    @InjectModel(Job.name) private jobModel: Model,\n    private mailService: MailService,\n    private policiesService: PoliciesService,\n  ) {\n    this.smtpMessageFrom = this.configService.get(\"smtp.messageFrom\");\n  }\n\n  async create(createJobDto: CreateJobDto): Promise {\n    const createdJob = new this.jobModel(createJobDto);\n    return createdJob.save();\n  }\n\n  async findAll(\n    filter: IFilters>,\n  ): Promise {\n    const whereFilters: FilterQuery = filter.where ?? {};\n    const { limit, skip, sort } = parseLimitFilters(filter.limits);\n\n    return this.jobModel\n      .find(whereFilters)\n      .limit(limit)\n      .skip(skip)\n      .sort(sort)\n      .exec();\n  }\n\n  async fullquery(\n    filter: IFilters>,\n  ): Promise {\n    const filterQuery: FilterQuery =\n      createFullqueryFilter(this.jobModel, \"id\", filter.fields);\n    const modifiers: QueryOptions = parseLimitFilters(filter.limits);\n\n    return await this.jobModel.find(filterQuery, null, modifiers).exec();\n  }\n\n  async fullfacet(\n    filters: IFacets>,\n  ): Promise[]> {\n    const fields = filters.fields ?? {};\n    const facets = filters.facets ?? [];\n\n    const pipeline: PipelineStage[] = createFullfacetPipeline\n    >(this.jobModel, \"id\", fields, facets);\n\n    return await this.jobModel.aggregate(pipeline).exec();\n  }\n\n  async findOne(filter: FilterQuery): Promise {\n    return this.jobModel.findOne(filter).exec();\n  }\n\n  async update(\n    filter: FilterQuery,\n    updateJobDto: UpdateJobDto,\n  ): Promise {\n    return this.jobModel\n      .findOneAndUpdate(filter, updateJobDto, { new: true })\n      .exec();\n  }\n\n  async remove(filter: FilterQuery): Promise {\n    return this.jobModel.findOneAndRemove(filter).exec();\n  }\n\n  @OnEvent(\"jobCreated\")\n  async sendStartJobEmail(context: { instance: Job }) {\n    const ids: string[] = context.instance.datasetList.map(\n      (dataset) => dataset.pid as string,\n    );\n    const to: string = context.instance.emailJobInitiator;\n    const jobType: string = context.instance.type;\n    await this.markDatasetsAsScheduled(ids, jobType);\n\n    const filter: IFilters = {\n      where: {\n        pid: {\n          $in: ids,\n        },\n      },\n    };\n\n    const jobData = [\"archive\", \"retrieve\"].includes(jobType)\n      ? (await this.datasetsService.findAll(filter)).map((dataset) => ({\n          pid: dataset.pid,\n          ownerGroup: dataset.ownerGroup,\n          sourceFolder: dataset.sourceFolder,\n          size: dataset.size,\n          archivable: dataset.datasetlifecycle?.archivable,\n          retrievable: dataset.datasetlifecycle?.retrievable,\n        }))\n      : [];\n\n    const emailContext = {\n      domainName: this.domainName,\n      subject: `Your ${jobType} job submitted successfully`,\n      jobSubmissionNotification: {\n        jobId: context.instance.id,\n        jobType,\n        jobData,\n      },\n    };\n\n    const policy = await this.getPolicy(ids[0]);\n    await this.applyPolicyAndSendEmail(jobType, policy, emailContext, to);\n  }\n\n  // Populate email context for finished job notification\n  @OnEvent(\"jobUpdated\")\n  async sendFinishJobEmail(context: {\n    instance: Job;\n    hookState: { oldData: Job[] };\n  }) {\n    // Iterate through list of jobs that were updated\n    // Iterate in case of bulk update send out email to each job\n    context.hookState.oldData.forEach(async (oldData) => {\n      const currentData = await this.findOne({ id: oldData.id });\n      //Check that statusMessage has changed. Only run on finished job\n      if (\n        currentData &&\n        currentData.jobStatusMessage !== oldData.jobStatusMessage &&\n        currentData.jobStatusMessage.indexOf(\"finish\") !== -1\n      ) {\n        const ids = currentData.datasetList.map(\n          (dataset) => dataset.pid as string,\n        );\n        const to = currentData.emailJobInitiator;\n        const {\n          type: jobType,\n          id: jobId,\n          jobStatusMessage,\n          jobResultObject,\n        } = currentData;\n        const failure = jobStatusMessage.indexOf(\"finishedSuccessful\") === -1;\n        const filter = {\n          where: {\n            pid: {\n              $in: ids,\n            },\n          },\n        };\n\n        const datasets = (await this.datasetsService.findAll(filter)).map(\n          (dataset) => ({\n            pid: dataset.pid,\n            ownerGroup: dataset.ownerGroup,\n            sourceFolder: dataset.sourceFolder,\n            size: dataset.size,\n            archiveStatusMessage:\n              dataset.datasetlifecycle?.archiveStatusMessage,\n            retrieveStatusMessage:\n              dataset.datasetlifecycle?.retrieveStatusMessage,\n            archiveReturnMessage:\n              dataset.datasetlifecycle?.archiveReturnMessage,\n            retrieveReturnMessage:\n              dataset.datasetlifecycle?.retrieveReturnMessage,\n            retrievable: dataset.datasetlifecycle?.retrievable,\n          }),\n        );\n\n        // split result into good and bad\n        const good = datasets.filter((dataset) => dataset.retrievable);\n        const bad = datasets.filter((dataset) => !dataset.retrievable);\n\n        // add cc message in case of failure to scicat archivemanager\n        const cc =\n          bad.length > 0 && this.smtpMessageFrom ? this.smtpMessageFrom : \"\";\n        const creationTime = currentData.creationTime\n          .toISOString()\n          .replace(/T/, \" \")\n          .replace(/\\..+/, \"\");\n        const additionalMsg =\n          jobType === JobType.Retrieve && good.length > 0\n            ? \"You can now use the command 'datasetRetriever' to move the retrieved datasets to their final destination.\"\n            : \"\";\n\n        const emailContext = {\n          domainName: this.domainName,\n          subject: ` Your ${jobType} job from ${creationTime} is finished ${\n            failure ? \"with failure\" : \"successfully\"\n          }`,\n          jobFinishedNotification: {\n            jobId,\n            jobType,\n            failure,\n            creationTime,\n            jobStatusMessage,\n            jobResultObject: jobResultObject,\n            datasets: {\n              good,\n              bad,\n            },\n            additionalMsg,\n          },\n        };\n\n        const policy = await this.getPolicy(ids[0]);\n        await this.applyPolicyAndSendEmail(\n          jobType,\n          policy,\n          emailContext,\n          to,\n          cc,\n        );\n      }\n    });\n  }\n\n  async markDatasetsAsScheduled(ids: string[], jobType: string) {\n    const statusMessage = {\n      retrieve: \"scheduledForRetrieval\",\n      archive: \"scheduledForArchiving\",\n    };\n    const filter = {\n      pid: {\n        $in: ids,\n      },\n    };\n\n    switch (jobType) {\n      case JobType.Archive: {\n        const values = {\n          $set: {\n            \"datasetlifecycle.archivable\": false,\n            \"datasetlifecycle.retrievable\": false,\n            [`datasetlifecycle.${jobType}StatusMessage`]:\n              statusMessage[jobType],\n          },\n        };\n        await this.datasetsService.updateAll(filter, values);\n        break;\n      }\n      case JobType.Retrieve: {\n        const values = {\n          $set: {\n            [`datasetlifecycle.${jobType}StatusMessage`]:\n              statusMessage[jobType],\n          },\n        };\n        await this.datasetsService.updateAll(filter, values);\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  async getPolicy(datasetId: string): Promise> {\n    try {\n      const dataset = await this.datasetsService.findOne({\n        where: { pid: datasetId },\n      });\n      if (!dataset) {\n        throw new NotFoundException(\n          \"Could not dataset with pid \" + datasetId,\n          \"JobsService\",\n        );\n      }\n      const policy = await this.policiesService.findOne({\n        ownerGroup: dataset.ownerGroup,\n      });\n\n      if (policy) {\n        return policy;\n      }\n    } catch (error) {\n      const message = \"Error when looking for Policy of pgroup \" + error;\n      Logger.error(\"Dataset ID: \" + datasetId, \"JobsService\");\n      Logger.error(message);\n    }\n\n    Logger.log(\n      \"No policy found for dataset with id: \" + datasetId,\n      \"JobsService\",\n    );\n    Logger.log(\"Returning default policy instead\", \"JobsService\");\n    // this should not happen anymore, but kept as additional safety belt\n    const defaultPolicy: Partial = {\n      archiveEmailNotification: true,\n      retrieveEmailNotification: true,\n      archiveEmailsToBeNotified: [],\n      retrieveEmailsToBeNotified: [],\n    };\n    return defaultPolicy;\n  }\n\n  async applyPolicyAndSendEmail(\n    jobType: string,\n    policy: Partial,\n    emailContext: Record,\n    to: string,\n    cc = \"\",\n  ) {\n    const { failure } = emailContext;\n\n    switch (jobType) {\n      case JobType.Archive: {\n        const { archiveEmailNotification, archiveEmailsToBeNotified } = policy;\n        if (archiveEmailsToBeNotified) {\n          to += \",\" + archiveEmailsToBeNotified.join();\n        }\n\n        // Always notify on failure\n        if (archiveEmailNotification || failure) {\n          await this.sendEmail(to, cc, emailContext);\n        }\n        break;\n      }\n      case JobType.Retrieve: {\n        const { retrieveEmailNotification, retrieveEmailsToBeNotified } =\n          policy;\n\n        if (retrieveEmailsToBeNotified) {\n          to += \",\" + retrieveEmailsToBeNotified.join();\n        }\n\n        // Always notify on failure\n        if (retrieveEmailNotification || failure) {\n          await this.sendEmail(to, cc, emailContext);\n        }\n        break;\n      }\n      default: {\n        // For other jobs like reset job\n        await this.sendEmail(to, cc, emailContext);\n        break;\n      }\n    }\n  }\n\n  async sendEmail(\n    to: string,\n    cc: string,\n    emailContext: Record,\n  ) {\n    const htmlTemplate = readFileSync(\n      \"src/common/email-templates/job-template.html\",\n      \"utf-8\",\n    );\n    const emailTemplate = compile(htmlTemplate);\n    const email = emailTemplate(emailContext);\n    const subject = emailContext.subject as string;\n    await this.mailService.sendMail(to, cc, subject, null, email);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt-auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRequest\n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user: any, info, context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard(\"jwt\") {\n  constructor(private readonly reflector: Reflector) {\n    super();\n  }\n\n  getRequest(context: ExecutionContext) {\n    const request = context.switchToHttp().getRequest();\n    const token = request.query.access_token;\n    if (!request.headers.authorization && token) {\n      request.headers.authorization = token;\n    }\n\n    return request;\n  }\n\n  handleRequest(\n    err: unknown,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    user: any,\n    info: unknown,\n    context: ExecutionContext,\n  ) {\n    const allowAny = this.reflector.get(\n      \"allow-any\",\n      context.getHandler(),\n    );\n\n    if (user) {\n      return user;\n    }\n    if (allowAny) {\n      return null;\n    }\n    throw new UnauthorizedException();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, rolesService: RolesService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: Omit)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Omit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Injectable } from \"@nestjs/common\";\nimport { RolesService } from \"src/users/roles.service\";\nimport { UsersService } from \"src/users/users.service\";\nimport { JWTUser } from \"../interfaces/jwt-user.interface\";\nimport { User } from \"src/users/schemas/user.schema\";\nimport { ConfigService } from \"@nestjs/config\";\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    private rolesService: RolesService,\n    private usersService: UsersService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get(\"jwt.secret\"),\n    });\n  }\n\n  async validate(payload: Omit) {\n    const roles = await this.rolesService.find({ userId: payload._id });\n\n    const userIdentity = await this.usersService.findByIdUserIdentity(\n      payload._id,\n    );\n\n    let currentGroups: string[] = [];\n\n    if (roles) {\n      const roleNames = roles\n        .map((role) => (role ? role.name : \"\"))\n        .filter((name) => name.length > 0);\n      currentGroups = currentGroups.concat(roleNames);\n    }\n\n    if (userIdentity) {\n      currentGroups = currentGroups.concat(userIdentity.profile.accessGroups);\n    }\n\n    currentGroups = [...new Set([...currentGroups])];\n\n    return {\n      _id: payload._id,\n      username: payload.username,\n      email: payload.email,\n      currentGroups: currentGroups,\n      authStrategy: payload.authStrategy,\n    } as JWTUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LdapAuthGuard.html":{"url":"injectables/LdapAuthGuard.html","title":"injectable - LdapAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LdapAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/ldap.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class LdapAuthGuard extends AuthGuard(\"ldap\") {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LdapStrategy.html":{"url":"injectables/LdapStrategy.html","title":"injectable - LdapStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LdapStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/ldap.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, usersService: UsersService, accessGroupService: AccessGroupService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/ldap.strategy.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessGroupService\n                                                  \n                                                        \n                                                                        AccessGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile(payload: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/ldap.strategy.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/ldap.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import Strategy from \"passport-ldapauth\";\nimport { Injectable, InternalServerErrorException } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { UsersService } from \"src/users/users.service\";\nimport { CreateUserDto } from \"src/users/dto/create-user.dto\";\nimport { CreateUserIdentityDto } from \"src/users/dto/create-user-identity.dto\";\nimport { FilterQuery } from \"mongoose\";\nimport { User, UserDocument } from \"src/users/schemas/user.schema\";\nimport { AccessGroupService } from \"../access-group-provider/access-group.service\";\nimport { UserPayload } from \"../interfaces/userPayload.interface\";\nimport { Profile } from \"passport\";\nimport { UserProfile } from \"src/users/schemas/user-profile.schema\";\n\n@Injectable()\nexport class LdapStrategy extends PassportStrategy(Strategy, \"ldap\") {\n  constructor(\n    private configService: ConfigService,\n    private usersService: UsersService,\n    private accessGroupService: AccessGroupService,\n  ) {\n    super(configService.get>(\"ldap\"));\n  }\n\n  async validate(\n    payload: Record,\n  ): Promise> {\n    // add exception if displayName is empty\n\n    const userFilter: FilterQuery = {\n      $or: [\n        { username: `ldap.${payload.displayName}` },\n        { username: payload.displayName },\n        { email: payload.mail as string },\n      ],\n    };\n    const userExists = await this.usersService.userExists(userFilter);\n\n    if (!userExists) {\n      const createUser: CreateUserDto = {\n        username: payload.displayName as string, //`ldap.${payload.displayName}`,\n        email: payload.mail as string,\n        authStrategy: \"ldap\",\n      };\n      const user = await this.usersService.create(createUser);\n      console.log(\"Created ldap user \", user?.username);\n\n      if (!user) {\n        throw new InternalServerErrorException(\n          \"Could not create User from LDAP response.\",\n        );\n      }\n\n      const userPayload: UserPayload = {\n        userId: user.id as string,\n        username: user.username,\n        email: user.email,\n      };\n      const accessGroups = await this.accessGroupService.getAccessGroups(\n        userPayload,\n      );\n\n      const createUserIdentity: CreateUserIdentityDto = {\n        authStrategy: \"ldap\",\n        credentials: {},\n        externalId: payload.sAMAccountName as string,\n        profile: {\n          displayName: payload.displayName as string,\n          email: payload.mail as string,\n          username: payload.displayName as string,\n          thumbnailPhoto: payload.thumbnailPhoto\n            ? \"data:image/jpeg;base64,\" +\n              Buffer.from(payload.thumbnailPhoto as string, \"binary\").toString(\n                \"base64\",\n              )\n            : \"error: no photo found\",\n          emails: [{ value: payload.mail as string }],\n          accessGroups: accessGroups,\n          id: payload.sAMAccountName as string,\n        },\n        provider: \"ldap\",\n        userId: user._id,\n      };\n\n      await this.usersService.createUserIdentity(createUserIdentity);\n      console.log(\"Created user identity for ldap user with id \", user._id);\n    }\n\n    const foundUser = await this.usersService.findOne(userFilter);\n    const jsonUser = JSON.parse(JSON.stringify(foundUser));\n    const { password, ...user } = jsonUser;\n    user.userId = user._id;\n\n    // update user identity if needed\n    if (userExists) {\n      const userPayload: UserPayload = {\n        userId: user.id as string,\n        username: user.username,\n        email: user.email,\n      };\n      const userIdentity = await this.usersService.findByIdUserIdentity(\n        user._id,\n      );\n      if (userIdentity === null) {\n        throw new Error(\"User identity does not exists!!!\");\n      }\n      const userProfile = userIdentity.profile;\n      userProfile.accessGroups = await this.accessGroupService.getAccessGroups(\n        userPayload,\n      );\n      await this.usersService.updateUserIdentity(\n        {\n          profile: userProfile,\n        },\n        user._id,\n      );\n      console.log(\"Updated user identity for ldap user with id \", user._id);\n    }\n\n    return user;\n  }\n\n  getProfile(payload: Record) {\n    type ldapProfile = Profile & UserProfile;\n    const profile = {} as ldapProfile;\n\n    profile.displayName = payload.displayName as string;\n    profile.email = payload.mail as string;\n    profile.username = payload.displayName as string;\n    profile.thumbnailPhoto = payload.thumbnailPhoto\n      ? \"data:image/jpeg;base64,\" +\n        Buffer.from(payload.thumbnailPhoto as string, \"binary\").toString(\n          \"base64\",\n        )\n      : \"error: no photo found\";\n    profile.emails = [{ value: payload.mail as string }];\n    profile.id = payload.sAMAccountName as string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LifecycleClass.html":{"url":"classes/LifecycleClass.html","title":"class - LifecycleClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LifecycleClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/schemas/lifecycle.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                archivable\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                archiveRetentionTime\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                archiveReturnMessage\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                archiveStatusMessage\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dateOfDiskPurging\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                dateOfPublishing\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                exportedTo\n                            \n                            \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isOnCentralDisk\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                publishable\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                publishedOn\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                retrievable\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                retrieveIntegrityCheck\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                retrieveReturnMessage\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                retrieveStatusMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        archivable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false, description: 'Flag indicating if dataset is available to be archived and no archive job for this dataset exists yet.'})@Prop({default: true, required: false, index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/lifecycle.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        archiveRetentionTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, required: false, description: 'Day when the dataset's future fate will be evaluated again, e.g. to decide if the dataset can be deleted from archive.'})@Prop({type: Date, default: undefined, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/lifecycle.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        archiveReturnMessage\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, required: false, default: undefined, description: 'Detailed status or error message returned by the archive system when archiving this dataset.'})@Prop({type: Object, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/lifecycle.schema.ts:133\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        archiveStatusMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, default: '', description: 'Short string defining the current status of the dataset with respect to storage on disk/tape.'})@Prop({default: 'datasetCreated', required: false, index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/lifecycle.schema.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dateOfDiskPurging\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, required: false, description: 'Day when dataset will be removed from disk, assuming that is already stored on tape.'})@Prop({type: Date, default: undefined, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/lifecycle.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        dateOfPublishing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, required: false, description: 'Day when dataset is supposed to become public according to data policy.'})@Prop({type: Date, default: undefined, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/lifecycle.schema.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        exportedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Location of the last export destination.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/lifecycle.schema.ts:151\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/lifecycle.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isOnCentralDisk\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false, description: 'Flag indicating if full dataset is available on central fileserver. If false, data needs to be copied from decentral storage places to a cache server before the ingest. This information needs to be transferred to the archive system at archive time.'})@Prop({default: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/lifecycle.schema.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        publishable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false, description: 'Flag indicating if dataset can be published. Usually requires a longterm storage option on tape or similar.'})@Prop({default: false, required: false, index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/lifecycle.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        publishedOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, required: false, description: 'Day when dataset was published.'})@Prop({type: Date, default: undefined, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/lifecycle.schema.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        retrievable\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false, description: 'Flag indicating if dataset is stored on archive system and is ready to be retrieved.'})@Prop({default: false, required: false, index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/lifecycle.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        retrieveIntegrityCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false, default: false, description: 'Set to true when checksum tests after retrieve of datasets were successful.'})@Prop({type: Boolean, default: false, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/lifecycle.schema.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        retrieveReturnMessage\n                        \n                    \n                \n            \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, required: false, default: undefined, description: 'Detailed status or error message returned by the archive system when retrieving this dataset.'})@Prop({type: Object, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/lifecycle.schema.ts:143\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        retrieveStatusMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, default: '', description: 'Latest message for this dataset concerning retrieval from archive system.'})@Prop({required: false, index: true, default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/lifecycle.schema.ts:123\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Document } from \"mongoose\";\n\nexport type LifecycleDocument = LifecycleClass & Document;\n\n@Schema()\nexport class LifecycleClass {\n  @Prop({ required: false })\n  id?: string;\n\n  @ApiProperty({\n    type: Boolean,\n    required: false,\n    description:\n      \"Flag indicating if dataset is available to be archived and no archive job for this dataset exists yet.\",\n  })\n  @Prop({ default: true, required: false, index: true })\n  archivable?: boolean;\n\n  @ApiProperty({\n    type: Boolean,\n    required: false,\n    description:\n      \"Flag indicating if dataset is stored on archive system and is ready to be retrieved.\",\n  })\n  @Prop({ default: false, required: false, index: true })\n  retrievable?: boolean;\n\n  @ApiProperty({\n    type: Boolean,\n    required: false,\n    description:\n      \"Flag indicating if dataset can be published. Usually requires a longterm storage option on tape or similar.\",\n  })\n  @Prop({ default: false, required: false, index: true })\n  publishable?: boolean;\n\n  @ApiProperty({\n    type: Date,\n    required: false,\n    description:\n      \"Day when dataset will be removed from disk, assuming that is already stored on tape.\",\n  })\n  @Prop({ type: Date, default: Date.now(), required: false })\n  dateOfDiskPurging?: Date;\n\n  @ApiProperty({\n    type: Date,\n    required: false,\n    description:\n      \"Day when the dataset's future fate will be evaluated again, e.g. to decide if the dataset can be deleted from archive.\",\n  })\n  @Prop({\n    type: Date,\n    default: function retentionTime() {\n      const now = new Date();\n      return new Date(\n        now.getFullYear() + Number(process.env.POLICY_RETENTION_SHIFT || 0),\n        now.getMonth(),\n        now.getDay(),\n      );\n    },\n    required: false,\n  })\n  archiveRetentionTime?: Date;\n\n  @ApiProperty({\n    type: Date,\n    required: false,\n    description:\n      \"Day when dataset is supposed to become public according to data policy.\",\n  })\n  @Prop({\n    type: Date,\n    default: function publishingDate() {\n      const now = new Date();\n      return new Date(\n        now.getFullYear() + Number(process.env.POLICY_PUBLICATION_SHIFT || 0),\n        now.getMonth(),\n        now.getDay(),\n      );\n    },\n    required: false,\n  })\n  dateOfPublishing?: Date;\n\n  @ApiProperty({\n    type: Date,\n    required: false,\n    description: \"Day when dataset was published.\",\n  })\n  @Prop({ type: Date, default: Date.now(), required: false })\n  publishedOn?: Date;\n\n  @ApiProperty({\n    type: Boolean,\n    required: false,\n    description:\n      \"Flag indicating if full dataset is available on central fileserver. If false, data needs to be copied from decentral storage places to a cache server before the ingest. This information needs to be transferred to the archive system at archive time.\",\n  })\n  @Prop({ default: true, required: false })\n  isOnCentralDisk?: boolean;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    default: \"\",\n    description:\n      \"Short string defining the current status of the dataset with respect to storage on disk/tape.\",\n  })\n  @Prop({ default: \"datasetCreated\", required: false, index: true })\n  archiveStatusMessage?: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    default: \"\",\n    description:\n      \"Latest message for this dataset concerning retrieval from archive system.\",\n  })\n  @Prop({ required: false, index: true, default: \"\" })\n  retrieveStatusMessage?: string;\n\n  @ApiProperty({\n    type: Object,\n    required: false,\n    default: {},\n    description:\n      \"Detailed status or error message returned by the archive system when archiving this dataset.\",\n  })\n  @Prop({ type: Object, required: false, default: {} })\n  archiveReturnMessage?: unknown;\n\n  @ApiProperty({\n    type: Object,\n    required: false,\n    default: {},\n    description:\n      \"Detailed status or error message returned by the archive system when retrieving this dataset.\",\n  })\n  @Prop({ type: Object, required: false, default: {} })\n  retrieveReturnMessage?: unknown;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"Location of the last export destination.\",\n  })\n  @Prop({ type: String, required: false })\n  exportedTo?: string;\n\n  @ApiProperty({\n    type: Boolean,\n    required: false,\n    default: false,\n    description:\n      \"Set to true when checksum tests after retrieve of datasets were successful.\",\n  })\n  @Prop({ type: Boolean, default: false, required: false })\n  retrieveIntegrityCheck?: boolean;\n}\n\nexport const LifecycleSchema = SchemaFactory.createForClass(LifecycleClass);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard(\"local\") {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, rolesService: RolesService, usersService: UsersService, accessGroupService: AccessGroupService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessGroupService\n                                                  \n                                                        \n                                                                        AccessGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from \"passport-local\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { AuthService } from \"../auth.service\";\nimport { User } from \"src/users/schemas/user.schema\";\nimport { UserPayload } from \"../interfaces/userPayload.interface\";\nimport { UsersService } from \"src/users/users.service\";\nimport { AccessGroupService } from \"../access-group-provider/access-group.service\";\nimport { RolesService } from \"src/users/roles.service\";\nimport { Role } from \"src/users/schemas/role.schema\";\nimport { UserRole } from \"src/users/schemas/user-role.schema\";\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private authService: AuthService,\n    private rolesService: RolesService,\n    //private configService: ConfigService,\n    private usersService: UsersService,\n    private accessGroupService: AccessGroupService,\n  ) {\n    super();\n  }\n\n  async validate(\n    username: string,\n    password: string,\n  ): Promise> {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    const userRoles = (await this.rolesService.findAllUserRoles({\n      userId: user._id,\n    })) as UserRole[];\n    const roles: Role[] = (await Promise.all(\n      userRoles.map((r) => {\n        return this.rolesService.findOne({ _id: r.roleId });\n      }),\n    )) as Role[];\n    const roleGroups: string[] = roles\n      .filter((r) => r)\n      .map((r) => {\n        return r.name as string;\n      });\n\n    // updates accessGroups\n    const userPayload: UserPayload = {\n      userId: user.id as string,\n      username: user.username,\n      email: user.email,\n    };\n    const accessGroups = await this.accessGroupService.getAccessGroups(\n      userPayload,\n    );\n\n    const userIdentity = await this.usersService.findByIdUserIdentity(user._id);\n    if (userIdentity === null) {\n      throw new Error(\"User identity does not exists!!!\");\n    }\n    const userProfile = userIdentity.profile;\n    userProfile.accessGroups = [...accessGroups, ...roleGroups];\n\n    await this.usersService.updateUserIdentity(\n      {\n        profile: userProfile,\n      },\n      user._id,\n    );\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logbook.html":{"url":"classes/Logbook.html","title":"class - Logbook","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logbook\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logbooks/schemas/logbook.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                messages\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                roomId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'array', items: undefined})@Prop(['MessageSchema'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/logbooks/schemas/logbook.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/logbooks/schemas/logbook.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roomId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/logbooks/schemas/logbook.schema.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty, getSchemaPath } from \"@nestjs/swagger\";\nimport { Document } from \"mongoose\";\nimport { Message, MessageSchema } from \"./message.schema\";\n\nexport type LogbookDocument = Logbook & Document;\n\n@Schema()\nexport class Logbook {\n  @ApiProperty()\n  @Prop()\n  name: string;\n\n  @ApiProperty()\n  @Prop()\n  roomId: string;\n\n  @ApiProperty({ type: \"array\", items: { $ref: getSchemaPath(Message) } })\n  @Prop([MessageSchema])\n  messages: Message[];\n}\n\nexport const LogbookSchema = SchemaFactory.createForClass(Logbook);\n\nLogbookSchema.index({ \"$**\": \"text\" });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LogbooksController.html":{"url":"controllers/LogbooksController.html","title":"controller - LogbooksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LogbooksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logbooks/logbooks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                logbooks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@UseInterceptors(UsersLogbooksInterceptor)@Get()\n                \n            \n\n            \n                \n                    Defined in src/logbooks/logbooks.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string, filters: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@UseInterceptors(UsersLogbooksInterceptor)@Get('/:name')\n                \n            \n\n            \n                \n                    Defined in src/logbooks/logbooks.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  UseGuards,\n  UseInterceptors,\n  Query,\n} from \"@nestjs/common\";\nimport { LogbooksService } from \"./logbooks.service\";\nimport { ApiBearerAuth, ApiTags } from \"@nestjs/swagger\";\nimport { PoliciesGuard } from \"src/casl/guards/policies.guard\";\nimport { CheckPolicies } from \"src/casl/decorators/check-policies.decorator\";\nimport { AppAbility } from \"src/casl/casl-ability.factory\";\nimport { Action } from \"src/casl/action.enum\";\nimport { Logbook } from \"./schemas/logbook.schema\";\nimport { UsersLogbooksInterceptor } from \"./interceptors/users-logbooks.interceptor\";\n\n@ApiBearerAuth()\n@ApiTags(\"logbooks\")\n@Controller(\"logbooks\")\nexport class LogbooksController {\n  constructor(private readonly logbooksService: LogbooksService) {}\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => ability.can(Action.Read, Logbook))\n  @UseInterceptors(UsersLogbooksInterceptor)\n  @Get()\n  findAll() {\n    return this.logbooksService.findAll();\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => ability.can(Action.Read, Logbook))\n  @UseInterceptors(UsersLogbooksInterceptor)\n  @Get(\"/:name\")\n  async findByName(\n    @Param(\"name\") name: string,\n    @Query(\"filters\") filters: string,\n  ): Promise {\n    return this.logbooksService.findByName(name, filters);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogbooksModule.html":{"url":"modules/LogbooksModule.html","title":"module - LogbooksModule","body":"\n                   \n\n\n\n\n    Modules\n    LogbooksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LogbooksModule\n\n\n\ncluster_LogbooksModule_imports\n\n\n\ncluster_LogbooksModule_exports\n\n\n\ncluster_LogbooksModule_providers\n\n\n\n\nProposalsModule\n\nProposalsModule\n\n\n\nLogbooksModule\n\nLogbooksModule\n\nLogbooksModule -->\n\nProposalsModule->LogbooksModule\n\n\n\n\n\nLogbooksService \n\nLogbooksService \n\nLogbooksService  -->\n\nLogbooksModule->LogbooksService \n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nLogbooksModule -->\n\nCaslAbilityFactory->LogbooksModule\n\n\n\n\n\nLogbooksService\n\nLogbooksService\n\nLogbooksModule -->\n\nLogbooksService->LogbooksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/logbooks/logbooks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslAbilityFactory\n                        \n                        \n                            LogbooksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LogbooksController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProposalsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LogbooksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { LogbooksService } from \"./logbooks.service\";\nimport { LogbooksController } from \"./logbooks.controller\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { CaslAbilityFactory } from \"src/casl/casl-ability.factory\";\nimport { ProposalsModule } from \"src/proposals/proposals.module\";\n\n@Module({\n  imports: [\n    ConfigModule,\n    HttpModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        timeout: configService.get(\"httpTimeOut\"),\n        maxRedirects: configService.get(\"httpMaxRedirects\"),\n      }),\n      inject: [ConfigService],\n    }),\n    ProposalsModule,\n  ],\n  exports: [LogbooksService],\n  controllers: [LogbooksController],\n  providers: [LogbooksService, CaslAbilityFactory],\n})\nexport class LogbooksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogbooksService.html":{"url":"injectables/LogbooksService.html","title":"injectable - LogbooksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogbooksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logbooks/logbooks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                logbookEnabled\n                            \n                            \n                                    Private\n                                password\n                            \n                            \n                                    Private\n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/logbooks/logbooks.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/logbooks/logbooks.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string, filters: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logbooks/logbooks.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logbooks/logbooks.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMessage(name: string, data: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/logbooks/logbooks.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/logbooks/logbooks.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logbookEnabled\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/logbooks/logbooks.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        password\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/logbooks/logbooks.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        username\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/logbooks/logbooks.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from \"@nestjs/axios\";\nimport {\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n} from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { firstValueFrom } from \"rxjs\";\nimport { handleAxiosRequestError } from \"src/common/utils\";\nimport { Logbook } from \"./schemas/logbook.schema\";\nimport { Message } from \"./schemas/message.schema\";\n\n@Injectable()\nexport class LogbooksService {\n  private logbookEnabled;\n  private baseUrl;\n  private username;\n  private password;\n\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly httpService: HttpService,\n  ) {\n    this.logbookEnabled = this.configService.get(\"logbook.enabled\");\n    this.baseUrl = this.configService.get(\"logbook.baseUrl\");\n    this.username = this.configService.get(\"logbook.username\");\n    this.password = this.configService.get(\"logbook.password\");\n  }\n\n  async login(username: string, password: string): Promise {\n    const credentials = { username, password };\n    try {\n      const res = await firstValueFrom(\n        this.httpService.post(this.baseUrl + \"/Users/login\", credentials),\n      );\n      return res.data;\n    } catch (error) {\n      handleAxiosRequestError(error, \"LogbooksService.login\");\n      throw new InternalServerErrorException(\"Logbook login failed\");\n    }\n  }\n\n  async findAll(): Promise {\n    if (this.logbookEnabled) {\n      if (this.username && this.password) {\n        try {\n          const accessToken = await this.login(this.username, this.password);\n          Logger.log(\"Fetching Logbooks\", \"LogbooksService.findAll\");\n          const res = await firstValueFrom(\n            this.httpService.get(this.baseUrl + \"/Logbooks\", {\n              headers: { Authorization: `Bearer ${accessToken.token}` },\n            }),\n          );\n          const nonEmptyLogbooks = res.data.filter(\n            (logbook) => logbook.messages.length !== 0,\n          );\n          const emptyLogbooks = res.data.filter(\n            (logbook) => logbook.messages.length === 0,\n          );\n          nonEmptyLogbooks\n            .sort(\n              (a, b) =>\n                a.messages[a.messages.length - 1].origin_server_ts -\n                b.messages[b.messages.length - 1].origin_server_ts,\n            )\n            .reverse();\n          const logbooks = nonEmptyLogbooks.concat(emptyLogbooks);\n          Logger.log(\"Found logbooks\", \"LogbooksService.findAll\");\n          return logbooks;\n        } catch (error) {\n          handleAxiosRequestError(error, \"LogbooksService.findAll\");\n          throw new InternalServerErrorException(\"Fetching Logbooks failed\");\n        }\n      } else {\n        throw new InternalServerErrorException(\n          \"Logbook username and/or password not configured\",\n        );\n      }\n    }\n    return [];\n  }\n\n  async findByName(name: string, filters: string): Promise {\n    if (this.logbookEnabled) {\n      if (this.username && this.password) {\n        try {\n          const accessToken = await this.login(this.username, this.password);\n          Logger.log(\"Fetching logbook \" + name, \"LogbooksService.findByName\");\n          Logger.log(filters, \"LogbooksService.findByName\");\n          const res = await firstValueFrom(\n            this.httpService.get(\n              this.baseUrl + `/Logbooks/${name}?filter=${filters}`,\n              { headers: { Authorization: `Bearer ${accessToken.token}` } },\n            ),\n          );\n          Logger.log(\"Found logbook \" + name, \"LogbooksService.findByName\");\n          const { skip, limit, sortField } = JSON.parse(filters);\n          Logger.log(\n            \"Applying filters skip: \" +\n              skip +\n              \", limit: \" +\n              limit +\n              \", sortField: \" +\n              sortField,\n            \"LogbooksService.findByName\",\n          );\n          if (!!sortField && sortField.indexOf(\":\") > 0) {\n            res.data.messages = sortMessages(res.data.messages, sortField);\n          }\n          if (skip >= 0 && limit >= 0) {\n            const end = skip + limit;\n            const messages = res.data.messages.slice(skip, end);\n            return { ...res.data, messages };\n          }\n          return res.data;\n        } catch (error) {\n          handleAxiosRequestError(error, \"LogbooksService.findByName\");\n        }\n      } else {\n        throw new InternalServerErrorException(\n          \"Logbook username and/or password not configured\",\n        );\n      }\n    }\n    return null;\n  }\n\n  async sendMessage(\n    name: string,\n    data: { message: string },\n  ): Promise {\n    if (this.logbookEnabled) {\n      if (this.username && this.password) {\n        try {\n          const accessToken = await this.login(this.username, this.password);\n          Logger.log(\n            \"Sending message to room \" + name,\n            \"LogbooksService.sendMessage\",\n          );\n          const res = await firstValueFrom(\n            this.httpService.post(\n              this.baseUrl + `/Logbooks/${name}/message`,\n              data,\n              { headers: { Authorization: `Bearer ${accessToken.token}` } },\n            ),\n          );\n          Logger.log(\n            \"Message with eventId \" +\n              res.data.event_id +\n              \" sent to room \" +\n              name,\n            \"LogbooksService.sendMessage\",\n          );\n          return res.data;\n        } catch (error) {\n          handleAxiosRequestError(error, \"LogbooksService.sendMessage\");\n        }\n      } else {\n        throw new InternalServerErrorException(\n          \"Logbook username and/or password not configured\",\n        );\n      }\n    }\n    return null;\n  }\n}\n\nconst sortMessages = (messages: Message[], sortField: string): Message[] => {\n  const [column, direction] = sortField.split(\":\");\n  let sorted = messages.sort((a, b) => {\n    switch (column) {\n      case \"timestamp\": {\n        return a.origin_server_ts - b.origin_server_ts;\n      }\n      case \"sender\": {\n        if (a.sender.replace(\"@\", \"\")  b.sender.replace(\"@\", \"\")) {\n          return 1;\n        }\n        return 0;\n      }\n      case \"entry\": {\n        if (a.content.body  b.content.body) {\n          return 1;\n        }\n        return 0;\n      }\n      default: {\n        return 0;\n      }\n    }\n  });\n  if (direction === \"desc\") {\n    sorted = sorted.reverse();\n  }\n  return sorted;\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/common/mail.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(to: string, cc: string, subject: string, mailText: string | null, html: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/common/mail.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    cc\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    subject\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    mailText\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    html\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from \"@nestjs-modules/mailer\";\nimport { Injectable, Logger } from \"@nestjs/common\";\n\n@Injectable()\nexport class MailService {\n  constructor(private readonly mailerService: MailerService) {}\n\n  async sendMail(\n    to: string,\n    cc: string,\n    subject: string,\n    mailText: string | null,\n    html: string | null = null,\n  ) {\n    try {\n      Logger.log(\"Sending email to: \" + to, \"Utils.sendMail\");\n      await this.mailerService.sendMail({\n        to,\n        ...(cc && { cc }),\n        ...(subject && { subject }),\n        ...(html && { html }),\n        ...(mailText && { mailText }),\n      });\n    } catch (error) {\n      Logger.error(\"Failed sending email to: \" + to, \"MailService.sendMail\");\n      Logger.error(error, \"MailService.sendMail\");\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MainDatasetsPublicInterceptor.html":{"url":"injectables/MainDatasetsPublicInterceptor.html","title":"injectable - MainDatasetsPublicInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MainDatasetsPublicInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/interceptors/datasets-public.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/datasets/interceptors/datasets-public.interceptor.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class MainDatasetsPublicInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const request = context.switchToHttp().getRequest();\n    if (!request.isAuthenticated()) {\n      const stringFilter = request.query.filter ? request.query.filter : \"{}\";\n      const jsonFilter = JSON.parse(stringFilter);\n      if (\"where\" in jsonFilter) {\n        jsonFilter.where.isPublished = true;\n      } else {\n        jsonFilter.where = { isPublished: true };\n      }\n      request.query.filter = JSON.stringify(jsonFilter);\n    }\n    return next.handle();\n  }\n}\n\n@Injectable()\nexport class SubDatasetsPublicInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const request = context.switchToHttp().getRequest();\n    if (!request.isAuthenticated()) {\n      const stringFields = request.query.fields ? request.query.fields : \"{}\";\n      let jsonFields = JSON.parse(stringFields);\n      jsonFields = { ...jsonFields, isPublished: true };\n      request.query.fields = JSON.stringify(jsonFields);\n    }\n    return next.handle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeasurementPeriodClass.html":{"url":"classes/MeasurementPeriodClass.html","title":"class - MeasurementPeriodClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MeasurementPeriodClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/proposals/schemas/measurement-period.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        QueryableClass\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                comment\n                            \n                            \n                                    \n                                    \n                                end\n                            \n                            \n                                    \n                                    \n                                instrument\n                            \n                            \n                                    \n                                    \n                                start\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Additional information relevant for this measurement period, e.g. if different accounts were used for data taking.'})@Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/schemas/measurement-period.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Time when measurement period ended, format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server.'})@Prop({type: Date, index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/schemas/measurement-period.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        instrument\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Instrument or beamline identifier where measurement was pursued, e.g. /PSI/SLS/TOMCAT'})@Prop({type: String, required: true, index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/schemas/measurement-period.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Time when measurement period started, format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server.'})@Prop({type: Date, index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/schemas/measurement-period.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was created. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:40\n\n                        \n                    \n\n            \n                \n                    NOTE: createdAt and updatedAt properties are handled automatically by mongoose when timestamps flag is set to true on a schema(https://mongoosejs.com/docs/guide.html#timestamps).\nWe still need to keep the fields available here because of the response model and swagger documentation. They are not required so we don't need to provide them manually on create/update.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who created this record. This property is added and maintained by the system.'})@Prop({type: String, index: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was updated last. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who updated this record last. This property is added and maintained by the system.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:26\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Document } from \"mongoose\";\nimport { QueryableClass } from \"src/common/schemas/queryable.schema\";\n\nexport type MeasurementPeriodDocument = MeasurementPeriodClass & Document;\n\n@Schema()\nexport class MeasurementPeriodClass extends QueryableClass {\n  @ApiProperty({\n    type: String,\n    required: true,\n    description:\n      \"Instrument or beamline identifier where measurement was pursued, e.g. /PSI/SLS/TOMCAT\",\n  })\n  @Prop({ type: String, required: true, index: true })\n  instrument: string;\n\n  @ApiProperty({\n    type: Date,\n    description:\n      \"Time when measurement period started, format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server.\",\n  })\n  @Prop({ type: Date, index: true })\n  start: Date;\n\n  @ApiProperty({\n    type: Date,\n    description:\n      \"Time when measurement period ended, format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server.\",\n  })\n  @Prop({ type: Date, index: true })\n  end: Date;\n\n  @ApiProperty({\n    type: String,\n    description:\n      \"Additional information relevant for this measurement period, e.g. if different accounts were used for data taking.\",\n  })\n  @Prop({ type: String })\n  comment: string;\n}\n\nexport const MeasurementPeriodSchema = SchemaFactory.createForClass(\n  MeasurementPeriodClass,\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logbooks/schemas/message.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                event_id\n                            \n                            \n                                    \n                                origin_server_ts\n                            \n                            \n                                    \n                                sender\n                            \n                            \n                                    \n                                type\n                            \n                            \n                                    \n                                unsigned\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageContent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: MessageContentSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/logbooks/schemas/message.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        event_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/logbooks/schemas/message.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        origin_server_ts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/logbooks/schemas/message.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/logbooks/schemas/message.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/logbooks/schemas/message.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unsigned\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/logbooks/schemas/message.schema.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, raw, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\nimport { MessageContent, MessageContentSchema } from \"./message-content.schema\";\n\nexport type MessageDocument = Message & Document;\n\n@Schema()\nexport class Message {\n  @Prop({ type: MessageContentSchema })\n  content: MessageContent;\n\n  @Prop()\n  event_id: string;\n\n  @Prop()\n  origin_server_ts: number;\n\n  @Prop()\n  sender: string;\n\n  @Prop()\n  type: string;\n\n  @Prop(\n    raw({\n      age: { type: Number },\n    }),\n  )\n  unsigned: Record;\n}\n\nexport const MessageSchema = SchemaFactory.createForClass(Message);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageContent.html":{"url":"classes/MessageContent.html","title":"class - MessageContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logbooks/schemas/message-content.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                body\n                            \n                            \n                                    \n                                    Optional\n                                info\n                            \n                            \n                                    \n                                msgtype\n                            \n                            \n                                    \n                                    Optional\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/logbooks/schemas/message-content.schema.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        info\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/logbooks/schemas/message-content.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        msgtype\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/logbooks/schemas/message-content.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/logbooks/schemas/message-content.schema.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, raw, Schema, SchemaFactory } from \"@nestjs/mongoose\";\n\nexport type MessageContentDocument = MessageContent & Document;\n\n@Schema()\nexport class MessageContent {\n  @Prop()\n  body: string;\n\n  @Prop(\n    raw({\n      thumbnail_url: { type: String },\n    }),\n  )\n  info?: Record;\n\n  @Prop()\n  msgtype: string;\n\n  @Prop()\n  url?: string;\n}\n\nexport const MessageContentSchema =\n  SchemaFactory.createForClass(MessageContent);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MultiUTCTimeInterceptor.html":{"url":"injectables/MultiUTCTimeInterceptor.html","title":"injectable - MultiUTCTimeInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MultiUTCTimeInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/multi-utc-time.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateKeys\n                            \n                            \n                                subGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subGroup, dateKeys: ()[])\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/multi-utc-time.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subGroup\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dateKeys\n                                                  \n                                                        \n                                                                    ()[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/multi-utc-time.interceptor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dateKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ()[]\n\n                    \n                \n                    \n                        \n                                Defined in src/common/interceptors/multi-utc-time.interceptor.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subGroup\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/common/interceptors/multi-utc-time.interceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { Observable } from \"rxjs\";\nimport { updateAllTimesToUTC } from \"../utils\";\n\n@Injectable()\nexport class MultiUTCTimeInterceptor implements NestInterceptor {\n  subGroup: keyof T;\n  dateKeys: (keyof U)[];\n\n  constructor(subGroup: keyof T, dateKeys: (keyof U)[]) {\n    this.subGroup = subGroup;\n    this.dateKeys = dateKeys;\n  }\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    const req = context.switchToHttp().getRequest();\n    const instances = req.body[this.subGroup] as U[];\n    req.body[this.subGroup] = updateAllTimesToUTC(this.dateKeys, instances);\n    return next.handle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OidcAuthGuard.html":{"url":"injectables/OidcAuthGuard.html","title":"injectable - OidcAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OidcAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/oidc.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(referer: Record)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/oidc.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        referer\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRequest\n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/oidc.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class OidcAuthGuard extends AuthGuard(\"oidc\") {\n  constructor(private referer: Record) {\n    referer = {};\n    super();\n  }\n\n  getRequest(context: ExecutionContext) {\n    const request = context.switchToHttp().getRequest();\n    const cookie: string = request.headers[\"cookie\"]\n      .split(\";\")\n      .find((c: string) => c.startsWith(\"connect.sid=\"));\n    if (request.headers[\"referer\"]) {\n      this.referer[cookie] = request.headers[\"referer\"];\n    } else {\n      request.headers[\"referer\"] = this.referer[cookie];\n      delete this.referer[cookie];\n    }\n    return request;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OidcStrategy.html":{"url":"injectables/OidcStrategy.html","title":"injectable - OidcStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OidcStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/oidc.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authStrategy\n                            \n                            \n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserPhoto\n                            \n                            \n                                parseUserInfo\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, client: Client, configService: ConfigService, usersService: UsersService, accessGroupService: AccessGroupService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/oidc.strategy.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessGroupService\n                                                  \n                                                        \n                                                                        AccessGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserPhoto\n                        \n                    \n                \n            \n            \n                \ngetUserPhoto(userinfo: UserinfoResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/oidc.strategy.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userinfo\n                                    \n                                                UserinfoResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseUserInfo\n                        \n                    \n                \n            \n            \n                \nparseUserInfo(userinfo: UserinfoResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/oidc.strategy.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userinfo\n                                    \n                                                UserinfoResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(tokenset: TokenSet)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/oidc.strategy.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tokenset\n                                    \n                                            TokenSet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authStrategy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"oidc\"\n                    \n                \n                    \n                        \n                                Defined in src/auth/strategies/oidc.strategy.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Client\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/strategies/oidc.strategy.ts:44\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Logger,\n  InternalServerErrorException,\n} from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { FilterQuery } from \"mongoose\";\nimport { CreateUserIdentityDto } from \"src/users/dto/create-user-identity.dto\";\nimport { CreateUserDto } from \"src/users/dto/create-user.dto\";\nimport { User, UserDocument } from \"src/users/schemas/user.schema\";\nimport { UsersService } from \"src/users/users.service\";\nimport {\n  Strategy,\n  Client,\n  UserinfoResponse,\n  TokenSet,\n  Issuer,\n} from \"openid-client\";\nimport { AuthService } from \"../auth.service\";\nimport { Profile } from \"passport\";\nimport { UserProfile } from \"src/users/schemas/user-profile.schema\";\nimport { OidcConfig } from \"src/config/configuration\";\nimport { AccessGroupService } from \"../access-group-provider/access-group.service\";\nimport { UserPayload } from \"../interfaces/userPayload.interface\";\n\nexport class BuildOpenIdClient {\n  constructor(private configService: ConfigService) {}\n  async build() {\n    const oidcConfig = this.configService.get(\"oidc\");\n    const trustIssuer = await Issuer.discover(\n      `${oidcConfig?.issuer}/.well-known/openid-configuration`,\n    );\n    const client = new trustIssuer.Client({\n      client_id: oidcConfig?.clientID as string,\n      client_secret: oidcConfig?.clientSecret as string,\n    });\n    return client;\n  }\n}\n\n@Injectable()\nexport class OidcStrategy extends PassportStrategy(Strategy, \"oidc\") {\n  client: Client;\n  authStrategy = \"oidc\";\n\n  constructor(\n    private readonly authService: AuthService,\n    client: Client,\n    private configService: ConfigService,\n    private usersService: UsersService,\n    private accessGroupService: AccessGroupService,\n  ) {\n    const oidcConfig = configService.get(\"oidc\");\n    super({\n      client: client,\n      params: {\n        redirect_uri: oidcConfig?.callbackURL,\n        scope: oidcConfig?.scope,\n      },\n      passReqToCallback: false,\n      usePKCE: false,\n    });\n\n    this.client = client;\n  }\n\n  async validate(tokenset: TokenSet): Promise> {\n    const userinfo: UserinfoResponse = await this.client.userinfo(tokenset);\n    const oidcConfig = this.configService.get(\"oidc\");\n\n    const userProfile = this.parseUserInfo(userinfo);\n    const userPayload: UserPayload = {\n      userId: userProfile.id,\n      username: userProfile.username,\n      email: userProfile.email,\n      accessGroupProperty: oidcConfig?.accessGroupProperty,\n      payload: userinfo,\n    };\n    userProfile.accessGroups = await this.accessGroupService.getAccessGroups(\n      userPayload,\n    );\n\n    const userFilter: FilterQuery = {\n      $or: [\n        { username: `oidc.${userProfile.username}` },\n        { email: userProfile.email as string },\n      ],\n    };\n    let user = await this.usersService.findOne(userFilter);\n    if (!user) {\n      const createUser: CreateUserDto = {\n        username: userProfile.username,\n        email: userProfile.email as string,\n        authStrategy: \"oidc\",\n      };\n\n      const newUser = await this.usersService.create(createUser);\n      if (!newUser) {\n        throw new InternalServerErrorException(\n          \"Could not create User from OIDC response.\",\n        );\n      }\n      Logger.log(\"Created oidc user \", newUser.username);\n\n      const createUserIdentity: CreateUserIdentityDto = {\n        authStrategy: \"oidc\",\n        credentials: {},\n        externalId: userProfile.id,\n        profile: userProfile,\n        provider: \"oidc\",\n        userId: newUser._id,\n      };\n\n      await this.usersService.createUserIdentity(createUserIdentity);\n      Logger.log(\"Created user identity for oidc user with id \", newUser._id);\n\n      user = newUser;\n    } else {\n      await this.usersService.updateUserIdentity(\n        {\n          profile: userProfile,\n        },\n        user._id,\n      );\n    }\n\n    const jsonUser = JSON.parse(JSON.stringify(user));\n    const { password, ...returnUser } = jsonUser;\n    returnUser.userId = returnUser._id;\n\n    return returnUser;\n  }\n\n  getUserPhoto(userinfo: UserinfoResponse) {\n    return userinfo.thumbnailPhoto\n      ? \"data:image/jpeg;base64,\" +\n          Buffer.from(userinfo.thumbnailPhoto as string, \"binary\").toString(\n            \"base64\",\n          )\n      : \"no photo\";\n  }\n\n  parseUserInfo(userinfo: UserinfoResponse) {\n    type OidcProfile = Profile & UserProfile;\n    const profile = {} as OidcProfile;\n\n    // Prior to OpenID Connect Basic Client Profile 1.0 - draft 22, the \"sub\"\n    // claim was named \"user_id\".  Many providers still use the old name, so\n    // fallback to that.\n    const userId = userinfo.sub || (userinfo.user_id as string);\n    if (!userId) {\n      throw new Error(\"Could not find sub or user_id in userinfo response\");\n    }\n\n    profile.id = userId;\n    profile.username = userinfo.preferred_username ?? userinfo.name ?? \"\";\n    profile.displayName = userinfo.name ?? \"\";\n    profile.emails = userinfo.email ? [{ value: userinfo.email }] : [];\n    profile.email = userinfo.email ?? \"\";\n    profile.thumbnailPhoto = this.getUserPhoto(userinfo);\n\n    return profile;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrigDatablock.html":{"url":"classes/OrigDatablock.html","title":"class - OrigDatablock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrigDatablock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/origdatablocks/schemas/origdatablock.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OwnableClass\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                chkAlg\n                            \n                            \n                                    \n                                    \n                                dataFileList\n                            \n                            \n                                    \n                                    \n                                datasetId\n                            \n                            \n                                    \n                                    \n                                size\n                            \n                            \n                                    \n                                    \n                                accessGroups\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                instrumentGroup\n                            \n                            \n                                    \n                                    \n                                ownerGroup\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, default: () => })@Prop({type: String, required: true, default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/origdatablocks/schemas/origdatablock.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        chkAlg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Algorithm used for calculation of file checksums. Should be lowercase, e.g., sha2 or blake2b.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/origdatablocks/schemas/origdatablock.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dataFileList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataFile[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'array', items: undefined, required: true, description: 'Embedded schema definitions for each file.'})@Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/origdatablocks/schemas/origdatablock.schema.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        datasetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'PID of the dataset to which the orig datablock belongs.'})@Prop({type: String, ref: 'Dataset', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/origdatablocks/schemas/origdatablock.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: true, description: 'Total size in bytes of all files contained in the dataFileList.'})@Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/origdatablocks/schemas/origdatablock.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'Optional additional groups which have read access to the data. Users which are members in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users.'})@Prop({type: undefined, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        instrumentGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Optional additional groups which have read and write access to the data. Users which are members in one of the groups listed here are allowed to access this data.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ownerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151'})@Prop({type: String, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was created. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:40\n\n                        \n                    \n\n            \n                \n                    NOTE: createdAt and updatedAt properties are handled automatically by mongoose when timestamps flag is set to true on a schema(https://mongoosejs.com/docs/guide.html#timestamps).\nWe still need to keep the fields available here because of the response model and swagger documentation. They are not required so we don't need to provide them manually on create/update.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who created this record. This property is added and maintained by the system.'})@Prop({type: String, index: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was updated last. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who updated this record last. This property is added and maintained by the system.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:26\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty, getSchemaPath } from \"@nestjs/swagger\";\nimport { OwnableClass } from \"src/common/schemas/ownable.schema\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { DataFile, DataFileSchema } from \"../../common/schemas/datafile.schema\";\n\nexport type OrigDatablockDocument = OrigDatablock & Document;\n\n@Schema({\n  collection: \"OrigDatablock\",\n  toJSON: {\n    getters: true,\n  },\n  timestamps: true,\n})\nexport class OrigDatablock extends OwnableClass {\n  @ApiProperty({\n    type: String,\n    default: () => uuidv4(),\n  })\n  @Prop({\n    type: String,\n    //unique: true,\n    required: true,\n    default: () => uuidv4(),\n  })\n  _id: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"PID of the dataset to which the orig datablock belongs.\",\n  })\n  @Prop({ type: String, ref: \"Dataset\", required: true })\n  datasetId: string;\n\n  @ApiProperty({\n    type: Number,\n    required: true,\n    description:\n      \"Total size in bytes of all files contained in the dataFileList.\",\n  })\n  @Prop({\n    type: Number,\n    required: true,\n  })\n  size: number;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description:\n      \"Algorithm used for calculation of file checksums. Should be lowercase, e.g., sha2 or blake2b.\",\n  })\n  @Prop({\n    type: String,\n    required: false,\n  })\n  chkAlg: string;\n\n  @ApiProperty({\n    type: \"array\",\n    items: { $ref: getSchemaPath(DataFile) },\n    required: true,\n    description: \"Embedded schema definitions for each file.\",\n  })\n  @Prop({\n    type: [DataFileSchema],\n    required: true,\n  })\n  dataFileList: DataFile[];\n}\n\nexport const OrigDatablockSchema = SchemaFactory.createForClass(OrigDatablock);\n\nOrigDatablockSchema.index({ \"$**\": \"text\" });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrigDatablocksController.html":{"url":"controllers/OrigDatablocksController.html","title":"controller - OrigDatablocksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrigDatablocksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/origdatablocks/origdatablocks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                origdatablocks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                fullfacet\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                fullfacetFiles\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                fullquery\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                fullqueryFiles\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                isValid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateDatasetSizeAndFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createOrigDatablockDto: CreateOrigDatablockDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@HttpCode(HttpStatus.CREATED)@Post()@ApiOperation({summary: 'It creates a new orig datablock for the specified dataset.', description: 'It creates a new orig datablock for the specified dataset. It contains the list of files associated with the datasets. Each dataset can have more than one orig datablocks'})@ApiBody({description: 'Input fields for the orig datablock to be created', required: true, type: CreateOrigDatablockDto})@ApiResponse({status: 201, type: OrigDatablock, description: 'Create a new origdataset and return its representation in SciCat'})\n                \n            \n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrigDatablockDto\n                                    \n                                                CreateOrigDatablockDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get()@ApiOperation({summary: 'It returns a list of orig datablocks.', description: 'It returns a list of orig datablocks. The list returned can be modified by providing a filter.'})@ApiQuery({name: 'filter', description: undefined, required: false, type: String, example: filterExample})@ApiResponse({status: 200, type: OrigDatablock, isArray: true, description: 'Return the orig datablocks requested'})\n                \n            \n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.controller.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get('/:id')@ApiOperation({summary: 'It retrieve the origdatablock.', description: 'It retrieve the original datablock with the id specified.'})@ApiParam({name: 'id', description: 'Id of the origdatablock to be retrieved', type: String})@ApiResponse({status: 200, description: 'The origdatablock requested', type: OrigDatablock})\n                \n            \n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.controller.ts:317\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        fullfacet\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullfacet(filters: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get('/fullfacet')\n                \n            \n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.controller.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        fullfacetFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullfacetFiles(filters: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get('/fullfacet/files')\n                \n            \n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.controller.ts:282\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        fullquery\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullquery(filters: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get('/fullquery')@ApiQuery({name: 'fields', description: 'Define the query conditions using mongoDB syntax as JSON object. It also supports the `text` search, if you want to look for strings anywhere in the originalDatablocks. Please refer to mongo documentation for more information about the syntax', required: false, type: String, example: undefined})@ApiQuery({name: 'limits', description: 'Define further query parameters like skip, limit, order', required: false, type: String, example: '{ \"skip\": 0, \"limit\": 25, \"order\": \"creationTime:desc\" }'})\n                \n            \n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.controller.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        fullqueryFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullqueryFiles(filters: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get('/fullquery/files')@ApiQuery({name: 'fields', description: 'Define the query conditions using mongoDB syntax as JSON object. It also supports the `text` search, if you want to look for strings anywhere in the originalDatablocks. Please refer to mongo documentation for more information about the syntax', required: false, type: String, example: undefined})@ApiQuery({name: 'limits', description: 'Define further query parameters like skip, limit, order', required: false, type: String, example: '{ \"skip\": 0, \"limit\": 25, \"order\": \"creationTime:desc\" }'})\n                \n            \n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.controller.ts:249\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        isValid\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValid(createOrigDatablock)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AllowAny()@HttpCode(HttpStatus.OK)@Post('/isValid')@ApiOperation({summary: 'It validates the orig datablock provided as input.', description: 'It validates the orig datablock provided as input, and returns true if the information is a valid dataset'})@ApiBody({description: 'Input fields for the orig datablock that needs to be validated', required: true, type: OrigDatablock})@ApiResponse({status: 200, type: Boolean, description: 'Check if the orig datablock provided pass validation. It return true if the validation is passed'})\n                \n            \n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.controller.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrigDatablock\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Delete('/:id')@ApiOperation({summary: 'It deletes the origdatablock.', description: 'It delete the original datablock specified through the id specified.'})@ApiParam({name: 'id', description: 'Id of the origdatablock to be deleted', type: String})@ApiResponse({status: 200, description: 'No value is returned'})\n                \n            \n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.controller.ts:381\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateOrigDatablockDto: UpdateOrigDatablockDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Patch('/:id')@ApiOperation({summary: 'It updates the origdatablock.', description: 'It updates the original datablock with the id specified.'})@ApiParam({name: 'id', description: 'Id of the origdatablock to be updated', type: String})@ApiBody({description: 'OrigDatablock object that needs to be updated. Only the origdatablock object fields that needs to be updated, should be passed in.', required: true, type: UpdateOrigDatablockDto})@ApiResponse({status: 200, description: 'The updated origdatablock', type: OrigDatablock})\n                \n            \n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.controller.ts:347\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrigDatablockDto\n                                    \n                                                UpdateOrigDatablockDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateDatasetSizeAndFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDatasetSizeAndFiles(pid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.controller.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable @typescript-eslint/quotes */\nimport {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n  HttpCode,\n  HttpStatus,\n  BadRequestException,\n} from \"@nestjs/common\";\nimport { OrigDatablocksService } from \"./origdatablocks.service\";\nimport { CreateOrigDatablockDto } from \"./dto/create-origdatablock.dto\";\nimport { UpdateOrigDatablockDto } from \"./dto/update-origdatablock.dto\";\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiOperation,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { PoliciesGuard } from \"src/casl/guards/policies.guard\";\nimport { CheckPolicies } from \"src/casl/decorators/check-policies.decorator\";\nimport { AppAbility } from \"src/casl/casl-ability.factory\";\nimport { Action } from \"src/casl/action.enum\";\nimport {\n  OrigDatablock,\n  OrigDatablockDocument,\n} from \"./schemas/origdatablock.schema\";\nimport { IFilters } from \"src/common/interfaces/common.interface\";\nimport { IOrigDatablockFields } from \"./interfaces/origdatablocks.interface\";\nimport { AllowAny } from \"src/auth/decorators/allow-any.decorator\";\nimport { plainToInstance } from \"class-transformer\";\nimport { validate, ValidationError } from \"class-validator\";\nimport { DatasetsService } from \"src/datasets/datasets.service\";\nimport { PartialUpdateDatasetDto } from \"src/datasets/dto/update-dataset.dto\";\nimport { filterDescription, filterExample } from \"src/common/utils\";\n\n@ApiBearerAuth()\n@ApiTags(\"origdatablocks\")\n@Controller(\"origdatablocks\")\nexport class OrigDatablocksController {\n  constructor(\n    private readonly origDatablocksService: OrigDatablocksService,\n    private readonly datasetsService: DatasetsService,\n  ) {}\n\n  // POST /origdatablocks\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.Create, OrigDatablock),\n  )\n  @HttpCode(HttpStatus.CREATED)\n  @Post()\n  @ApiOperation({\n    summary: \"It creates a new orig datablock for the specified dataset.\",\n    description:\n      \"It creates a new orig datablock for the specified dataset. It contains the list of files associated with the datasets. Each dataset can have more than one orig datablocks\",\n  })\n  @ApiBody({\n    description: \"Input fields for the orig datablock to be created\",\n    required: true,\n    type: CreateOrigDatablockDto,\n  })\n  @ApiResponse({\n    status: 201,\n    type: OrigDatablock,\n    description:\n      \"Create a new origdataset and return its representation in SciCat\",\n  })\n  async create(\n    @Body() createOrigDatablockDto: CreateOrigDatablockDto,\n  ): Promise {\n    const dataset = await this.datasetsService.findOne({\n      where: { pid: createOrigDatablockDto.datasetId },\n    });\n    if (!dataset) {\n      throw new BadRequestException(\"Invalid datasetId\");\n    }\n\n    createOrigDatablockDto = {\n      ...createOrigDatablockDto,\n      ownerGroup: createOrigDatablockDto.ownerGroup\n        ? createOrigDatablockDto.ownerGroup\n        : dataset.ownerGroup,\n      accessGroups: createOrigDatablockDto.accessGroups\n        ? createOrigDatablockDto.accessGroups\n        : JSON.parse(JSON.stringify(dataset.accessGroups)),\n      instrumentGroup: createOrigDatablockDto.instrumentGroup\n        ? createOrigDatablockDto.instrumentGroup\n        : dataset.instrumentGroup,\n    };\n\n    const origdatablock = await this.origDatablocksService.create(\n      createOrigDatablockDto,\n    );\n\n    await this.updateDatasetSizeAndFiles(dataset.pid);\n\n    return origdatablock;\n  }\n\n  async updateDatasetSizeAndFiles(pid: string) {\n    // updates datasets size\n    const parsedFilters: IFilters =\n      { where: { datasetId: pid } };\n    const datasetOrigdatablocks = await this.origDatablocksService.findAll(\n      parsedFilters,\n    );\n\n    const updateDatasetDto: PartialUpdateDatasetDto = {\n      size: datasetOrigdatablocks\n        .map((od) => od.size)\n        .reduce((ps, a) => ps + a, 0),\n      numberOfFiles: datasetOrigdatablocks\n        .map((od) => od.dataFileList.length)\n        .reduce((ps, a) => ps + a, 0),\n    };\n\n    await this.datasetsService.findByIdAndUpdate(pid, updateDatasetDto);\n  }\n\n  @AllowAny()\n  @HttpCode(HttpStatus.OK)\n  @Post(\"/isValid\")\n  @ApiOperation({\n    summary: \"It validates the orig datablock provided as input.\",\n    description:\n      \"It validates the orig datablock provided as input, and returns true if the information is a valid dataset\",\n  })\n  @ApiBody({\n    description:\n      \"Input fields for the orig datablock that needs to be validated\",\n    required: true,\n    type: OrigDatablock,\n  })\n  @ApiResponse({\n    status: 200,\n    type: Boolean,\n    description:\n      \"Check if the orig datablock provided pass validation. It return true if the validation is passed\",\n  })\n  async isValid(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    @Body() createOrigDatablock: unknown,\n  ): Promise {\n    const dtoTestOrigDatablock = plainToInstance(\n      CreateOrigDatablockDto,\n      createOrigDatablock,\n    );\n    const errorsTestOrigDatablock = await validate(dtoTestOrigDatablock);\n\n    const valid = errorsTestOrigDatablock.length == 0;\n\n    return { valid: valid, errors: errorsTestOrigDatablock };\n  }\n\n  // GET /origdatablock\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.Read, OrigDatablock),\n  )\n  @Get()\n  @ApiOperation({\n    summary: \"It returns a list of orig datablocks.\",\n    description:\n      \"It returns a list of orig datablocks. The list returned can be modified by providing a filter.\",\n  })\n  @ApiQuery({\n    name: \"filter\",\n    description:\n      \"Database filters to apply when retrieving all origdatablocks\\n\" +\n      filterDescription,\n    required: false,\n    type: String,\n    example: filterExample,\n  })\n  @ApiResponse({\n    status: 200,\n    type: OrigDatablock,\n    isArray: true,\n    description: \"Return the orig datablocks requested\",\n  })\n  async findAll(@Query(\"filter\") filter?: string): Promise {\n    const parsedFilters: IFilters =\n      JSON.parse(filter ?? \"{}\");\n    return this.origDatablocksService.findAll(parsedFilters);\n  }\n\n  // GET /origdatablocks/fullquery\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.Read, OrigDatablock),\n  )\n  @Get(\"/fullquery\")\n  @ApiQuery({\n    name: \"fields\",\n    description:\n      \"Define the query conditions using mongoDB syntax as JSON object. It also supports the `text` search, if you want to look for strings anywhere in the originalDatablocks. Please refer to mongo documentation for more information about the syntax\",\n    required: false,\n    type: String,\n    example: {},\n  })\n  @ApiQuery({\n    name: \"limits\",\n    description: \"Define further query parameters like skip, limit, order\",\n    required: false,\n    type: String,\n    example: '{ \"skip\": 0, \"limit\": 25, \"order\": \"creationTime:desc\" }',\n  })\n  async fullquery(\n    @Query() filters: { fields?: string; limits?: string },\n  ): Promise {\n    const parsedFilters = {\n      fields: JSON.parse(filters.fields ?? \"{}\"),\n      limits: JSON.parse(filters.limits ?? \"{}\"),\n    };\n\n    return this.origDatablocksService.fullquery(parsedFilters);\n  }\n\n  // GET /origdatablocks/fullquery/files\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.Read, OrigDatablock),\n  )\n  @Get(\"/fullquery/files\")\n  @ApiQuery({\n    name: \"fields\",\n    description:\n      \"Define the query conditions using mongoDB syntax as JSON object. It also supports the `text` search, if you want to look for strings anywhere in the originalDatablocks. Please refer to mongo documentation for more information about the syntax\",\n    required: false,\n    type: String,\n    example: {},\n  })\n  @ApiQuery({\n    name: \"limits\",\n    description: \"Define further query parameters like skip, limit, order\",\n    required: false,\n    type: String,\n    example: '{ \"skip\": 0, \"limit\": 25, \"order\": \"creationTime:desc\" }',\n  })\n  async fullqueryFiles(\n    @Query() filters: { fields?: string; limits?: string },\n  ): Promise {\n    const parsedFilters = {\n      fields: JSON.parse(filters.fields ?? \"{}\"),\n      limits: JSON.parse(filters.limits ?? \"{}\"),\n    };\n\n    return this.origDatablocksService.fullqueryFilesList(parsedFilters);\n  }\n\n  //  GET /origdatablocks/fullfacet\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.Read, OrigDatablock),\n  )\n  @Get(\"/fullfacet\")\n  async fullfacet(\n    @Query() filters: { fields?: string; facets?: string },\n  ): Promise[]> {\n    const parsedFilters = {\n      fields: JSON.parse(filters.fields ?? \"{}\"),\n      limits: JSON.parse(filters.facets ?? \"{}\"),\n    };\n    return this.origDatablocksService.fullfacet(parsedFilters);\n  }\n\n  //  GET /origdatablocks/fullfacet/files\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.Read, OrigDatablock),\n  )\n  @Get(\"/fullfacet/files\")\n  async fullfacetFiles(\n    @Query() filters: { fields?: string; facets?: string },\n  ): Promise[]> {\n    const parsedFilters = {\n      fields: JSON.parse(filters.fields ?? \"{}\"),\n      limits: JSON.parse(filters.facets ?? \"{}\"),\n    };\n    const getSubFieldCount = \"dataFileList\";\n\n    return this.origDatablocksService.fullfacet(\n      parsedFilters,\n      getSubFieldCount,\n    );\n  }\n\n  // GET /origdatablocks/:id\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.Read, OrigDatablock),\n  )\n  @Get(\"/:id\")\n  @ApiOperation({\n    summary: \"It retrieve the origdatablock.\",\n    description: \"It retrieve the original datablock with the id specified.\",\n  })\n  @ApiParam({\n    name: \"id\",\n    description: \"Id of the origdatablock to be retrieved\",\n    type: String,\n  })\n  @ApiResponse({\n    status: 200,\n    description: \"The origdatablock requested\",\n    type: OrigDatablock,\n  })\n  async findById(@Param(\"id\") id: string): Promise {\n    return this.origDatablocksService.findOne({ _id: id });\n  }\n\n  // PATCH /origdatablocks/:id\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.Update, OrigDatablock),\n  )\n  @Patch(\"/:id\")\n  @ApiOperation({\n    summary: \"It updates the origdatablock.\",\n    description: \"It updates the original datablock with the id specified.\",\n  })\n  @ApiParam({\n    name: \"id\",\n    description: \"Id of the origdatablock to be updated\",\n    type: String,\n  })\n  @ApiBody({\n    description:\n      \"OrigDatablock object that needs to be updated. Only the origdatablock object fields that needs to be updated, should be passed in.\",\n    required: true,\n    type: UpdateOrigDatablockDto,\n  })\n  @ApiResponse({\n    status: 200,\n    description: \"The updated origdatablock\",\n    type: OrigDatablock,\n  })\n  async update(\n    @Param(\"id\") id: string,\n    @Body() updateOrigDatablockDto: UpdateOrigDatablockDto,\n  ): Promise {\n    const origdatablock = (await this.origDatablocksService.update(\n      { _id: id },\n      updateOrigDatablockDto,\n    )) as OrigDatablock;\n\n    await this.updateDatasetSizeAndFiles(origdatablock.datasetId);\n\n    return origdatablock;\n  }\n\n  // DELETE /origdatablocks/:id\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.Delete, OrigDatablock),\n  )\n  @Delete(\"/:id\")\n  @ApiOperation({\n    summary: \"It deletes the origdatablock.\",\n    description:\n      \"It delete the original datablock specified through the id specified.\",\n  })\n  @ApiParam({\n    name: \"id\",\n    description: \"Id of the origdatablock to be deleted\",\n    type: String,\n  })\n  @ApiResponse({\n    status: 200,\n    description: \"No value is returned\",\n  })\n  async remove(@Param(\"id\") id: string): Promise {\n    const origdatablock = (await this.origDatablocksService.remove({\n      _id: id,\n    })) as OrigDatablock;\n\n    await this.updateDatasetSizeAndFiles(origdatablock.datasetId);\n\n    return origdatablock;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrigDatablocksModule.html":{"url":"modules/OrigDatablocksModule.html","title":"module - OrigDatablocksModule","body":"\n                   \n\n\n\n\n    Modules\n    OrigDatablocksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrigDatablocksModule\n\n\n\ncluster_OrigDatablocksModule_providers\n\n\n\ncluster_OrigDatablocksModule_exports\n\n\n\n\nOrigDatablocksService \n\nOrigDatablocksService \n\n\n\nOrigDatablocksModule\n\nOrigDatablocksModule\n\nOrigDatablocksService  -->\n\nOrigDatablocksModule->OrigDatablocksService \n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nOrigDatablocksModule -->\n\nCaslAbilityFactory->OrigDatablocksModule\n\n\n\n\n\nOrigDatablocksService\n\nOrigDatablocksService\n\nOrigDatablocksModule -->\n\nOrigDatablocksService->OrigDatablocksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/origdatablocks/origdatablocks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslAbilityFactory\n                        \n                        \n                            OrigDatablocksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrigDatablocksController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrigDatablocksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from \"@nestjs/common\";\nimport { OrigDatablocksService } from \"./origdatablocks.service\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport {\n  OrigDatablock,\n  OrigDatablockSchema,\n} from \"./schemas/origdatablock.schema\";\nimport { OrigDatablocksController } from \"./origdatablocks.controller\";\nimport { CaslAbilityFactory } from \"src/casl/casl-ability.factory\";\nimport { DatasetsModule } from \"src/datasets/datasets.module\";\n\n@Module({\n  imports: [\n    forwardRef(() => DatasetsModule),\n    MongooseModule.forFeature([\n      {\n        name: OrigDatablock.name,\n        schema: OrigDatablockSchema,\n      },\n    ]),\n  ],\n  controllers: [OrigDatablocksController],\n  exports: [OrigDatablocksService],\n  providers: [OrigDatablocksService, CaslAbilityFactory],\n})\nexport class OrigDatablocksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrigDatablocksService.html":{"url":"injectables/OrigDatablocksService.html","title":"injectable - OrigDatablocksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrigDatablocksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/origdatablocks/origdatablocks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                fullfacet\n                            \n                            \n                                    Async\n                                fullquery\n                            \n                            \n                                    Async\n                                fullqueryFilesList\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(origDatablockModel: Model, request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/origdatablocks/origdatablocks.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        origDatablockModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createOrigdatablockDto: CreateOrigDatablockDto)\n                \n            \n\n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrigdatablockDto\n                                    \n                                                CreateOrigDatablockDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullfacet\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullfacet(filters: IFacets, subField?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            IFacets\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subField\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullquery\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullquery(filter: IFilters)\n                \n            \n\n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            IFilters\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullqueryFilesList\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullqueryFilesList(filter: IFilters)\n                \n            \n\n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            IFilters\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(filter: FilterQuery, updateOrigdatablockDto: UpdateOrigDatablockDto)\n                \n            \n\n\n            \n                \n                    Defined in src/origdatablocks/origdatablocks.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrigdatablockDto\n                                    \n                                                UpdateOrigDatablockDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Scope } from \"@nestjs/common\";\nimport { REQUEST } from \"@nestjs/core\";\nimport { Request } from \"express\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { FilterQuery, Model, PipelineStage, QueryOptions } from \"mongoose\";\nimport { IFacets, IFilters } from \"src/common/interfaces/common.interface\";\nimport {\n  addCreatedByFields,\n  addUpdatedByField,\n  createFullfacetPipeline,\n  createFullqueryFilter,\n  parseLimitFilters,\n  parseLimitFiltersForPipeline,\n} from \"src/common/utils\";\nimport { CreateOrigDatablockDto } from \"./dto/create-origdatablock.dto\";\nimport { UpdateOrigDatablockDto } from \"./dto/update-origdatablock.dto\";\nimport { IOrigDatablockFields } from \"./interfaces/origdatablocks.interface\";\nimport {\n  OrigDatablock,\n  OrigDatablockDocument,\n} from \"./schemas/origdatablock.schema\";\nimport { JWTUser } from \"src/auth/interfaces/jwt-user.interface\";\n\n@Injectable({ scope: Scope.REQUEST })\nexport class OrigDatablocksService {\n  constructor(\n    @InjectModel(OrigDatablock.name)\n    private origDatablockModel: Model,\n    @Inject(REQUEST) private request: Request,\n  ) {}\n\n  async create(\n    createOrigdatablockDto: CreateOrigDatablockDto,\n  ): Promise {\n    const username = (this.request.user as JWTUser).username;\n    const createdOrigDatablock = new this.origDatablockModel(\n      addCreatedByFields(createOrigdatablockDto, username),\n    );\n    return createdOrigDatablock.save();\n  }\n\n  async findAll(\n    filter: FilterQuery,\n  ): Promise {\n    const whereFilter: FilterQuery = filter.where ?? {};\n    const fieldsProjection: FilterQuery =\n      filter.fields ?? {};\n    const { limit, skip, sort } = parseLimitFilters(filter.limits);\n\n    const origdatablockPromise = this.origDatablockModel\n      .find(whereFilter, fieldsProjection)\n      .limit(limit)\n      .skip(skip)\n      .sort(sort);\n\n    const origdatablock = await origdatablockPromise.exec();\n\n    return origdatablock;\n  }\n\n  async findOne(\n    filter: FilterQuery,\n  ): Promise {\n    return this.origDatablockModel.findOne(filter).exec();\n  }\n\n  async fullquery(\n    filter: IFilters,\n  ): Promise {\n    const filterQuery: FilterQuery =\n      createFullqueryFilter(\n        this.origDatablockModel,\n        \"_id\",\n        filter.fields as FilterQuery,\n      );\n    const modifiers: QueryOptions = parseLimitFilters(filter.limits);\n\n    return this.origDatablockModel.find(filterQuery, null, modifiers).exec();\n  }\n\n  async fullqueryFilesList(\n    filter: IFilters,\n  ): Promise {\n    const filterQuery: FilterQuery =\n      createFullqueryFilter(\n        this.origDatablockModel,\n        \"_id\",\n        filter.fields as FilterQuery,\n      );\n    const modifiers = parseLimitFiltersForPipeline(filter.limits);\n\n    const pipelineStages: PipelineStage[] = [\n      { $match: filterQuery },\n      {\n        $lookup: {\n          from: \"Dataset\",\n          localField: \"datasetId\",\n          foreignField: \"pid\",\n          as: \"Dataset\",\n        },\n      },\n      {\n        $addFields: {\n          datasetExist: { $gt: [{ $size: \"$Dataset\" }, 0] },\n        },\n      },\n      { $unset: \"Dataset\" },\n      { $unwind: \"$dataFileList\" },\n      ...modifiers,\n    ];\n\n    return this.origDatablockModel.aggregate(pipelineStages).exec();\n  }\n\n  async fullfacet(\n    filters: IFacets,\n    subField?: string,\n  ): Promise[]> {\n    const fields = filters.fields ?? {};\n    const facets = filters.facets ?? [];\n    const pipeline = createFullfacetPipeline\n    >(this.origDatablockModel, \"datasetId\", fields, facets, subField);\n\n    return this.origDatablockModel.aggregate(pipeline).exec();\n  }\n\n  async update(\n    filter: FilterQuery,\n    updateOrigdatablockDto: UpdateOrigDatablockDto,\n  ): Promise {\n    const username = (this.request.user as JWTUser).username;\n    return this.origDatablockModel\n      .findOneAndUpdate(\n        filter,\n        addUpdatedByField(updateOrigdatablockDto, username),\n        { new: true },\n      )\n      .exec();\n  }\n\n  async remove(filter: FilterQuery): Promise {\n    return this.origDatablockModel.findOneAndRemove(filter).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OwnableClass.html":{"url":"classes/OwnableClass.html","title":"class - OwnableClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OwnableClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/schemas/ownable.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        QueryableClass\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                accessGroups\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                instrumentGroup\n                            \n                            \n                                    \n                                    \n                                ownerGroup\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'Optional additional groups which have read access to the data. Users which are members in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users.'})@Prop({type: undefined, index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/schemas/ownable.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        instrumentGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Optional additional groups which have read and write access to the data. Users which are members in one of the groups listed here are allowed to access this data.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/schemas/ownable.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ownerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151'})@Prop({type: String, index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/schemas/ownable.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was created. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:40\n\n                        \n                    \n\n            \n                \n                    NOTE: createdAt and updatedAt properties are handled automatically by mongoose when timestamps flag is set to true on a schema(https://mongoosejs.com/docs/guide.html#timestamps).\nWe still need to keep the fields available here because of the response model and swagger documentation. They are not required so we don't need to provide them manually on create/update.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who created this record. This property is added and maintained by the system.'})@Prop({type: String, index: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was updated last. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who updated this record last. This property is added and maintained by the system.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:26\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { QueryableClass } from \"./queryable.schema\";\n\nexport class OwnableClass extends QueryableClass {\n  @ApiProperty({\n    type: String,\n    description:\n      \"Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151\",\n  })\n  @Prop({\n    type: String,\n    index: true,\n  })\n  ownerGroup: string;\n\n  @ApiProperty({\n    type: [String],\n    description:\n      \"Optional additional groups which have read access to the data. Users which are members in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users.\",\n  })\n  @Prop({\n    type: [String],\n    index: true,\n  })\n  accessGroups: string[] = [];\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description:\n      \"Optional additional groups which have read and write access to the data. Users which are members in one of the groups listed here are allowed to access this data.\",\n  })\n  @Prop({\n    type: String,\n    required: false,\n  })\n  instrumentGroup?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OwnableDto.html":{"url":"classes/OwnableDto.html","title":"class - OwnableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OwnableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/ownable.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                accessGroups\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                instrumentGroup\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                ownerGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        accessGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: false, description: 'List of groups which have access to this item.'})@IsOptional()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/ownable.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        instrumentGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Group of the instrument which this item was acquired on.'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/ownable.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        ownerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Name of the group owning this item.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/ownable.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsOptional, IsString } from \"class-validator\";\n\nexport class OwnableDto {\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"Name of the group owning this item.\",\n  })\n  @IsString()\n  readonly ownerGroup: string;\n\n  @ApiProperty({\n    type: [String],\n    required: false,\n    description: \"List of groups which have access to this item.\",\n  })\n  @IsOptional()\n  @IsString({\n    each: true,\n  })\n  readonly accessGroups?: string[];\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"Group of the instrument which this item was acquired on.\",\n  })\n  @IsOptional()\n  @IsString()\n  readonly instrumentGroup?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PartialUpdateDatasetDto.html":{"url":"classes/PartialUpdateDatasetDto.html","title":"class - PartialUpdateDatasetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PartialUpdateDatasetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/update-dataset.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateDatasetDto } from \"./create-dataset.dto\";\n\nexport class UpdateDatasetDto extends CreateDatasetDto {}\nexport class PartialUpdateDatasetDto extends PartialType(CreateDatasetDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PartialUpdateDerivedDatasetDto.html":{"url":"classes/PartialUpdateDerivedDatasetDto.html","title":"class - PartialUpdateDerivedDatasetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PartialUpdateDerivedDatasetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/update-derived-dataset.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { Exclude } from \"class-transformer\";\nimport { IsOptional } from \"class-validator\";\nimport { Attachment } from \"src/attachments/schemas/attachment.schema\";\nimport { Datablock } from \"src/datablocks/schemas/datablock.schema\";\nimport { OrigDatablock } from \"src/origdatablocks/schemas/origdatablock.schema\";\nimport { CreateDerivedDatasetDto } from \"./create-derived-dataset.dto\";\n\nexport class UpdateDerivedDatasetDto extends CreateDerivedDatasetDto {\n  @IsOptional()\n  @Exclude()\n  readonly _id?: string;\n\n  @IsOptional()\n  @Exclude()\n  declare readonly pid?: string;\n\n  @IsOptional()\n  @Exclude()\n  readonly createdAt?: string;\n\n  @IsOptional()\n  @Exclude()\n  readonly updatedAt?: string;\n\n  @IsOptional()\n  @Exclude()\n  readonly createdBy?: string;\n\n  @IsOptional()\n  @Exclude()\n  readonly updatedBy?: string;\n\n  @IsOptional()\n  @Exclude()\n  readonly history?: string;\n\n  @IsOptional()\n  attachments?: Attachment[];\n\n  @IsOptional()\n  origdatablocks?: OrigDatablock[];\n\n  @IsOptional()\n  datablocks?: Datablock[];\n}\nexport class PartialUpdateDerivedDatasetDto extends PartialType(\n  CreateDerivedDatasetDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PartialUpdateRawDatasetDto.html":{"url":"classes/PartialUpdateRawDatasetDto.html","title":"class - PartialUpdateRawDatasetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PartialUpdateRawDatasetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/update-raw-dataset.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { Exclude } from \"class-transformer\";\nimport { IsOptional } from \"class-validator\";\nimport { Attachment } from \"src/attachments/schemas/attachment.schema\";\nimport { Datablock } from \"src/datablocks/schemas/datablock.schema\";\nimport { OrigDatablock } from \"src/origdatablocks/schemas/origdatablock.schema\";\nimport { CreateRawDatasetDto } from \"./create-raw-dataset.dto\";\n\nexport class UpdateRawDatasetDto extends CreateRawDatasetDto {\n  @IsOptional()\n  @Exclude()\n  readonly _id?: string;\n\n  @IsOptional()\n  @Exclude()\n  declare readonly pid?: string;\n\n  @IsOptional()\n  @Exclude()\n  readonly createdAt?: string;\n\n  @IsOptional()\n  @Exclude()\n  readonly updatedAt?: string;\n\n  @IsOptional()\n  @Exclude()\n  readonly createdBy?: string;\n\n  @IsOptional()\n  @Exclude()\n  readonly updatedBy?: string;\n\n  @IsOptional()\n  @Exclude()\n  readonly history?: string;\n\n  @IsOptional()\n  attachments?: Attachment[];\n\n  @IsOptional()\n  origdatablocks?: OrigDatablock[];\n\n  @IsOptional()\n  datablocks?: Datablock[];\n\n  @IsOptional()\n  investigator?: string;\n\n  @IsOptional()\n  inputDatasets?: string[];\n\n  @IsOptional()\n  usedSoftware?: string[];\n\n  @IsOptional()\n  jobParameters?: Record;\n\n  @IsOptional()\n  jobLogData?: string;\n}\n\nexport class PartialUpdateRawDatasetDto extends PartialType(\n  CreateRawDatasetDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PoliciesController.html":{"url":"controllers/PoliciesController.html","title":"controller - PoliciesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PoliciesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/policies/policies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                policies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                count\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                getFilters\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                            \n                                updateMergedFiltersForList\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                updateWhere\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                    \n                    count(where?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get('/count')\n                \n            \n\n            \n                \n                    Defined in src/policies/policies.controller.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPolicyDto: CreatePolicyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Post()\n                \n            \n\n            \n                \n                    Defined in src/policies/policies.controller.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPolicyDto\n                                    \n                                                CreatePolicyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(request: Request, headers: Record, queryFilter: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get()@ApiQuery({name: 'filter', description: 'Database filters to apply when retrieve all policies', required: false, example: '{\"order\":\"ownerGroup:desc\",\"skip\":0,\"limit\":25}'})\n                \n            \n\n            \n                \n                    Defined in src/policies/policies.controller.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    headers\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryFilter\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/policies/policies.controller.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFilters\n                        \n                    \n                \n            \n            \n                \ngetFilters(headers: Record, queryFilter: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/policies/policies.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headers\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryFilter\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/policies/policies.controller.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePolicyDto: UpdatePolicyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/policies/policies.controller.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePolicyDto\n                                    \n                                                UpdatePolicyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMergedFiltersForList\n                        \n                    \n                \n            \n            \n                \nupdateMergedFiltersForList(request: Request, mergedFilters: IFilters)\n                \n            \n\n\n            \n                \n                    Defined in src/policies/policies.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mergedFilters\n                                    \n                                                IFilters\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IFilters\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        updateWhere\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateWhere(updateWherePolicyDto: UpdateWherePolicyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@UseInterceptors(HistoryInterceptor)@HttpCode(HttpStatus.OK)@Post('/updateWhere')\n                \n            \n\n            \n                \n                    Defined in src/policies/policies.controller.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateWherePolicyDto\n                                    \n                                                UpdateWherePolicyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable @typescript-eslint/quotes */\nimport {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Headers,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  UseInterceptors,\n  Query,\n  HttpCode,\n  HttpStatus,\n  HttpException,\n  Req,\n} from \"@nestjs/common\";\nimport { Request } from \"express\";\nimport { PoliciesService } from \"./policies.service\";\nimport { CreatePolicyDto } from \"./dto/create-policy.dto\";\nimport { UpdatePolicyDto } from \"./dto/update-policy.dto\";\nimport { ApiBearerAuth, ApiQuery, ApiTags } from \"@nestjs/swagger\";\nimport { PoliciesGuard } from \"src/casl/guards/policies.guard\";\nimport { CheckPolicies } from \"src/casl/decorators/check-policies.decorator\";\nimport { AppAbility, CaslAbilityFactory } from \"src/casl/casl-ability.factory\";\nimport { Action } from \"src/casl/action.enum\";\nimport { Policy, PolicyDocument } from \"./schemas/policy.schema\";\nimport { FilterQuery } from \"mongoose\";\nimport { IPolicyFilter } from \"./interfaces/policy-filters.interface\";\nimport { HistoryInterceptor } from \"src/common/interceptors/history.interceptor\";\nimport { UpdateWherePolicyDto } from \"./dto/update-where-policy.dto\";\nimport { IFilters } from \"src/common/interfaces/common.interface\";\nimport { JWTUser } from \"src/auth/interfaces/jwt-user.interface\";\nimport { replaceLikeOperator } from \"src/common/utils\";\nimport { FilterPipe } from \"src/common/pipes/filter.pipe\";\n\n@ApiBearerAuth()\n@ApiTags(\"policies\")\n@Controller(\"policies\")\nexport class PoliciesController {\n  constructor(\n    private readonly policiesService: PoliciesService,\n    private caslAbilityFactory: CaslAbilityFactory,\n  ) {}\n  getFilters(\n    headers: Record,\n    queryFilter: { filter?: string },\n  ) {\n    // NOTE: If both headers and query filters are present return error because we don't want to support this scenario.\n    if (queryFilter?.filter && (headers?.filter || headers?.where)) {\n      throw new HttpException(\n        {\n          status: HttpStatus.BAD_REQUEST,\n          message:\n            \"Using two different types(query and headers) of filters is not supported and can result with inconsistencies\",\n        },\n        HttpStatus.BAD_REQUEST,\n      );\n    } else if (queryFilter?.filter) {\n      const jsonQueryFilters: IFilters =\n        JSON.parse(queryFilter.filter);\n\n      return jsonQueryFilters;\n    } else if (headers?.filter) {\n      const jsonHeadersFilters: IFilters =\n        JSON.parse(headers.filter);\n\n      return jsonHeadersFilters;\n    } else if (headers?.where) {\n      const jsonHeadersWhereFilters: IFilters =\n        JSON.parse(headers.where);\n\n      return jsonHeadersWhereFilters;\n    }\n\n    return {};\n  }\n\n  updateMergedFiltersForList(\n    request: Request,\n    mergedFilters: IFilters,\n  ): IFilters {\n    const user: JWTUser = request.user as JWTUser;\n\n    if (user) {\n      const ability = this.caslAbilityFactory.createForUser(user);\n      const canViewAll = ability.can(Action.ListAll, Policy);\n      const canViewTheirOwn = ability.can(Action.ListOwn, Policy);\n      if (!canViewAll && canViewTheirOwn) {\n        if (!mergedFilters.where) {\n          mergedFilters.where = {};\n        }\n        mergedFilters.where[\"$or\"] = [\n          { ownerGroup: { $in: user.currentGroups } },\n          { accessGroups: { $in: user.currentGroups } },\n          { isPublished: true },\n        ];\n      }\n    }\n\n    return mergedFilters;\n  }\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => ability.can(Action.Create, Policy))\n  @Post()\n  async create(@Body() createPolicyDto: CreatePolicyDto): Promise {\n    return this.policiesService.create(createPolicyDto);\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => ability.can(Action.Read, Policy))\n  @Get()\n  @ApiQuery({\n    name: \"filter\",\n    description: \"Database filters to apply when retrieve all policies\",\n    required: false,\n    example: '{\"order\":\"ownerGroup:desc\",\"skip\":0,\"limit\":25}',\n  })\n  async findAll(\n    @Req() request: Request,\n    @Headers() headers: Record,\n    @Query(new FilterPipe()) queryFilter: { filter?: string },\n  ): Promise {\n    const mergedFilters = replaceLikeOperator(\n      this.updateMergedFiltersForList(\n        request,\n        this.getFilters(headers, queryFilter),\n      ) as Record,\n    ) as IFilters;\n\n    return this.policiesService.findAll(mergedFilters);\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => ability.can(Action.Read, Policy))\n  @Get(\"/count\")\n  async count(@Query(\"where\") where?: string): Promise {\n    const parsedWhere: FilterQuery = JSON.parse(where ?? \"{}\");\n    return this.policiesService.count(parsedWhere);\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => ability.can(Action.Update, Policy))\n  @UseInterceptors(HistoryInterceptor)\n  @HttpCode(HttpStatus.OK)\n  @Post(\"/updateWhere\")\n  async updateWhere(@Body() updateWherePolicyDto: UpdateWherePolicyDto) {\n    return this.policiesService.updateWhere(\n      updateWherePolicyDto.ownerGroupList,\n      updateWherePolicyDto.data,\n    );\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => ability.can(Action.Read, Policy))\n  @Get(\":id\")\n  async findOne(@Param(\"id\") id: string): Promise {\n    return this.policiesService.findOne({ _id: id });\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => ability.can(Action.Update, Policy))\n  @Patch(\":id\")\n  async update(\n    @Param(\"id\") id: string,\n    @Body() updatePolicyDto: UpdatePolicyDto,\n  ): Promise {\n    return this.policiesService.update({ _id: id }, updatePolicyDto);\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => ability.can(Action.Delete, Policy))\n  @Delete(\":id\")\n  async remove(@Param(\"id\") id: string): Promise {\n    return this.policiesService.remove({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PoliciesGuard.html":{"url":"guards/PoliciesGuard.html","title":"guard - PoliciesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PoliciesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/casl/guards/policies.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                execPolicyHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, caslAbilityFactory: CaslAbilityFactory)\n                    \n                \n                        \n                            \n                                Defined in src/casl/guards/policies.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        caslAbilityFactory\n                                                  \n                                                        \n                                                                        CaslAbilityFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/casl/guards/policies.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        execPolicyHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    execPolicyHandler(handler: PolicyHandler, ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in src/casl/guards/policies.guard.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                PolicyHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { AppAbility, CaslAbilityFactory } from \"../casl-ability.factory\";\nimport { CHECK_POLICIES_KEY } from \"../decorators/check-policies.decorator\";\nimport { PolicyHandler } from \"../interfaces/policy-handler.interface\";\n\n@Injectable()\nexport class PoliciesGuard implements CanActivate {\n  constructor(\n    private reflector: Reflector,\n    private caslAbilityFactory: CaslAbilityFactory,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const policyHandlers =\n      this.reflector.get(\n        CHECK_POLICIES_KEY,\n        context.getHandler(),\n      ) || [];\n\n    const req = context.switchToHttp().getRequest();\n    const user = req.user;\n    const ability = this.caslAbilityFactory.createForUser(user);\n\n    return policyHandlers.every((handler) =>\n      this.execPolicyHandler(handler, ability),\n    );\n  }\n\n  private execPolicyHandler(handler: PolicyHandler, ability: AppAbility) {\n    //console.log('PoliciesGuard:execPolicyHandler ', handler, ability)\n    if (typeof handler === \"function\") {\n      const res = handler(ability);\n      //console.log(\"PoliciesGuard:execPolicyHandler \", res);\n      return res;\n    }\n    return handler.handle(ability);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PoliciesModule.html":{"url":"modules/PoliciesModule.html","title":"module - PoliciesModule","body":"\n                   \n\n\n\n\n    Modules\n    PoliciesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PoliciesModule\n\n\n\ncluster_PoliciesModule_imports\n\n\n\ncluster_PoliciesModule_exports\n\n\n\ncluster_PoliciesModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nPoliciesModule\n\nPoliciesModule\n\nPoliciesModule -->\n\nAuthModule->PoliciesModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPoliciesModule -->\n\nUsersModule->PoliciesModule\n\n\n\n\n\nPoliciesService \n\nPoliciesService \n\nPoliciesService  -->\n\nPoliciesModule->PoliciesService \n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nPoliciesModule -->\n\nCaslAbilityFactory->PoliciesModule\n\n\n\n\n\nPoliciesService\n\nPoliciesService\n\nPoliciesModule -->\n\nPoliciesService->PoliciesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/policies/policies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslAbilityFactory\n                        \n                        \n                            PoliciesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PoliciesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PoliciesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from \"@nestjs/common\";\nimport { PoliciesService } from \"./policies.service\";\nimport { PoliciesController } from \"./policies.controller\";\nimport { ConfigModule } from \"@nestjs/config\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { Policy, PolicySchema } from \"./schemas/policy.schema\";\nimport { AuthModule } from \"src/auth/auth.module\";\nimport { UsersModule } from \"src/users/users.module\";\nimport { DatasetsModule } from \"src/datasets/datasets.module\";\nimport { CaslAbilityFactory } from \"src/casl/casl-ability.factory\";\n\n@Module({\n  controllers: [PoliciesController],\n  imports: [\n    AuthModule,\n    ConfigModule,\n    forwardRef(() => DatasetsModule),\n    MongooseModule.forFeature([\n      {\n        name: Policy.name,\n        schema: PolicySchema,\n      },\n    ]),\n    UsersModule,\n  ],\n  providers: [PoliciesService, CaslAbilityFactory],\n  exports: [PoliciesService],\n})\nexport class PoliciesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PoliciesService.html":{"url":"injectables/PoliciesService.html","title":"injectable - PoliciesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PoliciesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/policies/policies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addDefaultPolicy\n                            \n                            \n                                    Async\n                                count\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateWhere\n                            \n                            \n                                    Async\n                                validatePermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, policyModel: Model, usersService: UsersService, request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/policies/policies.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        policyModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addDefaultPolicy\n                        \n                    \n                \n            \n            \n                \n                    \n                    addDefaultPolicy(ownerGroup: string, accessGroups: string[], ownerEmail: string, tapeRedundancy: string, policyUsername: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/policies/policies.service.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    ownerGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    accessGroups\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    ownerEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    tapeRedundancy\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    policyUsername\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                    \n                    count(where: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/policies/policies.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    where\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPolicyDto: CreatePolicyDto, policyUsername: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/policies/policies.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    createPolicyDto\n                                    \n                                                CreatePolicyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    policyUsername\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter: IPolicyFilter)\n                \n            \n\n\n            \n                \n                    Defined in src/policies/policies.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                IPolicyFilter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/policies/policies.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/policies/policies.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/policies/policies.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(filter: FilterQuery, updatePolicyDto: UpdatePolicyDto)\n                \n            \n\n\n            \n                \n                    Defined in src/policies/policies.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePolicyDto\n                                    \n                                                UpdatePolicyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateWhere\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateWhere(ownerGroupList: string, data: UpdatePolicyDto)\n                \n            \n\n\n            \n                \n                    Defined in src/policies/policies.service.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerGroupList\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdatePolicyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validatePermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePermission(ownerGroup: string, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/policies/policies.service.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ownerGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n  NotFoundException,\n  OnModuleInit,\n  UnauthorizedException,\n} from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { FilterQuery, Model } from \"mongoose\";\nimport { CreatePolicyDto } from \"./dto/create-policy.dto\";\nimport { UpdatePolicyDto } from \"./dto/update-policy.dto\";\nimport { Policy, PolicyDocument } from \"./schemas/policy.schema\";\nimport { Request } from \"express\";\nimport { JWTUser } from \"src/auth/interfaces/jwt-user.interface\";\nimport { UsersService } from \"src/users/users.service\";\nimport { IPolicyFilter } from \"./interfaces/policy-filters.interface\";\nimport { addCreatedByFields, addUpdatedByField } from \"src/common/utils\";\nimport { REQUEST } from \"@nestjs/core\";\n\n@Injectable()\nexport class PoliciesService implements OnModuleInit {\n  constructor(\n    private configService: ConfigService,\n    @InjectModel(Policy.name) private policyModel: Model,\n    private usersService: UsersService,\n    @Inject(REQUEST) private request: Request,\n  ) {}\n\n  async onModuleInit(): Promise {\n    const count = await this.policyModel\n      .countDocuments({\n        $or: [\n          {\n            _id: {\n              $regex: /^[a-f\\d]{24}$/i,\n            },\n          },\n          {\n            _id: {\n              $type: \"objectId\",\n            },\n          },\n        ],\n      })\n      .exec();\n\n    if (count !== 0) {\n      Logger.warn(\n        \"===================================================\",\n        \"PoliciesService\",\n      );\n      Logger.warn(\n        \"    Warning: your DB contains old ID format   \",\n        \"PoliciesService\",\n      );\n      Logger.warn(\n        \"    please run the script                     \",\n        \"PoliciesService\",\n      );\n      Logger.warn(\n        \"= scicat-backend-next/scripts/replaceObjectIds.sh =\",\n        \"PoliciesService\",\n      );\n      Logger.warn(\n        \"     on your mongo DB !                        \\n\",\n        \"PoliciesService\",\n      );\n      Logger.warn(\n        \"===================================================\\n\",\n        \"PoliciesService\",\n      );\n    } else {\n      Logger.log(\n        \"Mongo DB already translated to new ID format\",\n        \"PoliciesService\",\n      );\n    }\n  }\n\n  async create(\n    createPolicyDto: CreatePolicyDto,\n    policyUsername: string | null = null,\n  ): Promise {\n    const username = policyUsername\n      ? policyUsername\n      : (this.request.user as JWTUser)?.username;\n    if (!username) {\n      throw new UnauthorizedException(\"User not present in the request\");\n    }\n\n    const createdPolicy = new this.policyModel(\n      addCreatedByFields(createPolicyDto, username),\n    );\n\n    return createdPolicy.save();\n  }\n\n  async findAll(filter: IPolicyFilter): Promise {\n    const whereFilter: FilterQuery = filter.where ?? {};\n    let limit = 100;\n    let skip = 0;\n    let sort = {};\n    if (filter.limit) {\n      limit = filter.limit;\n    }\n    if (filter.skip) {\n      skip = filter.skip;\n    }\n    if (filter.order) {\n      const [field, direction] = filter.order.split(\":\");\n      sort = { [field]: direction };\n    }\n    return this.policyModel\n      .find(whereFilter)\n      .limit(limit)\n      .skip(skip)\n      .sort(sort)\n      .exec();\n  }\n\n  async count(where: FilterQuery): Promise {\n    const count = await this.policyModel.count(where).exec();\n    return { count };\n  }\n\n  async findOne(filter: FilterQuery): Promise {\n    return this.policyModel.findOne(filter).exec();\n  }\n\n  async update(\n    filter: FilterQuery,\n    updatePolicyDto: UpdatePolicyDto,\n  ): Promise {\n    const username = (this.request.user as JWTUser).username;\n    return this.policyModel\n      .findOneAndUpdate(filter, addUpdatedByField(updatePolicyDto, username), {\n        new: true,\n      })\n      .exec();\n  }\n\n  async remove(filter: FilterQuery): Promise {\n    return this.policyModel.findOneAndRemove(filter).exec();\n  }\n\n  async updateWhere(ownerGroupList: string, data: UpdatePolicyDto) {\n    if (!ownerGroupList) {\n      throw new InternalServerErrorException(\n        \"Invalid ownerGroupList parameter\",\n      );\n    }\n\n    const ownerGroups = ownerGroupList\n      .split(\",\")\n      // eslint-disable-next-line @typescript-eslint/quotes\n      .map((ownerGroup) => ownerGroup.trim().replace(new RegExp('\"', \"g\"), \"\"));\n    if (!ownerGroups) {\n      throw new InternalServerErrorException(\n        \"Invalid ownerGroupList parameter\",\n      );\n    }\n\n    const userId = (this.request.user as JWTUser)._id;\n    const userIdentity = await this.usersService.findByIdUserIdentity(userId);\n    const user = await this.usersService.findById(userId);\n    if (!user) {\n      throw new NotFoundException();\n    }\n\n    await Promise.all(\n      ownerGroups.map(async (ownerGroup) => {\n        const email = userIdentity ? userIdentity.profile.email : user.email;\n\n        try {\n          await this.addDefaultPolicy(ownerGroup, [], email, \"low\");\n        } catch (error) {\n          throw new InternalServerErrorException();\n        }\n\n        if (!userIdentity) {\n          try {\n            // allow all functional users\n            return await this.policyModel\n              .updateOne({ ownerGroup }, data, { new: true })\n              .exec();\n          } catch (error) {\n            throw new InternalServerErrorException();\n          }\n        } else {\n          const hasPermission = await this.validatePermission(\n            ownerGroup,\n            userIdentity.profile.email,\n          );\n          if (!hasPermission) {\n            Logger.error(\"Validation failed\", \"PoliciesService.updateWhere\");\n            throw new UnauthorizedException(\n              \"User not authorised for action based on policy\",\n            );\n          }\n\n          try {\n            return await this.policyModel\n              .updateOne({ ownerGroup }, data, { new: true })\n              .exec();\n          } catch (error) {\n            throw new InternalServerErrorException();\n          }\n        }\n      }),\n    );\n    return { message: \"successful policy update\" };\n  }\n\n  async addDefaultPolicy(\n    ownerGroup: string,\n    accessGroups: string[],\n    ownerEmail: string,\n    tapeRedundancy: string,\n    policyUsername: string | null = null,\n  ) {\n    const policy = await this.policyModel.findOne({ ownerGroup }).exec();\n\n    if (policy) {\n      return;\n    }\n\n    Logger.log(\"Adding default policy\", \"PoliciesService.addDefaultPolicy\");\n\n    const defaultManager = this.configService.get(\"defaultManager\");\n    const defaultPolicy: CreatePolicyDto = {\n      ownerGroup,\n      accessGroups,\n      manager: ownerEmail\n        ? ownerEmail.split(\",\")\n        : defaultManager\n        ? defaultManager\n        : [\"\"],\n      tapeRedundancy: tapeRedundancy ? tapeRedundancy : \"low\",\n      autoArchive: false,\n      autoArchiveDelay: 7,\n      archiveEmailNotification: true,\n      retrieveEmailNotification: true,\n      archiveEmailsToBeNotified: [],\n      retrieveEmailsToBeNotified: [],\n      embargoPeriod: 3,\n    };\n\n    try {\n      await this.create(defaultPolicy, policyUsername);\n    } catch (error) {\n      throw new InternalServerErrorException(\n        error,\n        \"Error when creating default policy\",\n      );\n    }\n  }\n\n  async validatePermission(\n    ownerGroup: string,\n    email: string,\n  ): Promise {\n    const policy = await this.policyModel.findOne({ ownerGroup }).exec();\n\n    if (!policy) {\n      return false;\n    }\n\n    if (policy.manager.includes(email)) {\n      return true;\n    }\n\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Policy.html":{"url":"classes/Policy.html","title":"class - Policy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Policy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/policies/schemas/policy.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OwnableClass\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                archiveEmailNotification\n                            \n                            \n                                    \n                                    \n                                archiveEmailsToBeNotified\n                            \n                            \n                                    \n                                    \n                                autoArchive\n                            \n                            \n                                    \n                                    \n                                autoArchiveDelay\n                            \n                            \n                                    \n                                    \n                                embargoPeriod\n                            \n                            \n                                    \n                                    \n                                manager\n                            \n                            \n                                    \n                                    \n                                retrieveEmailNotification\n                            \n                            \n                                    \n                                    \n                                retrieveEmailsToBeNotified\n                            \n                            \n                                    \n                                    \n                                tapeRedundancy\n                            \n                            \n                                    \n                                    \n                                accessGroups\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                instrumentGroup\n                            \n                            \n                                    \n                                    \n                                ownerGroup\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop({type: String, default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/schemas/policy.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        archiveEmailNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Flag is true when an email notification should be sent to archiveEmailsToBeNotified upon an archive job creation'})@Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/schemas/policy.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        archiveEmailsToBeNotified\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of additional email addresses that should be notified up an archive job creation'})@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/schemas/policy.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        autoArchive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Flag to indicate that a dataset should be automatically archived after ingest. If false then archive delay is ignored'})@Prop({type: Boolean, default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/schemas/policy.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        autoArchiveDelay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Number of days after dataset creation that (remaining) datasets are archived automatically'})@Prop({type: Number, default: 7})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/schemas/policy.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        embargoPeriod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Number of years after dataset creation before the dataset becomes public'})@Prop({type: Number, default: 3})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/schemas/policy.schema.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        manager\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Defines the emails of users that can modify the policy parameters'})@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/schemas/policy.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        retrieveEmailNotification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Flag is true when an email notification should be sent to retrieveEmailsToBeNotified upon a retrieval job creation'})@Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/schemas/policy.schema.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        retrieveEmailsToBeNotified\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of additional email addresses that should be notified up a retrieval job creation'})@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/schemas/policy.schema.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tapeRedundancy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Defines the level of redundancy in storage to minimize loss of data. Allowed values are low, medium, high. Low could e.g. mean one tape copy only, medium could mean two tape copies and high two geo-redundant tape copies'})@Prop({type: String, default: 'low'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/schemas/policy.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'Optional additional groups which have read access to the data. Users which are members in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users.'})@Prop({type: undefined, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        instrumentGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Optional additional groups which have read and write access to the data. Users which are members in one of the groups listed here are allowed to access this data.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ownerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151'})@Prop({type: String, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was created. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:40\n\n                        \n                    \n\n            \n                \n                    NOTE: createdAt and updatedAt properties are handled automatically by mongoose when timestamps flag is set to true on a schema(https://mongoosejs.com/docs/guide.html#timestamps).\nWe still need to keep the fields available here because of the response model and swagger documentation. They are not required so we don't need to provide them manually on create/update.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who created this record. This property is added and maintained by the system.'})@Prop({type: String, index: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was updated last. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who updated this record last. This property is added and maintained by the system.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:26\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Document } from \"mongoose\";\nimport { OwnableClass } from \"src/common/schemas/ownable.schema\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport type PolicyDocument = Policy & Document;\n\n@Schema({\n  collection: \"Policy\",\n  toJSON: {\n    getters: true,\n  },\n  timestamps: true,\n})\nexport class Policy extends OwnableClass {\n  @ApiProperty()\n  @Prop({ type: String, default: () => uuidv4() })\n  _id: string;\n\n  @ApiProperty({\n    description:\n      \"Defines the emails of users that can modify the policy parameters\",\n  })\n  @Prop({ type: [String] })\n  manager: string[];\n\n  @ApiProperty({\n    description:\n      \"Defines the level of redundancy in storage to minimize loss of data. Allowed values are low, medium, high. Low could e.g. mean one tape copy only, medium could mean two tape copies and high two geo-redundant tape copies\",\n  })\n  @Prop({ type: String, default: \"low\" })\n  tapeRedundancy: string;\n\n  @ApiProperty({\n    description:\n      \"Flag to indicate that a dataset should be automatically archived after ingest. If false then archive delay is ignored\",\n  })\n  @Prop({ type: Boolean, default: true })\n  autoArchive: boolean;\n\n  @ApiProperty({\n    description:\n      \"Number of days after dataset creation that (remaining) datasets are archived automatically\",\n  })\n  @Prop({ type: Number, default: 7 })\n  autoArchiveDelay: number;\n\n  @ApiProperty({\n    description:\n      \"Flag is true when an email notification should be sent to archiveEmailsToBeNotified upon an archive job creation\",\n  })\n  @Prop({ type: Boolean, default: false })\n  archiveEmailNotification: boolean;\n\n  @ApiProperty({\n    description:\n      \"Array of additional email addresses that should be notified up an archive job creation\",\n  })\n  @Prop({ type: [String] })\n  archiveEmailsToBeNotified: string[];\n\n  @ApiProperty({\n    description:\n      \"Flag is true when an email notification should be sent to retrieveEmailsToBeNotified upon a retrieval job creation\",\n  })\n  @Prop({ type: Boolean, default: false })\n  retrieveEmailNotification: boolean;\n\n  @ApiProperty({\n    description:\n      \"Array of additional email addresses that should be notified up a retrieval job creation\",\n  })\n  @Prop({ type: [String] })\n  retrieveEmailsToBeNotified: string[];\n\n  @ApiProperty({\n    description:\n      \"Number of years after dataset creation before the dataset becomes public\",\n  })\n  @Prop({ type: Number, default: 3 })\n  embargoPeriod: number;\n}\n\nexport const PolicySchema = SchemaFactory.createForClass(Policy);\n\nPolicySchema.index({ \"$**\": \"text\" });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProposalClass.html":{"url":"classes/ProposalClass.html","title":"class - ProposalClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProposalClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/proposals/schemas/proposal.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OwnableClass\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                abstract\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                endTime\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstname\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastname\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                MeasurementPeriodList\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                pi_email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                pi_firstname\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                pi_lastname\n                            \n                            \n                                    \n                                    \n                                proposalId\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                startTime\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                accessGroups\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                instrumentGroup\n                            \n                            \n                                    \n                                    \n                                ownerGroup\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/schemas/proposal.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        abstract\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'The proposal abstract.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/schemas/proposal.schema.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Email of main proposer.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/schemas/proposal.schema.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        endTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, required: false, description: 'The date when data collection finishes.'})@Prop({type: Date, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/schemas/proposal.schema.ts:150\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'First name of main proposer.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/schemas/proposal.schema.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Last name of main proposer.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/schemas/proposal.schema.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        MeasurementPeriodList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MeasurementPeriodClass[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: MeasurementPeriodClass, isArray: true, required: false, description: 'Embedded information used inside proposals to define which type of experiment has to be pursued, where (at which instrument) and when.'})@Prop({type: undefined, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/schemas/proposal.schema.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        pi_email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Email of principal investigator.'})@Prop({type: String, required: false, index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/schemas/proposal.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        pi_firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'First name of principal investigator.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/schemas/proposal.schema.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        pi_lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Last name of principal investigator.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/schemas/proposal.schema.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        proposalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Globally unique identifier of a proposal, eg. PID-prefix/internal-proposal-number. PID prefix is auto prepended.'})@Prop({type: String, unique: true, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/schemas/proposal.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        startTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, required: false, description: 'The date when the data collection starts.'})@Prop({type: Date, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/schemas/proposal.schema.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'The title of the proposal.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/schemas/proposal.schema.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'Optional additional groups which have read access to the data. Users which are members in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users.'})@Prop({type: undefined, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        instrumentGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Optional additional groups which have read and write access to the data. Users which are members in one of the groups listed here are allowed to access this data.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ownerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151'})@Prop({type: String, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was created. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:40\n\n                        \n                    \n\n            \n                \n                    NOTE: createdAt and updatedAt properties are handled automatically by mongoose when timestamps flag is set to true on a schema(https://mongoosejs.com/docs/guide.html#timestamps).\nWe still need to keep the fields available here because of the response model and swagger documentation. They are not required so we don't need to provide them manually on create/update.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who created this record. This property is added and maintained by the system.'})@Prop({type: String, index: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was updated last. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who updated this record last. This property is added and maintained by the system.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:26\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty, getSchemaPath } from \"@nestjs/swagger\";\nimport { Document } from \"mongoose\";\nimport {\n  Attachment,\n  AttachmentSchema,\n} from \"src/attachments/schemas/attachment.schema\";\nimport { OwnableClass } from \"src/common/schemas/ownable.schema\";\nimport {\n  MeasurementPeriodClass,\n  MeasurementPeriodSchema,\n} from \"./measurement-period.schema\";\n\nexport type ProposalDocument = ProposalClass & Document;\n@Schema({\n  collection: \"Proposal\",\n  toJSON: {\n    getters: true,\n  },\n  timestamps: true,\n})\nexport class ProposalClass extends OwnableClass {\n  @ApiProperty({\n    type: String,\n    required: true,\n    description:\n      \"Globally unique identifier of a proposal, eg. PID-prefix/internal-proposal-number. PID prefix is auto prepended.\",\n  })\n  @Prop({\n    type: String,\n    unique: true,\n    required: true,\n  })\n  proposalId: string;\n\n  @Prop({\n    type: String,\n  })\n  _id: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"Email of principal investigator.\",\n  })\n  @Prop({\n    type: String,\n    required: false,\n    index: true,\n  })\n  pi_email?: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"First name of principal investigator.\",\n  })\n  @Prop({\n    type: String,\n    required: false,\n  })\n  pi_firstname?: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"Last name of principal investigator.\",\n  })\n  @Prop({\n    type: String,\n    required: false,\n  })\n  pi_lastname?: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"Email of main proposer.\",\n  })\n  @Prop({\n    type: String,\n    required: true,\n  })\n  email: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"First name of main proposer.\",\n  })\n  @Prop({\n    type: String,\n    required: false,\n  })\n  firstname?: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"Last name of main proposer.\",\n  })\n  @Prop({\n    type: String,\n    required: false,\n  })\n  lastname?: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"The title of the proposal.\",\n  })\n  @Prop({\n    type: String,\n    required: true,\n  })\n  title: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"The proposal abstract.\",\n  })\n  @Prop({\n    type: String,\n    required: false,\n  })\n  abstract?: string;\n\n  @ApiProperty({\n    type: Date,\n    required: false,\n    description: \"The date when the data collection starts.\",\n  })\n  @Prop({\n    type: Date,\n    required: false,\n  })\n  startTime?: Date;\n\n  @ApiProperty({\n    type: Date,\n    required: false,\n    description: \"The date when data collection finishes.\",\n  })\n  @Prop({\n    type: Date,\n    required: false,\n  })\n  endTime?: Date;\n\n  @ApiProperty({\n    type: MeasurementPeriodClass,\n    isArray: true,\n    required: false,\n    description:\n      \"Embedded information used inside proposals to define which type of experiment has to be pursued, where (at which instrument) and when.\",\n  })\n  @Prop({\n    type: [MeasurementPeriodSchema],\n    required: false,\n  })\n  MeasurementPeriodList?: MeasurementPeriodClass[];\n}\n\nexport const ProposalSchema = SchemaFactory.createForClass(ProposalClass);\n\nProposalSchema.index({ \"$**\": \"text\" });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProposalsModule.html":{"url":"modules/ProposalsModule.html","title":"module - ProposalsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProposalsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProposalsModule\n\n\n\ncluster_ProposalsModule_imports\n\n\n\ncluster_ProposalsModule_exports\n\n\n\ncluster_ProposalsModule_providers\n\n\n\n\nAttachmentsModule\n\nAttachmentsModule\n\n\n\nProposalsModule\n\nProposalsModule\n\nProposalsModule -->\n\nAttachmentsModule->ProposalsModule\n\n\n\n\n\nProposalsService \n\nProposalsService \n\nProposalsService  -->\n\nProposalsModule->ProposalsService \n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nProposalsModule -->\n\nCaslAbilityFactory->ProposalsModule\n\n\n\n\n\nProposalsService\n\nProposalsService\n\nProposalsModule -->\n\nProposalsService->ProposalsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/proposals/proposals.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslAbilityFactory\n                        \n                        \n                            ProposalsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProposalsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AttachmentsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProposalsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from \"@nestjs/common\";\nimport { ProposalsService } from \"./proposals.service\";\nimport { ProposalsController } from \"./proposals.controller\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { ProposalClass, ProposalSchema } from \"./schemas/proposal.schema\";\nimport { CaslAbilityFactory } from \"src/casl/casl-ability.factory\";\nimport { AttachmentsModule } from \"src/attachments/attachments.module\";\nimport { DatasetsModule } from \"src/datasets/datasets.module\";\n\n@Module({\n  imports: [\n    AttachmentsModule,\n    forwardRef(() => DatasetsModule),\n    MongooseModule.forFeatureAsync([\n      {\n        name: ProposalClass.name,\n        useFactory: () => {\n          const schema = ProposalSchema;\n\n          schema.pre(\"save\", function (next) {\n            // if _id is empty or different than proposalId,\n            // set _id to proposalId\n            if (!this._id) {\n              this._id = this.proposalId;\n            }\n            next();\n          });\n          return schema;\n        },\n      },\n    ]),\n  ],\n  exports: [ProposalsService],\n  controllers: [ProposalsController],\n  providers: [ProposalsService, CaslAbilityFactory],\n})\nexport class ProposalsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProposalsService.html":{"url":"injectables/ProposalsService.html","title":"injectable - ProposalsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProposalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/proposals/proposals.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                fullfacet\n                            \n                            \n                                    Async\n                                fullquery\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(proposalModel: Model, request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/proposals/proposals.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        proposalModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createProposalDto: CreateProposalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/proposals/proposals.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProposalDto\n                                    \n                                                CreateProposalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter: IFilters)\n                \n            \n\n\n            \n                \n                    Defined in src/proposals/proposals.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                IFilters\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/proposals/proposals.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullfacet\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullfacet(filters: IFacets)\n                \n            \n\n\n            \n                \n                    Defined in src/proposals/proposals.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            IFacets\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullquery\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullquery(filter: IFilters)\n                \n            \n\n\n            \n                \n                    Defined in src/proposals/proposals.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                IFilters\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/proposals/proposals.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(filter: FilterQuery, updateProposalDto: UpdateProposalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/proposals/proposals.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProposalDto\n                                    \n                                                UpdateProposalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Scope } from \"@nestjs/common\";\nimport { REQUEST } from \"@nestjs/core\";\nimport { Request } from \"express\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { FilterQuery, Model, PipelineStage, QueryOptions } from \"mongoose\";\nimport { IFacets, IFilters } from \"src/common/interfaces/common.interface\";\nimport {\n  createFullfacetPipeline,\n  createFullqueryFilter,\n  parseLimitFilters,\n  addCreatedByFields,\n  addUpdatedByField,\n} from \"src/common/utils\";\nimport { CreateProposalDto } from \"./dto/create-proposal.dto\";\nimport { UpdateProposalDto } from \"./dto/update-proposal.dto\";\nimport { IProposalFields } from \"./interfaces/proposal-filters.interface\";\nimport { ProposalClass, ProposalDocument } from \"./schemas/proposal.schema\";\nimport { JWTUser } from \"src/auth/interfaces/jwt-user.interface\";\n\n@Injectable({ scope: Scope.REQUEST })\nexport class ProposalsService {\n  constructor(\n    @InjectModel(ProposalClass.name)\n    private proposalModel: Model,\n    @Inject(REQUEST) private request: Request,\n  ) {}\n\n  async create(createProposalDto: CreateProposalDto): Promise {\n    const username = (this.request.user as JWTUser).username;\n    const createdProposal = new this.proposalModel(\n      addCreatedByFields(createProposalDto, username),\n    );\n    return createdProposal.save();\n  }\n\n  async findAll(\n    filter: IFilters,\n  ): Promise {\n    const whereFilter: FilterQuery = filter.where ?? {};\n    const { limit, skip, sort } = parseLimitFilters(filter.limits);\n\n    return this.proposalModel\n      .find(whereFilter)\n      .limit(limit)\n      .skip(skip)\n      .sort(sort)\n      .exec();\n  }\n\n  async fullquery(\n    filter: IFilters,\n  ): Promise {\n    const filterQuery: FilterQuery =\n      createFullqueryFilter(\n        this.proposalModel,\n        \"proposalId\",\n        filter.fields,\n      );\n    const modifiers: QueryOptions = parseLimitFilters(filter.limits);\n\n    return this.proposalModel.find(filterQuery, null, modifiers).exec();\n  }\n\n  async fullfacet(\n    filters: IFacets,\n  ): Promise[]> {\n    const fields = filters.fields ?? {};\n    const facets = filters.facets ?? [];\n\n    const pipeline: PipelineStage[] = createFullfacetPipeline(this.proposalModel, \"proposalId\", fields, facets);\n\n    return await this.proposalModel.aggregate(pipeline).exec();\n  }\n\n  async findOne(\n    filter: FilterQuery,\n  ): Promise {\n    return this.proposalModel.findOne(filter).exec();\n  }\n\n  async update(\n    filter: FilterQuery,\n    updateProposalDto: UpdateProposalDto,\n  ): Promise {\n    const username = (this.request.user as JWTUser).username;\n\n    return this.proposalModel\n      .findOneAndUpdate(\n        filter,\n        addUpdatedByField(updateProposalDto, username),\n        {\n          new: true,\n        },\n      )\n      .exec();\n  }\n\n  async remove(filter: FilterQuery): Promise {\n    return this.proposalModel.findOneAndRemove(filter).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PublishedData.html":{"url":"classes/PublishedData.html","title":"class - PublishedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PublishedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/published-data/schemas/published-data.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                abstract\n                            \n                            \n                                    \n                                    \n                                affiliation\n                            \n                            \n                                    \n                                    \n                                authors\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                creator\n                            \n                            \n                                    \n                                    \n                                dataDescription\n                            \n                            \n                                    \n                                    \n                                doi\n                            \n                            \n                                    \n                                    \n                                downloadLink\n                            \n                            \n                                    \n                                    \n                                numberOfFiles\n                            \n                            \n                                    \n                                    \n                                pidArray\n                            \n                            \n                                    \n                                    \n                                publicationYear\n                            \n                            \n                                    \n                                    \n                                publisher\n                            \n                            \n                                    \n                                    \n                                registeredTime\n                            \n                            \n                                    \n                                    \n                                relatedPublications\n                            \n                            \n                                    \n                                    \n                                resourceType\n                            \n                            \n                                    \n                                    \n                                scicatUser\n                            \n                            \n                                    \n                                    \n                                sizeOfArchive\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                thumbnail\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        abstract\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Abstract text for published datasets'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        affiliation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Creator Affiliation'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        authors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: false, description: 'List of Names of authors of the to be published data'})@Prop({type: undefined, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date when the published data was created. This property is added and maintained by the system'})@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:202\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: true, description: 'Creator of dataset/dataset collection'})@Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dataDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Link to description of how to re-use data'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        doi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Digital Object Identifier'})@Prop({type: String, unique: true, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        downloadLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'URL pointing to page from which data can be downloaded'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:194\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        numberOfFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: false, description: 'Number of files'})@Prop({type: Number, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        pidArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: true, description: 'Array of one or more PIDS which make up the published data'})@Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        publicationYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: true, description: 'Year of publication '})@Prop({type: Number, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Dataset publisher'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        registeredTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Time when doi is successfully registered'})@Prop({type: Date, index: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:152\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        relatedPublications\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: false, description: 'List of URLs pointing to related publications like DOI URLS of journal articles'})@Prop({type: undefined, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:186\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        resourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'e.g. raw/ derived'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        scicatUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'The username of the user that clicks the publish button in the client'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sizeOfArchive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: false, description: 'Size of archive'})@Prop({type: Number, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indication of position in publication workflow e.g. doiRegistered'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:160\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Small, less than 16 MB base 64 image preview of dataset'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:177\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Title'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date when the published data was last updated. This property is added and maintained by the system'})@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:210\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Full URL to the landing page for this DOI'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/published-data/schemas/published-data.schema.ts:89\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Document } from \"mongoose\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport type PublishedDataDocument = PublishedData & Document;\n\n@Schema({\n  collection: \"PublishedData\",\n  toJSON: {\n    getters: true,\n  },\n  timestamps: true,\n})\nexport class PublishedData {\n  @Prop({\n    type: String,\n    default: function genUUID(): string {\n      return (\n        (process.env.DOI_PREFIX\n          ? process.env.DOI_PREFIX.replace(/\\/$/, \"\")\n          : \"undefined\") +\n        \"/\" +\n        uuidv4()\n      );\n    },\n  })\n  _id: string;\n\n  @ApiProperty({ type: String, description: \"Digital Object Identifier\" })\n  @Prop({\n    type: String,\n    unique: true,\n    required: true,\n    default: function genUUID(): string {\n      return (\n        (process.env.DOI_PREFIX\n          ? process.env.DOI_PREFIX.replace(/\\/$/, \"\")\n          : \"undefined\") +\n        \"/\" +\n        uuidv4()\n      );\n    },\n  })\n  doi: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"Creator Affiliation\",\n  })\n  @Prop({ type: String, required: false })\n  affiliation: string;\n\n  @ApiProperty({\n    type: [String],\n    required: true,\n    description: \"Creator of dataset/dataset collection\",\n  })\n  @Prop({ type: [String], required: true })\n  creator: string[];\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"Dataset publisher\",\n  })\n  @Prop({ type: String, required: true })\n  publisher: string;\n\n  @ApiProperty({\n    type: Number,\n    required: true,\n    description: \"Year of publication \",\n  })\n  @Prop({ type: Number, required: true })\n  publicationYear: number;\n\n  @ApiProperty({ type: String, required: true, description: \"Title\" })\n  @Prop({ type: String, required: true })\n  title: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"Full URL to the landing page for this DOI\",\n  })\n  @Prop({ type: String, required: false })\n  url: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"Abstract text for published datasets\",\n  })\n  @Prop({ type: String, required: true })\n  abstract: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"Link to description of how to re-use data\",\n  })\n  @Prop({ type: String, required: true })\n  dataDescription: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"e.g. raw/ derived\",\n  })\n  @Prop({ type: String, required: true })\n  resourceType: string;\n\n  @ApiProperty({\n    type: Number,\n    required: false,\n    description: \"Number of files\",\n  })\n  @Prop({ type: Number, required: false })\n  numberOfFiles: number;\n\n  @ApiProperty({\n    type: Number,\n    required: false,\n    description: \"Size of archive\",\n  })\n  @Prop({ type: Number, required: false })\n  sizeOfArchive: number;\n\n  @ApiProperty({\n    type: [String],\n    required: true,\n    description: \"Array of one or more PIDS which make up the published data\",\n  })\n  @Prop({ type: [String], required: true })\n  pidArray: string[];\n\n  @ApiProperty({\n    type: [String],\n    required: false,\n    description: \"List of Names of authors of the to be published data\",\n  })\n  @Prop({ type: [String], required: false })\n  authors: string[];\n\n  @ApiProperty({\n    type: Date,\n    description: \"Time when doi is successfully registered\",\n  })\n  @Prop({ type: Date, index: true })\n  registeredTime: Date;\n\n  @ApiProperty({\n    type: String,\n    description:\n      \"Indication of position in publication workflow e.g. doiRegistered\",\n  })\n  @Prop({ type: String, required: false })\n  status: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description:\n      \"The username of the user that clicks the publish button in the client\",\n  })\n  @Prop({ type: String, required: false })\n  scicatUser: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"Small, less than 16 MB base 64 image preview of dataset\",\n  })\n  @Prop({ type: String, required: false })\n  thumbnail: string;\n\n  @ApiProperty({\n    type: [String],\n    required: false,\n    description:\n      \"List of URLs pointing to related publications like DOI URLS of journal articles\",\n  })\n  @Prop({ type: [String], required: false })\n  relatedPublications: string[];\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"URL pointing to page from which data can be downloaded\",\n  })\n  @Prop({ type: String, required: false })\n  downloadLink: string;\n\n  @ApiProperty({\n    type: Date,\n    description:\n      \"Date when the published data was created. This property is added and maintained by the system\",\n  })\n  @Prop({ type: Date })\n  createdAt: Date;\n\n  @ApiProperty({\n    type: Date,\n    description:\n      \"Date when the published data was last updated. This property is added and maintained by the system\",\n  })\n  @Prop({ type: Date })\n  updatedAt: Date;\n}\n\nexport const PublishedDataSchema = SchemaFactory.createForClass(PublishedData);\n\nPublishedDataSchema.index({ \"$**\": \"text\" });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PublishedDataController.html":{"url":"controllers/PublishedDataController.html","title":"controller - PublishedDataController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PublishedDataController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/published-data/published-data.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                publisheddata\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                count\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                formPopulate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                resync\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                    \n                    count(filter?: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AllowAny()@UseInterceptors(RegisteredInterceptor)@Get('/count')@ApiQuery({name: 'filter', description: 'Database filters to apply when retrieve published data count', required: false})\n                \n            \n\n            \n                \n                    Defined in src/published-data/published-data.controller.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPublishedDataDto: CreatePublishedDataDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Post()\n                \n            \n\n            \n                \n                    Defined in src/published-data/published-data.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPublishedDataDto\n                                    \n                                                CreatePublishedDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter?: string, limits?: string, fields?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AllowAny()@UseInterceptors(RegisteredInterceptor)@Get()@ApiQuery({name: 'filter', description: 'Database filters to apply when retrieve all published data', required: false})@ApiQuery({name: 'limits', description: 'Database limits to apply when retrieve all published data', required: false})\n                \n            \n\n            \n                \n                    Defined in src/published-data/published-data.controller.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    limits\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    fields\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AllowAny()@ApiOperation({summary: 'It returns the published data requested.', description: 'It returns the published data requested through the id specified.'})@ApiParam({name: 'id', description: 'Id of the published data to return', type: String})@ApiResponse({status: undefined, type: PublishedData, isArray: false, description: 'Return published data with id specified'})@Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/published-data/published-data.controller.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        formPopulate\n                        \n                    \n                \n            \n            \n                \n                    \n                    formPopulate(pid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get('/formpopulate')@ApiQuery({name: 'pid', description: 'Dataset pid used to fetch form data.', required: true})\n                \n            \n\n            \n                \n                    Defined in src/published-data/published-data.controller.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Post('/:id/register')\n                \n            \n\n            \n                \n                    Defined in src/published-data/published-data.controller.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/published-data/published-data.controller.ts:246\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        resync\n                        \n                    \n                \n            \n            \n                \n                    \n                    resync(id: string, data: UpdatePublishedDataDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Post('/:id/resync')\n                \n            \n\n            \n                \n                    Defined in src/published-data/published-data.controller.ts:437\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                UpdatePublishedDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePublishedDataDto: UpdatePublishedDataDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Patch('/:id')\n                \n            \n\n            \n                \n                    Defined in src/published-data/published-data.controller.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePublishedDataDto\n                                    \n                                                UpdatePublishedDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Query,\n  UseInterceptors,\n  HttpException,\n  HttpStatus,\n  NotFoundException,\n} from \"@nestjs/common\";\nimport { PublishedDataService } from \"./published-data.service\";\nimport { CreatePublishedDataDto } from \"./dto/create-published-data.dto\";\nimport { UpdatePublishedDataDto } from \"./dto/update-published-data.dto\";\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiParam,\n  ApiQuery,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { PoliciesGuard } from \"src/casl/guards/policies.guard\";\nimport { CheckPolicies } from \"src/casl/decorators/check-policies.decorator\";\nimport { AppAbility } from \"src/casl/casl-ability.factory\";\nimport { Action } from \"src/casl/action.enum\";\nimport {\n  PublishedData,\n  PublishedDataDocument,\n} from \"./schemas/published-data.schema\";\nimport {\n  ICount,\n  IFormPopulateData,\n  IPublishedDataFilters,\n  IRegister,\n} from \"./interfaces/published-data.interface\";\nimport { AllowAny } from \"src/auth/decorators/allow-any.decorator\";\nimport { RegisteredInterceptor } from \"./interceptors/registered.interceptor\";\nimport { FilterQuery } from \"mongoose\";\nimport { DatasetsService } from \"src/datasets/datasets.service\";\nimport { ProposalsService } from \"src/proposals/proposals.service\";\nimport { AttachmentsService } from \"src/attachments/attachments.service\";\nimport { existsSync, readFileSync } from \"fs\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { firstValueFrom } from \"rxjs\";\nimport { handleAxiosRequestError } from \"src/common/utils\";\nimport { DatasetClass } from \"src/datasets/schemas/dataset.schema\";\n\n@ApiBearerAuth()\n@ApiTags(\"published data\")\n@Controller(\"publisheddata\")\nexport class PublishedDataController {\n  private doiConfigPath = \"./src/config/doiconfig.local.json\";\n\n  constructor(\n    private readonly attachmentsService: AttachmentsService,\n    private readonly configService: ConfigService,\n    private readonly datasetsService: DatasetsService,\n    private readonly httpService: HttpService,\n    private readonly proposalsService: ProposalsService,\n    private readonly publishedDataService: PublishedDataService,\n  ) {}\n\n  // POST /publisheddata\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.Create, PublishedData),\n  )\n  @Post()\n  async create(\n    @Body() createPublishedDataDto: CreatePublishedDataDto,\n  ): Promise {\n    return this.publishedDataService.create({\n      ...createPublishedDataDto,\n      status: \"pending_registration\",\n    });\n  }\n\n  // GET /publisheddata\n  @AllowAny()\n  @UseInterceptors(RegisteredInterceptor)\n  @Get()\n  @ApiQuery({\n    name: \"filter\",\n    description: \"Database filters to apply when retrieve all published data\",\n    required: false,\n  })\n  @ApiQuery({\n    name: \"limits\",\n    description: \"Database limits to apply when retrieve all published data\",\n    required: false,\n  })\n  async findAll(\n    @Query(\"filter\") filter?: string,\n    @Query(\"limits\") limits?: string,\n    @Query(\"fields\") fields?: string,\n  ): Promise {\n    const publishedDataFilters: IPublishedDataFilters = JSON.parse(\n      filter ?? \"{}\",\n    );\n    const publishedDataLimits: {\n      skip: number;\n      limit: number;\n      order: string;\n    } = JSON.parse(limits ?? \"{}\");\n    const publishedDataFields = JSON.parse(fields ?? \"{}\");\n\n    if (!publishedDataFilters.limits) {\n      publishedDataFilters.limits = publishedDataLimits;\n    }\n    if (!publishedDataFilters.fields) {\n      publishedDataFilters.fields = publishedDataFields;\n    }\n\n    return this.publishedDataService.findAll(publishedDataFilters);\n  }\n\n  // GET /publisheddata/count\n  @AllowAny()\n  @UseInterceptors(RegisteredInterceptor)\n  @Get(\"/count\")\n  @ApiQuery({\n    name: \"filter\",\n    description: \"Database filters to apply when retrieve published data count\",\n    required: false,\n  })\n  async count(\n    @Query() filter?: { filter: string; fields: string },\n  ): Promise {\n    const jsonFilters: IPublishedDataFilters =\n      filter && filter.filter ? JSON.parse(filter.filter) : {};\n    const jsonFields: FilterQuery =\n      filter && filter.fields ? JSON.parse(filter.fields) : {};\n    const whereFilters: FilterQuery =\n      jsonFilters && jsonFilters.where\n        ? {\n            ...jsonFilters.where,\n            ...jsonFields,\n          }\n        : {\n            ...jsonFields,\n          };\n    const publishedDataFilters: IPublishedDataFilters = {\n      where: whereFilters,\n    };\n    if (jsonFilters && jsonFilters.limits) {\n      publishedDataFilters.limits = jsonFilters.limits;\n    }\n    return this.publishedDataService.count(publishedDataFilters);\n  }\n\n  // GET /publisheddata/formpopulate\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.Read, PublishedData),\n  )\n  @Get(\"/formpopulate\")\n  @ApiQuery({\n    name: \"pid\",\n    description: \"Dataset pid used to fetch form data.\",\n    required: true,\n  })\n  async formPopulate(@Query(\"pid\") pid: string) {\n    const formData: IFormPopulateData = {};\n    const dataset = await this.datasetsService.findOne({ where: { pid } });\n\n    let proposalId;\n    if (dataset) {\n      formData.resourceType = dataset.type;\n      formData.description = dataset.description;\n      proposalId = (dataset as unknown as DatasetClass).proposalId;\n    }\n\n    let proposal;\n    if (proposalId) {\n      proposal = await this.proposalsService.findOne({ proposalId });\n    }\n\n    if (proposal) {\n      formData.title = proposal.title;\n      formData.abstract = proposal.abstract;\n    }\n\n    const attachment = await this.attachmentsService.findOne({\n      datasetId: pid,\n    });\n\n    if (attachment) {\n      formData.thumbnail = attachment.thumbnail;\n    }\n\n    return formData;\n  }\n\n  // GET /publisheddata/:id\n  @AllowAny()\n  @ApiOperation({\n    summary: \"It returns the published data requested.\",\n    description:\n      \"It returns the published data requested through the id specified.\",\n  })\n  @ApiParam({\n    name: \"id\",\n    description: \"Id of the published data to return\",\n    type: String,\n  })\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: PublishedData,\n    isArray: false,\n    description: \"Return published data with id specified\",\n  })\n  @Get(\"/:id\")\n  async findOne(@Param(\"id\") id: string): Promise {\n    return this.publishedDataService.findOne({ doi: id });\n  }\n\n  // PATCH /publisheddata/:id\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.Update, PublishedData),\n  )\n  @Patch(\"/:id\")\n  async update(\n    @Param(\"id\") id: string,\n    @Body() updatePublishedDataDto: UpdatePublishedDataDto,\n  ): Promise {\n    return this.publishedDataService.update(\n      { doi: id },\n      updatePublishedDataDto,\n    );\n  }\n\n  // DELETE /publisheddata/:id\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.Delete, PublishedData),\n  )\n  @Delete(\"/:id\")\n  async remove(@Param(\"id\") id: string): Promise {\n    return this.publishedDataService.remove({ doi: id });\n  }\n\n  // POST /publisheddata/:id/register\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.Update, PublishedData),\n  )\n  @Post(\"/:id/register\")\n  async register(@Param(\"id\") id: string): Promise {\n    const publishedData = await this.publishedDataService.findOne({ doi: id });\n\n    if (publishedData) {\n      const data = {\n        registeredTime: new Date(),\n        status: \"registered\",\n      };\n\n      publishedData.registeredTime = data.registeredTime;\n      publishedData.status = data.status;\n\n      const xml = formRegistrationXML(publishedData);\n\n      await Promise.all(\n        publishedData.pidArray.map(async (pid) => {\n          await this.datasetsService.findByIdAndUpdate(pid, {\n            isPublished: true,\n            datasetlifecycle: { publishedOn: data.registeredTime },\n          });\n        }),\n      );\n      const fullDoi = publishedData.doi;\n      const registerMetadataUri = this.configService.get(\n        \"registerMetadataUri\",\n      );\n      const registerDoiUri = this.configService.get(\"registerDoiUri\");\n      const OAIServerUri = this.configService.get(\"oaiProviderRoute\");\n\n      let doiProviderCredentials = {\n        username: \"removed\",\n        password: \"removed\",\n      };\n\n      const username = this.configService.get(\"doiUsername\");\n      const password = this.configService.get(\"doiPassword\");\n\n      if (username && password) {\n        doiProviderCredentials = {\n          username,\n          password,\n        };\n      }\n\n      const registerDataciteMetadataOptions = {\n        method: \"PUT\",\n        data: xml,\n        url: `${registerMetadataUri}/${fullDoi}`,\n        headers: {\n          \"content-type\": \"application/xml;charset=UTF-8\",\n        },\n        auth: doiProviderCredentials,\n      };\n\n      const encodeDoi = encodeURIComponent(encodeURIComponent(fullDoi)); //Needed to make sure that the \"/\" between DOI prefix and ID stays encoded in datacite\n      const registerDataciteDoiOptions = {\n        method: \"PUT\",\n        data: `#Content-Type:text/plain;charset=UTF-8\\ndoi= ${fullDoi}\\nurl=${this.configService.get(\n          \"publicURLprefix\",\n        )}${encodeDoi}`,\n        url: `${registerDoiUri}/${fullDoi}`,\n        headers: {\n          \"content-type\": \"text/plain;charset=UTF-8\",\n        },\n        auth: doiProviderCredentials,\n      };\n\n      const syncOAIPublication = {\n        method: \"POST\",\n        body: publishedData,\n        json: true,\n        uri: OAIServerUri,\n        headers: {\n          \"content-type\": \"application/json;charset=UTF-8\",\n        },\n        auth: doiProviderCredentials,\n      };\n\n      if (this.configService.get(\"site\") !== \"PSI\") {\n        console.log(\"posting to datacite\");\n        console.log(registerDataciteMetadataOptions);\n        console.log(registerDataciteDoiOptions);\n\n        let res;\n        try {\n          res = await firstValueFrom(\n            this.httpService.request({\n              ...registerDataciteMetadataOptions,\n              method: \"PUT\",\n            }),\n          );\n        } catch (err: any) {\n          handleAxiosRequestError(err, \"PublishedDataController.register\");\n          throw new HttpException(\n            `Error occurred: ${err}`,\n            err.response.status || HttpStatus.FAILED_DEPENDENCY,\n          );\n        }\n\n        try {\n          await firstValueFrom(\n            this.httpService.request({\n              ...registerDataciteDoiOptions,\n              method: \"PUT\",\n            }),\n          );\n        } catch (err: any) {\n          handleAxiosRequestError(err, \"PublishedDataController.register\");\n          throw new HttpException(\n            `Error occurred: ${err}`,\n            err.response.status || HttpStatus.FAILED_DEPENDENCY,\n          );\n        }\n\n        try {\n          await this.publishedDataService.update(\n            { doi: publishedData.doi },\n            data,\n          );\n        } catch (error) {\n          console.error(error);\n        }\n\n        return res ? { doi: res.data } : null;\n      } else if (!this.configService.get(\"oaiProviderRoute\")) {\n        try {\n          await this.publishedDataService.update(\n            { doi: publishedData.doi },\n            data,\n          );\n        } catch (error) {\n          console.error(error);\n        }\n\n        console.warn(\n          \"results not pushed to oaiProvider as oaiProviderRoute route is not specified in the env variables\",\n        );\n\n        throw new HttpException(\n          \"results not pushed to oaiProvider as oaiProviderRoute route is not specified in the env variables\",\n          HttpStatus.OK,\n        );\n      } else {\n        let res;\n        try {\n          res = await firstValueFrom(\n            this.httpService.request({\n              ...syncOAIPublication,\n              method: \"POST\",\n            }),\n          );\n        } catch (err: any) {\n          handleAxiosRequestError(err, \"PublishedDataController.register\");\n          throw new HttpException(\n            `Error occurred: ${err}`,\n            err.response.status || HttpStatus.FAILED_DEPENDENCY,\n          );\n        }\n\n        try {\n          await this.publishedDataService.update(\n            { doi: publishedData.doi },\n            data,\n          );\n        } catch (error) {\n          console.error(error);\n        }\n\n        return res ? { doi: res.data } : null;\n      }\n    }\n\n    throw new NotFoundException();\n  }\n\n  // POST /publisheddata/:id/resync\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.Update, PublishedData),\n  )\n  @Post(\"/:id/resync\")\n  async resync(\n    @Param(\"id\") id: string,\n    @Body() data: UpdatePublishedDataDto,\n  ): Promise {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const { _id, doi, ...publishedData } = data;\n\n    const OAIServerUri = this.configService.get(\"oaiProviderRoute\");\n\n    let doiProviderCredentials = {\n      username: \"removed\",\n      password: \"removed\",\n    };\n\n    if (existsSync(this.doiConfigPath)) {\n      doiProviderCredentials = JSON.parse(\n        readFileSync(this.doiConfigPath).toString(),\n      );\n    }\n\n    const resyncOAIPublication = {\n      method: \"PUT\",\n      body: publishedData,\n      json: true,\n      uri: OAIServerUri + \"/\" + encodeURIComponent(encodeURIComponent(id)),\n      headers: {\n        \"content-type\": \"application/json;charset=UTF-8\",\n      },\n      auth: doiProviderCredentials,\n    };\n\n    let res;\n    try {\n      res = await firstValueFrom(\n        this.httpService.request({\n          ...resyncOAIPublication,\n          method: \"PUT\",\n        }),\n      );\n    } catch (error) {\n      handleAxiosRequestError(error, \"PublishedDataController.resync\");\n    }\n\n    try {\n      await this.publishedDataService.update({ doi: id }, publishedData);\n    } catch (error) {\n      console.error(error);\n    }\n\n    return res ? res.data : null;\n  }\n}\n\nfunction formRegistrationXML(publishedData: PublishedData): string {\n  const {\n    affiliation,\n    publisher,\n    publicationYear,\n    title,\n    abstract,\n    resourceType,\n    creator,\n  } = publishedData;\n  const doi = publishedData.doi;\n  const uniqueCreator = creator.filter(\n    (author, i) => creator.indexOf(author) === i,\n  );\n\n  const creatorElements = uniqueCreator.map((author) => {\n    const names = author.split(\" \");\n    const firstName = names[0];\n    const lastName = names.slice(1).join(\" \");\n\n    return `\n            \n                ${lastName}, ${firstName}\n                ${firstName}\n                ${lastName}\n                ${affiliation}\n            \n        `;\n  });\n\n  return `\n        \n            ${doi}\n            \n                ${creatorElements.join(\"\\n\")}\n            \n            \n                ${title}\n            \n            ${publisher}\n            ${publicationYear}\n            \n                ${abstract}\n            \n            ${resourceType}\n        \n    `;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PublishedDataModule.html":{"url":"modules/PublishedDataModule.html","title":"module - PublishedDataModule","body":"\n                   \n\n\n\n\n    Modules\n    PublishedDataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PublishedDataModule\n\n\n\ncluster_PublishedDataModule_imports\n\n\n\ncluster_PublishedDataModule_providers\n\n\n\n\nAttachmentsModule\n\nAttachmentsModule\n\n\n\nPublishedDataModule\n\nPublishedDataModule\n\nPublishedDataModule -->\n\nAttachmentsModule->PublishedDataModule\n\n\n\n\n\nDatasetsModule\n\nDatasetsModule\n\nPublishedDataModule -->\n\nDatasetsModule->PublishedDataModule\n\n\n\n\n\nProposalsModule\n\nProposalsModule\n\nPublishedDataModule -->\n\nProposalsModule->PublishedDataModule\n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nPublishedDataModule -->\n\nCaslAbilityFactory->PublishedDataModule\n\n\n\n\n\nPublishedDataService\n\nPublishedDataService\n\nPublishedDataModule -->\n\nPublishedDataService->PublishedDataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/published-data/published-data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslAbilityFactory\n                        \n                        \n                            PublishedDataService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PublishedDataController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AttachmentsModule\n                        \n                        \n                            DatasetsModule\n                        \n                        \n                            ProposalsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PublishedDataService } from \"./published-data.service\";\nimport { PublishedDataController } from \"./published-data.controller\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport {\n  PublishedData,\n  PublishedDataSchema,\n} from \"./schemas/published-data.schema\";\nimport { CaslAbilityFactory } from \"src/casl/casl-ability.factory\";\nimport { AttachmentsModule } from \"src/attachments/attachments.module\";\nimport { DatasetsModule } from \"src/datasets/datasets.module\";\nimport { ProposalsModule } from \"src/proposals/proposals.module\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\n\n@Module({\n  imports: [\n    AttachmentsModule,\n    ConfigModule,\n    DatasetsModule,\n    HttpModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        timeout: configService.get(\"httpTimeOut\"),\n        maxRedirects: configService.get(\"httpMaxRedirects\"),\n      }),\n      inject: [ConfigService],\n    }),\n    MongooseModule.forFeatureAsync([\n      {\n        name: PublishedData.name,\n        useFactory: () => {\n          const schema = PublishedDataSchema;\n\n          schema.pre(\"save\", function (next) {\n            // if _id is empty or different than doi,\n            // set _id to doi\n            if (!this._id) {\n              this._id = this.doi;\n            }\n            next();\n          });\n          return schema;\n        },\n      },\n    ]),\n    ProposalsModule,\n  ],\n  controllers: [PublishedDataController],\n  providers: [PublishedDataService, CaslAbilityFactory],\n})\nexport class PublishedDataModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PublishedDataService.html":{"url":"injectables/PublishedDataService.html","title":"injectable - PublishedDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PublishedDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/published-data/published-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                count\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publishedDataModel: Model, request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/published-data/published-data.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publishedDataModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                    \n                    count(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/published-data/published-data.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPublishedDataDto: CreatePublishedDataDto)\n                \n            \n\n\n            \n                \n                    Defined in src/published-data/published-data.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPublishedDataDto\n                                    \n                                                CreatePublishedDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter: IPublishedDataFilters)\n                \n            \n\n\n            \n                \n                    Defined in src/published-data/published-data.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                IPublishedDataFilters\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/published-data/published-data.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/published-data/published-data.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(filter: FilterQuery, updatePublishedDataDto: UpdatePublishedDataDto)\n                \n            \n\n\n            \n                \n                    Defined in src/published-data/published-data.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePublishedDataDto\n                                    \n                                                UpdatePublishedDataDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Scope } from \"@nestjs/common\";\nimport { REQUEST } from \"@nestjs/core\";\nimport { Request } from \"express\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { FilterQuery, Model } from \"mongoose\";\nimport {\n  parseLimitFilters,\n  addCreatedByFields,\n  addUpdatedByField,\n  createFullqueryFilter,\n} from \"src/common/utils\";\nimport { CreatePublishedDataDto } from \"./dto/create-published-data.dto\";\nimport { UpdatePublishedDataDto } from \"./dto/update-published-data.dto\";\nimport {\n  ICount,\n  IPublishedDataFilters,\n} from \"./interfaces/published-data.interface\";\nimport {\n  PublishedData,\n  PublishedDataDocument,\n} from \"./schemas/published-data.schema\";\nimport { JWTUser } from \"src/auth/interfaces/jwt-user.interface\";\n\n@Injectable({ scope: Scope.REQUEST })\nexport class PublishedDataService {\n  constructor(\n    @InjectModel(PublishedData.name)\n    private publishedDataModel: Model,\n    @Inject(REQUEST)\n    private request: Request,\n  ) {}\n\n  async create(\n    createPublishedDataDto: CreatePublishedDataDto,\n  ): Promise {\n    const username = (this.request.user as JWTUser).username;\n    const createdPublished = new this.publishedDataModel(\n      addCreatedByFields(\n        createPublishedDataDto,\n        username,\n      ),\n    );\n    return createdPublished.save();\n  }\n\n  async findAll(filter: IPublishedDataFilters): Promise {\n    const whereFilter: FilterQuery = filter.where ?? {};\n    const fields = filter.fields ?? {};\n    const filterQuery: FilterQuery =\n      createFullqueryFilter(\n        this.publishedDataModel,\n        \"doi\",\n        fields,\n      );\n    const whereClause: FilterQuery = {\n      ...filterQuery,\n      ...whereFilter,\n    };\n    const { limit, skip, sort } = parseLimitFilters(filter.limits);\n\n    return this.publishedDataModel\n      .find(whereClause)\n      .limit(limit)\n      .skip(skip)\n      .sort(sort)\n      .exec();\n  }\n\n  async count(filter: FilterQuery): Promise {\n    const count = await this.publishedDataModel.count(filter).exec();\n    return { count };\n  }\n\n  async findOne(\n    filter: FilterQuery,\n  ): Promise {\n    return this.publishedDataModel.findOne(filter).exec();\n  }\n\n  async update(\n    filter: FilterQuery,\n    updatePublishedDataDto: UpdatePublishedDataDto,\n  ): Promise {\n    const username = (this.request.user as JWTUser).username;\n    return this.publishedDataModel\n      .findOneAndUpdate(\n        filter,\n        addUpdatedByField(updatePublishedDataDto, username),\n        {\n          new: true,\n        },\n      )\n      .exec();\n  }\n\n  async remove(filter: FilterQuery): Promise {\n    return this.publishedDataModel.findOneAndRemove(filter).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryableClass.html":{"url":"classes/QueryableClass.html","title":"class - QueryableClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryableClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/schemas/queryable.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was created. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/schemas/queryable.schema.ts:40\n                        \n                    \n\n            \n                \n                    NOTE: createdAt and updatedAt properties are handled automatically by mongoose when timestamps flag is set to true on a schema(https://mongoosejs.com/docs/guide.html#timestamps).\nWe still need to keep the fields available here because of the response model and swagger documentation. They are not required so we don't need to provide them manually on create/update.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who created this record. This property is added and maintained by the system.'})@Prop({type: String, index: true, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/schemas/queryable.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was updated last. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/schemas/queryable.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who updated this record last. This property is added and maintained by the system.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/schemas/queryable.schema.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nexport class QueryableClass {\n  @ApiProperty({\n    type: String,\n    description:\n      \"Indicate the user who created this record. This property is added and maintained by the system.\",\n  })\n  @Prop({\n    type: String,\n    index: true,\n    required: true,\n  })\n  createdBy: string;\n\n  @ApiProperty({\n    type: String,\n    description:\n      \"Indicate the user who updated this record last. This property is added and maintained by the system.\",\n  })\n  @Prop({\n    type: String,\n    required: true,\n  })\n  updatedBy: string;\n\n  /**\n   * NOTE: createdAt and updatedAt properties are handled automatically by mongoose when timestamps flag is set to true on a schema(https://mongoosejs.com/docs/guide.html#timestamps).\n   * We still need to keep the fields available here because of the response model and swagger documentation. They are not required so we don't need to provide them manually on create/update.\n   */\n  @ApiProperty({\n    type: Date,\n    description:\n      \"Date and time when this record was created. This property is added and maintained by mongoose.\",\n  })\n  @Prop({\n    type: Date,\n  })\n  createdAt: Date;\n\n  @ApiProperty({\n    type: Date,\n    description:\n      \"Date and time when this record was updated last. This property is added and maintained by mongoose.\",\n  })\n  @Prop({\n    type: Date,\n  })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisteredInterceptor.html":{"url":"injectables/RegisteredInterceptor.html","title":"injectable - RegisteredInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RegisteredInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/published-data/interceptors/registered.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/published-data/interceptors/registered.interceptor.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class RegisteredInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const user = context.getArgs()[1].req.user;\n    if (!user) {\n      if (context.getArgs()[1].req.query.fields) {\n        let fields = JSON.parse(context.getArgs()[1].req.query.fields);\n        fields = { ...fields, status: \"registered\" };\n        context.getArgs()[1].req.query.fields = JSON.stringify(fields);\n      } else {\n        context.getArgs()[1].req.query.fields = JSON.stringify({\n          status: \"registered\",\n        });\n      }\n    }\n    return next.handle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RelationshipClass.html":{"url":"classes/RelationshipClass.html","title":"class - RelationshipClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RelationshipClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/schemas/relationship.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                pid\n                            \n                            \n                                    \n                                    \n                                relationship\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        pid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Persistent identifier of the related dataset.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/relationship.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        relationship\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Relationship between this dataset and the related one.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/relationship.schema.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Document } from \"mongoose\";\n\nexport type RelationshipDocument = RelationshipClass & Document;\n\n@Schema()\nexport class RelationshipClass {\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"Persistent identifier of the related dataset.\",\n  })\n  @Prop({ type: String, required: true })\n  pid: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"Relationship between this dataset and the related one.\",\n  })\n  @Prop({ type: String, required: true })\n  relationship: string;\n}\n\nexport const RelationshipSchema =\n  SchemaFactory.createForClass(RelationshipClass);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    \n                                    \n                                created\n                            \n                            \n                                    \n                                    \n                                modified\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/role.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'The date when the role was created. This is handled automatically by mongoose'})@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/role.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        modified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'The date when the role was last modified. This is handled automatically by mongoose'})@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/role.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The name of the role'})@Prop({type: String, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/role.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Document } from \"mongoose\";\n\nexport type RoleDocument = Role & Document;\n\n@Schema({\n  collection: \"Role\",\n  toJSON: {\n    getters: true,\n  },\n  timestamps: { createdAt: \"created\", updatedAt: \"modified\" },\n})\nexport class Role {\n  _id: string;\n\n  @ApiProperty({ type: String, description: \"The name of the role\" })\n  @Prop({ type: String, unique: true })\n  name: string;\n\n  @ApiProperty({\n    type: Date,\n    description:\n      \"The date when the role was created. This is handled automatically by mongoose\",\n  })\n  @Prop({ type: Date })\n  created: Date;\n\n  @ApiProperty({\n    type: Date,\n    description:\n      \"The date when the role was last modified. This is handled automatically by mongoose\",\n  })\n  @Prop({ type: Date })\n  modified: Date;\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/roles.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { ROLES_KEY } from \"../decorators/roles.decorator\";\nimport { Role } from \"../role.enum\";\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (!requiredRoles) {\n      return true;\n    }\n\n    const { user } = context.switchToHttp().getRequest();\n    return requiredRoles.some((role) => user.currentGroups.includes(role));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createUserRole\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findAllUserRoles\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneUserRole\n                            \n                            \n                                    Async\n                                findOrCreate\n                            \n                            \n                                    Async\n                                findOrCreateUserRole\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                roleExists\n                            \n                            \n                                    Async\n                                userRoleExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: Model, userRoleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/roles.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRoleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRoleDto: CreateRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/roles.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRoleDto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUserRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserRole(createUserRoleDto: CreateUserRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/roles.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserRoleDto\n                                    \n                                                CreateUserRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/users/roles.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUserRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUserRoles(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/users/roles.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/users/roles.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneUserRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneUserRole(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/users/roles.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOrCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOrCreate(createRoleDto: CreateRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/roles.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRoleDto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOrCreateUserRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOrCreateUserRole(createUserRoleDto: CreateUserRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/roles.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserRoleDto\n                                    \n                                                CreateUserRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/users/roles.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        roleExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    roleExists(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/users/roles.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        userRoleExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    userRoleExists(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/users/roles.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { FilterQuery, Model } from \"mongoose\";\nimport { CreateRoleDto } from \"./dto/create-role.dto\";\nimport { CreateUserRoleDto } from \"./dto/create-user-role.dto\";\nimport { Role, RoleDocument } from \"./schemas/role.schema\";\nimport { UserRole, UserRoleDocument } from \"./schemas/user-role.schema\";\n\n@Injectable()\nexport class RolesService implements OnModuleInit {\n  constructor(\n    @InjectModel(Role.name) private roleModel: Model,\n    @InjectModel(UserRole.name) private userRoleModel: Model,\n  ) {}\n\n  async onModuleInit() {\n    const createRole: CreateRoleDto = {\n      name: \"globalaccess\",\n    };\n    await this.findOrCreate(createRole);\n  }\n\n  async roleExists(filter: FilterQuery): Promise {\n    const role = await this.roleModel.exists(filter).exec();\n    return role ? true : false;\n  }\n\n  async userRoleExists(\n    filter: FilterQuery,\n  ): Promise {\n    const userRole = await this.userRoleModel.exists(filter).exec();\n    return userRole ? true : false;\n  }\n\n  async create(createRoleDto: CreateRoleDto): Promise {\n    Logger.log(`Creating role ${createRoleDto.name}`, \"RolesService\");\n\n    const createdRole = new this.roleModel(createRoleDto);\n    return createdRole.save();\n  }\n\n  async findOrCreate(createRoleDto: CreateRoleDto): Promise {\n    const roleExists = await this.roleExists({ name: createRoleDto.name });\n\n    if (roleExists) {\n      return await this.findOne({ name: createRoleDto.name });\n    }\n\n    return await this.create(createRoleDto);\n  }\n\n  async createUserRole(\n    createUserRoleDto: CreateUserRoleDto,\n  ): Promise {\n    Logger.log(\n      `Create user role mapping for userId: ${createUserRoleDto.userId} and roleId: ${createUserRoleDto.roleId}`,\n      \"RolesService\",\n    );\n\n    const createdUserRole = new this.userRoleModel(createUserRoleDto);\n    return createdUserRole.save();\n  }\n\n  async findOrCreateUserRole(\n    createUserRoleDto: CreateUserRoleDto,\n  ): Promise {\n    const filter: FilterQuery = {\n      $and: [\n        { userId: createUserRoleDto.userId },\n        { roleId: createUserRoleDto.roleId },\n      ],\n    };\n    const userRoleExists = await this.userRoleExists(filter);\n\n    if (userRoleExists) {\n      return await this.findOneUserRole(filter);\n    }\n\n    return await this.createUserRole(createUserRoleDto);\n  }\n\n  async findOne(filter: FilterQuery): Promise {\n    return this.roleModel.findOne(filter).exec();\n  }\n\n  async findOneUserRole(\n    filter: FilterQuery,\n  ): Promise {\n    return this.userRoleModel.findOne(filter).exec();\n  }\n\n  async findAllUserRoles(\n    filter: FilterQuery,\n  ): Promise {\n    return this.userRoleModel.find(filter).exec();\n  }\n\n  async find(filter: FilterQuery): Promise {\n    const userRoles = await this.userRoleModel.find(filter).exec();\n\n    return await Promise.all(\n      userRoles.map(\n        async (userRole) =>\n          await this.roleModel.findOne({ _id: userRole.roleId }),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SampleClass.html":{"url":"classes/SampleClass.html","title":"class - SampleClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SampleClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/samples/schemas/sample.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        OwnableClass\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isPublished\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                owner\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                sampleCharacteristics\n                            \n                            \n                                    \n                                    \n                                sampleId\n                            \n                            \n                                    \n                                    \n                                accessGroups\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                instrumentGroup\n                            \n                            \n                                    \n                                    \n                                ownerGroup\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/samples/schemas/sample.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'A description of the sample.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/samples/schemas/sample.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isPublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, default: false, required: false, description: 'Flag is true when data are made publicly available.'})@Prop({type: Boolean, required: false, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/samples/schemas/sample.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'The owner of the sample.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/samples/schemas/sample.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        sampleCharacteristics\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, default: undefined, required: false, description: 'JSON object containing the sample characteristics metadata.'})@Prop({type: Object, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/samples/schemas/sample.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sampleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, default: () => , required: true, description: 'Globally unique identifier of a sample. This could be provided as an input value or generated by the system.'})@Prop({type: String, unique: true, required: true, default: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in src/samples/schemas/sample.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'Optional additional groups which have read access to the data. Users which are members in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users.'})@Prop({type: undefined, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        instrumentGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Optional additional groups which have read and write access to the data. Users which are members in one of the groups listed here are allowed to access this data.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ownerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151'})@Prop({type: String, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was created. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:40\n\n                        \n                    \n\n            \n                \n                    NOTE: createdAt and updatedAt properties are handled automatically by mongoose when timestamps flag is set to true on a schema(https://mongoosejs.com/docs/guide.html#timestamps).\nWe still need to keep the fields available here because of the response model and swagger documentation. They are not required so we don't need to provide them manually on create/update.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who created this record. This property is added and maintained by the system.'})@Prop({type: String, index: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was updated last. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who updated this record last. This property is added and maintained by the system.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:26\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Document } from \"mongoose\";\nimport { Attachment } from \"src/attachments/schemas/attachment.schema\";\nimport { OwnableClass } from \"src/common/schemas/ownable.schema\";\nimport { DatasetClass } from \"src/datasets/schemas/dataset.schema\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport type SampleDocument = SampleClass & Document;\n\n@Schema({\n  collection: \"Sample\",\n  toJSON: {\n    getters: true,\n  },\n  timestamps: true,\n})\nexport class SampleClass extends OwnableClass {\n  @Prop({ type: String })\n  _id: string;\n\n  @ApiProperty({\n    type: String,\n    default: () => uuidv4(),\n    required: true,\n    description:\n      \"Globally unique identifier of a sample. This could be provided as an input value or generated by the system.\",\n  })\n  @Prop({ type: String, unique: true, required: true, default: () => uuidv4() })\n  sampleId: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"The owner of the sample.\",\n  })\n  @Prop({ type: String, required: false })\n  owner?: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"A description of the sample.\",\n  })\n  @Prop({ type: String, required: false })\n  description?: string;\n\n  @ApiProperty({\n    type: Object,\n    default: {},\n    required: false,\n    description: \"JSON object containing the sample characteristics metadata.\",\n  })\n  @Prop({ type: Object, required: false, default: {} })\n  sampleCharacteristics?: Record;\n\n  @ApiProperty({\n    type: Boolean,\n    default: false,\n    required: false,\n    description: \"Flag is true when data are made publicly available.\",\n  })\n  @Prop({ type: Boolean, required: false, default: false })\n  isPublished?: boolean;\n}\n\nexport class SampleWithAttachmentsAndDatasets extends SampleClass {\n  /*\n  @ApiProperty({ type: \"array\", items: { $ref: getSchemaPath(Attachment) } })\n  @Prop([AttachmentSchema])*/\n  // this property should not be present in the database model\n  @ApiProperty({\n    type: Attachment,\n    isArray: true,\n    required: false,\n    description: \"Attachments that are related to this sample.\",\n  })\n  attachments?: Attachment[];\n\n  /*\n  @ApiProperty({ type: \"array\", items: { $ref: getSchemaPath(Dataset) } })\n  @Prop([DatasetSchema])*/\n  // this property should not be present in the database model\n  @ApiProperty({\n    type: DatasetClass,\n    isArray: true,\n    required: false,\n    description: \"Datasets that are related to this sample.\",\n  })\n  datasets?: DatasetClass[];\n}\n\nexport const SampleSchema = SchemaFactory.createForClass(SampleClass);\n\nSampleSchema.index({ \"$**\": \"text\" });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SampleWithAttachmentsAndDatasets.html":{"url":"classes/SampleWithAttachmentsAndDatasets.html","title":"class - SampleWithAttachmentsAndDatasets","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SampleWithAttachmentsAndDatasets\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/samples/schemas/sample.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SampleClass\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                attachments\n                            \n                            \n                                    \n                                    Optional\n                                datasets\n                            \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                isPublished\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                owner\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                sampleCharacteristics\n                            \n                            \n                                    \n                                    \n                                sampleId\n                            \n                            \n                                    \n                                    \n                                accessGroups\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                instrumentGroup\n                            \n                            \n                                    \n                                    \n                                ownerGroup\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        attachments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Attachment[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Attachment, isArray: true, required: false, description: 'Attachments that are related to this sample.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/samples/schemas/sample.schema.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        datasets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DatasetClass[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: DatasetClass, isArray: true, required: false, description: 'Datasets that are related to this sample.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/samples/schemas/sample.schema.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SampleClass\n\n                            \n                        \n                    \n                        \n                                Defined in         SampleClass:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'A description of the sample.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SampleClass\n\n                            \n                        \n                    \n                        \n                                Defined in         SampleClass:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        isPublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, default: false, required: false, description: 'Flag is true when data are made publicly available.'})@Prop({type: Boolean, required: false, default: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SampleClass\n\n                            \n                        \n                    \n                        \n                                Defined in         SampleClass:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'The owner of the sample.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SampleClass\n\n                            \n                        \n                    \n                        \n                                Defined in         SampleClass:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        sampleCharacteristics\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, default: undefined, required: false, description: 'JSON object containing the sample characteristics metadata.'})@Prop({type: Object, required: false, default: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SampleClass\n\n                            \n                        \n                    \n                        \n                                Defined in         SampleClass:55\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sampleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, default: () => , required: true, description: 'Globally unique identifier of a sample. This could be provided as an input value or generated by the system.'})@Prop({type: String, unique: true, required: true, default: () => })\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SampleClass\n\n                            \n                        \n                    \n                        \n                                Defined in         SampleClass:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        accessGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'Optional additional groups which have read access to the data. Users which are members in one of the groups listed here are allowed to access this data. The special group 'public' makes data available to all users.'})@Prop({type: undefined, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        instrumentGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Optional additional groups which have read and write access to the data. Users which are members in one of the groups listed here are allowed to access this data.'})@Prop({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ownerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Defines the group which owns the data, and therefore has unrestricted access to this data. Usually a pgroup like p12151'})@Prop({type: String, index: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableClass:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was created. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:40\n\n                        \n                    \n\n            \n                \n                    NOTE: createdAt and updatedAt properties are handled automatically by mongoose when timestamps flag is set to true on a schema(https://mongoosejs.com/docs/guide.html#timestamps).\nWe still need to keep the fields available here because of the response model and swagger documentation. They are not required so we don't need to provide them manually on create/update.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who created this record. This property is added and maintained by the system.'})@Prop({type: String, index: true, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, description: 'Date and time when this record was updated last. This property is added and maintained by mongoose.'})@Prop({type: Date})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'Indicate the user who updated this record last. This property is added and maintained by the system.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         QueryableClass\n\n                            \n                        \n                    \n                        \n                                Defined in         QueryableClass:26\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Document } from \"mongoose\";\nimport { Attachment } from \"src/attachments/schemas/attachment.schema\";\nimport { OwnableClass } from \"src/common/schemas/ownable.schema\";\nimport { DatasetClass } from \"src/datasets/schemas/dataset.schema\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport type SampleDocument = SampleClass & Document;\n\n@Schema({\n  collection: \"Sample\",\n  toJSON: {\n    getters: true,\n  },\n  timestamps: true,\n})\nexport class SampleClass extends OwnableClass {\n  @Prop({ type: String })\n  _id: string;\n\n  @ApiProperty({\n    type: String,\n    default: () => uuidv4(),\n    required: true,\n    description:\n      \"Globally unique identifier of a sample. This could be provided as an input value or generated by the system.\",\n  })\n  @Prop({ type: String, unique: true, required: true, default: () => uuidv4() })\n  sampleId: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"The owner of the sample.\",\n  })\n  @Prop({ type: String, required: false })\n  owner?: string;\n\n  @ApiProperty({\n    type: String,\n    required: false,\n    description: \"A description of the sample.\",\n  })\n  @Prop({ type: String, required: false })\n  description?: string;\n\n  @ApiProperty({\n    type: Object,\n    default: {},\n    required: false,\n    description: \"JSON object containing the sample characteristics metadata.\",\n  })\n  @Prop({ type: Object, required: false, default: {} })\n  sampleCharacteristics?: Record;\n\n  @ApiProperty({\n    type: Boolean,\n    default: false,\n    required: false,\n    description: \"Flag is true when data are made publicly available.\",\n  })\n  @Prop({ type: Boolean, required: false, default: false })\n  isPublished?: boolean;\n}\n\nexport class SampleWithAttachmentsAndDatasets extends SampleClass {\n  /*\n  @ApiProperty({ type: \"array\", items: { $ref: getSchemaPath(Attachment) } })\n  @Prop([AttachmentSchema])*/\n  // this property should not be present in the database model\n  @ApiProperty({\n    type: Attachment,\n    isArray: true,\n    required: false,\n    description: \"Attachments that are related to this sample.\",\n  })\n  attachments?: Attachment[];\n\n  /*\n  @ApiProperty({ type: \"array\", items: { $ref: getSchemaPath(Dataset) } })\n  @Prop([DatasetSchema])*/\n  // this property should not be present in the database model\n  @ApiProperty({\n    type: DatasetClass,\n    isArray: true,\n    required: false,\n    description: \"Datasets that are related to this sample.\",\n  })\n  datasets?: DatasetClass[];\n}\n\nexport const SampleSchema = SchemaFactory.createForClass(SampleClass);\n\nSampleSchema.index({ \"$**\": \"text\" });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SamplesModule.html":{"url":"modules/SamplesModule.html","title":"module - SamplesModule","body":"\n                   \n\n\n\n\n    Modules\n    SamplesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SamplesModule\n\n\n\ncluster_SamplesModule_providers\n\n\n\ncluster_SamplesModule_imports\n\n\n\n\nAttachmentsModule\n\nAttachmentsModule\n\n\n\nSamplesModule\n\nSamplesModule\n\nSamplesModule -->\n\nAttachmentsModule->SamplesModule\n\n\n\n\n\nDatasetsModule\n\nDatasetsModule\n\nSamplesModule -->\n\nDatasetsModule->SamplesModule\n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nSamplesModule -->\n\nCaslAbilityFactory->SamplesModule\n\n\n\n\n\nSamplesService\n\nSamplesService\n\nSamplesModule -->\n\nSamplesService->SamplesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/samples/samples.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslAbilityFactory\n                        \n                        \n                            SamplesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SamplesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AttachmentsModule\n                        \n                        \n                            DatasetsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { SamplesService } from \"./samples.service\";\nimport { SamplesController } from \"./samples.controller\";\nimport { AttachmentsModule } from \"src/attachments/attachments.module\";\nimport { DatasetsModule } from \"src/datasets/datasets.module\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { SampleClass, SampleSchema } from \"./schemas/sample.schema\";\nimport { CaslAbilityFactory } from \"src/casl/casl-ability.factory\";\nimport { ConfigModule } from \"@nestjs/config\";\n\n@Module({\n  imports: [\n    AttachmentsModule,\n    ConfigModule,\n    DatasetsModule,\n    MongooseModule.forFeatureAsync([\n      {\n        name: SampleClass.name,\n        useFactory: () => {\n          const schema = SampleSchema;\n\n          schema.pre(\"save\", function (next) {\n            // if _id is empty or different than sampleId,\n            // set _id to sampleId\n            if (!this._id) {\n              this._id = this.sampleId;\n            }\n            next();\n          });\n          return schema;\n        },\n      },\n    ]),\n  ],\n  controllers: [SamplesController],\n  providers: [SamplesService, CaslAbilityFactory],\n})\nexport class SamplesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SamplesService.html":{"url":"injectables/SamplesService.html","title":"injectable - SamplesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SamplesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/samples/samples.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                fullquery\n                            \n                            \n                                    Async\n                                metadataKeys\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sampleModel: Model, configService: ConfigService, request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/samples/samples.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sampleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSampleDto: CreateSampleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/samples/samples.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSampleDto\n                                    \n                                                CreateSampleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter: IFilters)\n                \n            \n\n\n            \n                \n                    Defined in src/samples/samples.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                IFilters\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/samples/samples.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fullquery\n                        \n                    \n                \n            \n            \n                \n                    \n                    fullquery(filter: IFilters)\n                \n            \n\n\n            \n                \n                    Defined in src/samples/samples.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                IFilters\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        metadataKeys\n                        \n                    \n                \n            \n            \n                \n                    \n                    metadataKeys(filters: IFilters)\n                \n            \n\n\n            \n                \n                    Defined in src/samples/samples.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                                IFilters\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/samples/samples.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(filter: FilterQuery, updateSampleDto: UpdateSampleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/samples/samples.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSampleDto\n                                    \n                                                UpdateSampleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Scope } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { REQUEST } from \"@nestjs/core\";\nimport { Request } from \"express\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { FilterQuery, Model, QueryOptions } from \"mongoose\";\nimport { JWTUser } from \"src/auth/interfaces/jwt-user.interface\";\nimport { IFilters } from \"src/common/interfaces/common.interface\";\nimport {\n  addCreatedByFields,\n  addUpdatedByField,\n  extractMetadataKeys,\n  mapScientificQuery,\n  parseLimitFilters,\n} from \"src/common/utils\";\nimport { CreateSampleDto } from \"./dto/create-sample.dto\";\nimport { UpdateSampleDto } from \"./dto/update-sample.dto\";\nimport { ISampleFields } from \"./interfaces/sample-filters.interface\";\nimport { SampleField } from \"./sample-field.enum\";\nimport { SampleClass, SampleDocument } from \"./schemas/sample.schema\";\n\n@Injectable({ scope: Scope.REQUEST })\nexport class SamplesService {\n  constructor(\n    @InjectModel(SampleClass.name) private sampleModel: Model,\n    private configService: ConfigService,\n    @Inject(REQUEST) private request: Request,\n  ) {}\n\n  async create(createSampleDto: CreateSampleDto): Promise {\n    const username = (this.request.user as JWTUser).username;\n    const createdSample = new this.sampleModel(\n      addCreatedByFields(createSampleDto, username),\n    );\n    return createdSample.save();\n  }\n\n  async findAll(\n    filter: IFilters,\n  ): Promise {\n    const whereFilter: FilterQuery = filter.where ?? {};\n    const { limit, skip, sort } = parseLimitFilters(filter.limits);\n\n    return this.sampleModel\n      .find(whereFilter)\n      .limit(limit)\n      .skip(skip)\n      .sort(sort)\n      .exec();\n  }\n\n  async fullquery(\n    filter: IFilters,\n  ): Promise {\n    const modifiers: QueryOptions = {};\n    let filterQuery: FilterQuery = {};\n\n    if (filter) {\n      const { limit, skip, sort } = parseLimitFilters(filter.limits);\n      modifiers.limit = limit;\n      modifiers.skip = skip;\n      modifiers.sort = sort;\n\n      if (filter.fields) {\n        const fields = filter.fields;\n        Object.keys(fields).forEach((key) => {\n          if (key === SampleField.Text) {\n            const text = fields[key];\n            if (text) {\n              filterQuery.$text = { $search: text };\n            }\n          } else if (key === SampleField.Characteristics) {\n            filterQuery = {\n              ...filterQuery,\n              ...mapScientificQuery(fields[key]),\n            };\n          }\n        });\n      }\n    }\n\n    return this.sampleModel.find(filterQuery, null, modifiers).exec();\n  }\n\n  async metadataKeys(\n    filters: IFilters,\n  ): Promise {\n    const blacklist = [new RegExp(\".*_date\")];\n\n    let MAXLIMIT;\n    if (this.configService.get(\"metadataParentInstancesReturnLimit\")) {\n      MAXLIMIT = this.configService.get(\n        \"metadataParentInstancesReturnLimit\",\n      );\n\n      let lm;\n\n      if (filters.limits) {\n        lm = JSON.parse(JSON.stringify(filters.limits));\n      } else {\n        lm = {};\n      }\n\n      if (MAXLIMIT && lm.limit) {\n        if (lm.limit > MAXLIMIT) {\n          lm.limit = MAXLIMIT;\n        }\n      } else {\n        lm.limit = MAXLIMIT;\n      }\n      filters.limits = lm;\n    }\n\n    const samples = await this.findAll(filters);\n\n    const metadataKeys = extractMetadataKeys(\n      samples,\n      \"sampleCharacteristics\",\n    ).filter((key) => !blacklist.some((regex) => regex.test(key)));\n\n    const metadataKey: string | undefined = filters.fields\n      ? filters.fields.metadataKey\n      : undefined;\n    const returnLimit = this.configService.get(\n      \"metadataKeysReturnLimit\",\n    );\n\n    if (metadataKey && metadataKey.length > 0) {\n      const filterKey = metadataKey.toLowerCase();\n      return metadataKeys\n        .filter((key) => key.toLowerCase().includes(filterKey))\n        .slice(0, returnLimit);\n    } else {\n      return metadataKeys.slice(0, returnLimit);\n    }\n  }\n\n  async findOne(filter: FilterQuery) {\n    return this.sampleModel.findOne(filter).exec();\n  }\n\n  async update(\n    filter: FilterQuery,\n    updateSampleDto: UpdateSampleDto,\n  ): Promise {\n    const username = (this.request.user as JWTUser).username;\n\n    return this.sampleModel\n      .findOneAndUpdate(filter, addUpdatedByField(updateSampleDto, username), {\n        new: true,\n      })\n      .exec();\n  }\n\n  async remove(filter: FilterQuery): Promise {\n    return this.sampleModel.findOneAndRemove(filter).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubDatasetsPublicInterceptor.html":{"url":"injectables/SubDatasetsPublicInterceptor.html","title":"injectable - SubDatasetsPublicInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubDatasetsPublicInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/interceptors/datasets-public.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/datasets/interceptors/datasets-public.interceptor.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class MainDatasetsPublicInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const request = context.switchToHttp().getRequest();\n    if (!request.isAuthenticated()) {\n      const stringFilter = request.query.filter ? request.query.filter : \"{}\";\n      const jsonFilter = JSON.parse(stringFilter);\n      if (\"where\" in jsonFilter) {\n        jsonFilter.where.isPublished = true;\n      } else {\n        jsonFilter.where = { isPublished: true };\n      }\n      request.query.filter = JSON.stringify(jsonFilter);\n    }\n    return next.handle();\n  }\n}\n\n@Injectable()\nexport class SubDatasetsPublicInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const request = context.switchToHttp().getRequest();\n    if (!request.isAuthenticated()) {\n      const stringFields = request.query.fields ? request.query.fields : \"{}\";\n      let jsonFields = JSON.parse(stringFields);\n      jsonFields = { ...jsonFields, isPublished: true };\n      request.query.fields = JSON.stringify(jsonFields);\n    }\n    return next.handle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TechniqueClass.html":{"url":"classes/TechniqueClass.html","title":"class - TechniqueClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TechniqueClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/schemas/technique.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                pid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'The name of the technique.'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/technique.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        pid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Persistent Identifier of the technique. Usually it is a UUIDv4.'})@Prop({type: String, required: true, sparse: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/datasets/schemas/technique.schema.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Document } from \"mongoose\";\n\nexport type TechniqueDocument = TechniqueClass & Document;\n\n@Schema()\nexport class TechniqueClass {\n  @ApiProperty({\n    type: String,\n    required: true,\n    description:\n      \"Persistent Identifier of the technique. Usually it is a UUIDv4.\",\n  })\n  @Prop({ type: String, required: true, sparse: true })\n  pid: string;\n\n  @ApiProperty({\n    type: String,\n    required: true,\n    description: \"The name of the technique.\",\n  })\n  @Prop({ type: String, required: true })\n  name: string;\n}\n\nexport const TechniqueSchema = SchemaFactory.createForClass(TechniqueClass);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UTCTimeInterceptor.html":{"url":"injectables/UTCTimeInterceptor.html","title":"injectable - UTCTimeInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UTCTimeInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/utc-time.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateKeys\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dateKeys: ()[])\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/utc-time.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dateKeys\n                                                  \n                                                        \n                                                                    ()[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/utc-time.interceptor.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dateKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ()[]\n\n                    \n                \n                    \n                        \n                                Defined in src/common/interceptors/utc-time.interceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { Observable } from \"rxjs\";\nimport { updateTimesToUTC } from \"../utils\";\n\n@Injectable()\nexport class UTCTimeInterceptor implements NestInterceptor {\n  dateKeys: (keyof T)[];\n\n  constructor(dateKeys: (keyof T)[]) {\n    this.dateKeys = dateKeys;\n  }\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    const req = context.switchToHttp().getRequest();\n    const instance = req.body as T;\n    req.body = updateTimesToUTC(this.dateKeys, instance);\n    return next.handle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAttachmentDto.html":{"url":"classes/UpdateAttachmentDto.html","title":"class - UpdateAttachmentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAttachmentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/attachments/dto/update-attachment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                datasetId\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                proposalId\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                sampleId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        datasetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attachments/dto/update-attachment.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attachments/dto/update-attachment.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        proposalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attachments/dto/update-attachment.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        sampleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/attachments/dto/update-attachment.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { Exclude } from \"class-transformer\";\nimport { IsOptional } from \"class-validator\";\nimport { CreateAttachmentDto } from \"./create-attachment.dto\";\n\nexport class UpdateAttachmentDto extends PartialType(CreateAttachmentDto) {\n  @IsOptional()\n  @Exclude()\n  readonly id?: string;\n\n  @IsOptional()\n  @Exclude()\n  readonly datasetId?: string;\n\n  @IsOptional()\n  @Exclude()\n  readonly proposalId?: string;\n\n  @IsOptional()\n  @Exclude()\n  readonly sampleId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDatablockDto.html":{"url":"classes/UpdateDatablockDto.html","title":"class - UpdateDatablockDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDatablockDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datablocks/dto/update-datablock.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateDatablockDto } from \"./create-datablock.dto\";\n\nexport class UpdateDatablockDto extends PartialType(CreateDatablockDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDatasetDto.html":{"url":"classes/UpdateDatasetDto.html","title":"class - UpdateDatasetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDatasetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/datasets/dto/update-dataset.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CreateDatasetDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                classification\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                comment\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                contactEmail\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                creationTime\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                dataQualityMetrics\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                datasetlifecycle\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                datasetName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                isPublished\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                keywords\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                license\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                numberOfFiles\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                numberOfFilesArchived\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                orcidOfOwner\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                owner\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                ownerEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                packedSize\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                pid\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                relationships\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                scientificMetadata\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                sharedWith\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                size\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                sourceFolder\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                sourceFolderHost\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                techniques\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                validationStatus\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                version\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                accessGroups\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                instrumentGroup\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                ownerGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        classification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'ACIA information about AUthenticity,COnfidentiality,INtegrity and AVailability requirements of dataset. E.g. AV(ailabilty)=medium could trigger the creation of a two tape copies. Format 'AV=medium,CO=low''})@IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:207\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Comment the user has about a given dataset.'})@IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:305\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        contactEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Email of the contact person for this dataset. The string may contain a list of emails, which should then be separated by semicolons.'})@IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        creationTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Date, required: true, description: 'Time when dataset became fully available on disk, i.e. all containing files have been written. Format according to chapter 5.6 internet date/time format in RFC 3339. Local times without timezone/offset info are automatically transformed to UTC using the timezone of the API server.'})@IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:146\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        dataQualityMetrics\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, required: false, description: 'Data Quality Metrics is a number given by the user to rate the dataset.'})@IsOptional()@IsNumber()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:315\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        datasetlifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LifecycleClass\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: LifecycleClass, required: false, default: undefined, description: 'Describes the current status of the dataset during its lifetime with respect to the storage handling systems.'})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:286\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        datasetName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'A name for the dataset, given by the creator to carry some semantic meaning. Useful for display purposes e.g. instead of displaying the pid. Will be autofilled if missing using info from sourceFolder.'})@IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:197\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Free text explanation of contents of dataset.'})@IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:187\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        isPublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Boolean, required: false, default: false, description: 'Flag is true when data are made publicly available.'})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:236\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        keywords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: false, description: 'Array of tags associated with the meaning or contents of this dataset. Values should ideally come from defined vocabularies, taxonomies, ontologies or knowledge graphs.'})@IsOptional()@IsString({each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:178\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        license\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Name of the license under which the data can be used.'})@IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:216\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        numberOfFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, default: 0, required: false, description: 'Total number of files in all OrigDatablocks for this dataset.'})@IsOptional()@IsInt()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:127\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        numberOfFilesArchived\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, default: 0, required: true, description: 'Total number of files in all Datablocks for this dataset.'})@IsOptional()@IsInt()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:137\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        orcidOfOwner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'ORCID of the owner or custodian. The string may contain a list of ORCIDs, which should then be separated by semicolons.'})@IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Owner or custodian of the dataset, usually first name + last name. The string may contain a list of persons, which should then be separated by semicolons.'})@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:43\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        ownerEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Email of the owner or custodian of the dataset. The string may contain a list of emails, which should then be separated by semicolons.'})@IsOptional()@IsEmail()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:53\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        packedSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, default: 0, required: false, description: 'Total size of all datablock package files created for this dataset.'})@IsOptional()@IsInt()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:116\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        pid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Persistent identifier of the dataset.'})@IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        relationships\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RelationshipClass[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'array', items: undefined, required: false, default: undefined, description: 'Stores the relationships with other datasets.'})@IsArray()@IsOptional()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:276\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        scientificMetadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, required: false, default: undefined, description: 'JSON object containing the scientific metadata.'})@IsOptional()@IsObject()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:296\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        sharedWith\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: false, default: undefined, description: 'List of users that the dataset has been shared with.'})@IsOptional()@IsString({each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:262\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, default: 0, required: false, description: 'Total size of all source files contained in source folder on disk when unpacked.'})@IsOptional()@IsInt()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:105\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        sourceFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Absolute file path on file server containing the files of this dataset, e.g. /some/path/to/sourcefolder. In case of a single file dataset, e.g. HDF5 data, it contains the path up to, but excluding the filename. Trailing slashes are removed.'})@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:81\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        sourceFolderHost\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'DNS host name of file server hosting sourceFolder, optionally including a protocol e.g. [protocol://]fileserver1.example.com'})@IsOptional()@IsFQDN()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:91\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        techniques\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TechniqueClass[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'array', items: undefined, required: false, default: undefined, description: 'Stores the metadata information for techniques.'})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:249\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, enum: undefined, description: 'Characterize type of dataset, either 'raw' or 'derived'. Autofilled when choosing the proper inherited models.'})@IsEnum(DatasetType)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:156\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        validationStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Defines a level of trust, e.g. a measure of how much data was verified or used by other persons.'})@IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:166\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Version of the API used in creation of the dataset.'})@IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDatasetDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDatasetDto:225\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        accessGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, required: false, description: 'List of groups which have access to this item.'})@IsOptional()@IsString({each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        instrumentGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: false, description: 'Group of the instrument which this item was acquired on.'})@IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        ownerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true, description: 'Name of the group owning this item.'})@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         OwnableDto\n\n                            \n                        \n                    \n                        \n                                Defined in         OwnableDto:11\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateDatasetDto } from \"./create-dataset.dto\";\n\nexport class UpdateDatasetDto extends CreateDatasetDto {}\nexport class PartialUpdateDatasetDto extends PartialType(CreateDatasetDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateInstrumentDto.html":{"url":"classes/UpdateInstrumentDto.html","title":"class - UpdateInstrumentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateInstrumentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/instruments/dto/update-instrument.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateInstrumentDto } from \"./create-instrument.dto\";\n\nexport class UpdateInstrumentDto extends PartialType(CreateInstrumentDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateJobDto } from \"./create-job.dto\";\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrigDatablockDto.html":{"url":"classes/UpdateOrigDatablockDto.html","title":"class - UpdateOrigDatablockDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrigDatablockDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/origdatablocks/dto/update-origdatablock.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateOrigDatablockDto } from \"./create-origdatablock.dto\";\n\nexport class UpdateOrigDatablockDto extends PartialType(\n  CreateOrigDatablockDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePolicyDto.html":{"url":"classes/UpdatePolicyDto.html","title":"class - UpdatePolicyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePolicyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/policies/dto/update-policy.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreatePolicyDto } from \"./create-policy.dto\";\n\nexport class UpdatePolicyDto extends PartialType(CreatePolicyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProposalDto.html":{"url":"classes/UpdateProposalDto.html","title":"class - UpdateProposalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProposalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/proposals/dto/update-proposal.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                proposalId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        proposalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/proposals/dto/update-proposal.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { Exclude } from \"class-transformer\";\nimport { IsOptional } from \"class-validator\";\nimport { CreateProposalDto } from \"./create-proposal.dto\";\n\nexport class UpdateProposalDto extends PartialType(CreateProposalDto) {\n  @IsOptional()\n  @Exclude()\n  readonly proposalId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePublishedDataDto.html":{"url":"classes/UpdatePublishedDataDto.html","title":"class - UpdatePublishedDataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePublishedDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/published-data/dto/update-published-data.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreatePublishedDataDto } from \"./create-published-data.dto\";\n\nexport class UpdatePublishedDataDto extends PartialType(\n  CreatePublishedDataDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSampleDto.html":{"url":"classes/UpdateSampleDto.html","title":"class - UpdateSampleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSampleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/samples/dto/update-sample.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateSampleDto } from \"./create-sample.dto\";\n\nexport class UpdateSampleDto extends PartialType(CreateSampleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserIdentityDto.html":{"url":"classes/UpdateUserIdentityDto.html","title":"class - UpdateUserIdentityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserIdentityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user-identity.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateUserIdentityDto } from \"./create-user-identity.dto\";\n\nexport class UpdateUserIdentityDto extends PartialType(CreateUserIdentityDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserSettingsDto.html":{"url":"classes/UpdateUserSettingsDto.html","title":"class - UpdateUserSettingsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserSettingsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user-settings.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateUserSettingsDto } from \"./create-user-settings.dto\";\n\nexport class UpdateUserSettingsDto extends PartialType(CreateUserSettingsDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateWherePolicyDto.html":{"url":"classes/UpdateWherePolicyDto.html","title":"class - UpdateWherePolicyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateWherePolicyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/policies/dto/update-where-policy.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                data\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                ownerGroupList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdatePolicyDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/dto/update-where-policy.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        ownerGroupList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/policies/dto/update-where-policy.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { IsObject, IsOptional, IsString } from \"class-validator\";\nimport { UpdatePolicyDto } from \"./update-policy.dto\";\n\nexport class UpdateWherePolicyDto {\n  @IsString()\n  @IsOptional()\n  readonly ownerGroupList: string;\n\n  @IsObject()\n  @IsOptional()\n  @Type(() => UpdatePolicyDto)\n  readonly data: UpdatePolicyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    \n                                    \n                                authStrategy\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                emailVerified\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                realm\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                            \n                                    \n                                    \n                                userSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        authStrategy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        emailVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop({required: false, select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        realm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userSettings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserSettings\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop({type: UserSettingsSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport * as mongoose from \"mongoose\";\nimport { UserSettings, UserSettingsSchema } from \"./user-settings.schema\";\n\nexport type UserDocument = User & mongoose.Document;\n\n@Schema({\n  collection: \"User\",\n  toJSON: {\n    getters: true,\n  },\n})\nexport class User {\n  _id: string;\n\n  id?: string;\n\n  @ApiProperty()\n  @Prop({ required: false })\n  realm: string;\n\n  @ApiProperty()\n  @Prop({ required: true })\n  username: string;\n\n  @ApiProperty()\n  @Prop({ required: false, select: false })\n  password: string;\n\n  @ApiProperty()\n  @Prop({ required: true, unique: true })\n  email: string;\n\n  @ApiProperty()\n  @Prop({ required: false })\n  emailVerified: boolean;\n\n  @ApiProperty()\n  @Prop({ type: UserSettingsSchema })\n  userSettings: UserSettings;\n\n  @ApiProperty()\n  @Prop({ type: String, required: false })\n  authStrategy: string;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserIdentitiesController.html":{"url":"controllers/UserIdentitiesController.html","title":"controller - UserIdentitiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserIdentitiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user-identities.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                useridentities\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Async\n                                isValidEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(headers: Record, request: Request, queryFilters?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get('/findOne')\n                \n            \n\n            \n                \n                    Defined in src/users/user-identities.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headers\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryFilters\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        isValidEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidEmail(headers: Record, queryFilters?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@Get('/isValidEmail')\n                \n            \n\n            \n                \n                    Defined in src/users/user-identities.controller.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headers\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryFilters\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  ForbiddenException,\n  Get,\n  Headers,\n  NotFoundException,\n  Query,\n  Req,\n  UseGuards,\n} from \"@nestjs/common\";\nimport { ApiBearerAuth, ApiTags } from \"@nestjs/swagger\";\nimport { Action } from \"src/casl/action.enum\";\nimport { AppAbility, CaslAbilityFactory } from \"src/casl/casl-ability.factory\";\nimport { CheckPolicies } from \"src/casl/decorators/check-policies.decorator\";\nimport { PoliciesGuard } from \"src/casl/guards/policies.guard\";\nimport { UserIdentity } from \"./schemas/user-identity.schema\";\nimport { UserIdentitiesService } from \"./user-identities.service\";\nimport { Request } from \"express\";\nimport { JWTUser } from \"src/auth/interfaces/jwt-user.interface\";\nimport { User } from \"./schemas/user.schema\";\n\n@ApiBearerAuth()\n@ApiTags(\"user identities\")\n@Controller(\"useridentities\")\nexport class UserIdentitiesController {\n  constructor(\n    private userIdentitiesService: UserIdentitiesService,\n    private caslAbilityFactory: CaslAbilityFactory,\n  ) {}\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies(\n    (ability: AppAbility) =>\n      ability.can(Action.UserReadOwn, User) ||\n      ability.can(Action.UserReadAny, User),\n  )\n  @Get(\"/findOne\")\n  async findOne(\n    // NOTE: This now supports both headers filter and query filter.\n    // There is a loopback config file where we have this as a setting on the frontend.\n    // In the future if we fully migrate to the new backend we can only support query filters.\n    @Headers() headers: Record,\n    @Req() request: Request,\n    @Query(\"filter\") queryFilters?: string,\n  ): Promise {\n    const parsedQueryFilters = JSON.parse(queryFilters ?? \"{}\");\n    let filter = {};\n    if (headers.filter) {\n      const parsedFilter = JSON.parse(headers.filter);\n      if (parsedFilter.where) {\n        filter = parsedFilter.where;\n      }\n    } else if (parsedQueryFilters.where) {\n      filter = parsedQueryFilters.where;\n    }\n\n    const authenticatedUser: JWTUser = request.user as JWTUser;\n    const ability = await this.caslAbilityFactory.createForUser(\n      authenticatedUser,\n    );\n\n    if (\n      !ability.can(Action.UserReadAny, User) &&\n      ability.can(Action.UserReadOwn, User)\n    ) {\n      // this user can only see his/her user identity\n      filter = { userId: authenticatedUser._id, ...filter };\n    }\n\n    const identity = (await this.userIdentitiesService.findOne(\n      filter,\n    )) as UserIdentity;\n\n    if (!identity) {\n      throw new NotFoundException();\n    }\n\n    const user = new User();\n    user._id = identity.userId;\n    user.id = identity.userId;\n    if (\n      !ability.can(Action.UserReadOwn, user) &&\n      !ability.can(Action.UserReadAny, User)\n    ) {\n      throw new ForbiddenException(\"Access Forbidden or Unauthorized\");\n    }\n\n    return identity;\n  }\n\n  @UseGuards(PoliciesGuard)\n  @Get(\"/isValidEmail\")\n  async isValidEmail(\n    // NOTE: This now supports both headers filter and query filter.\n    // There is a loopback config file where we have this as a setting on the frontend.\n    // In the future if we fully migrate to the new backend we can only support query filters.\n    @Headers() headers: Record,\n    @Query(\"filter\") queryFilters?: string,\n  ): Promise {\n    const parsedQueryFilters = JSON.parse(queryFilters ?? \"{}\");\n    let filter = {};\n    if (headers.filter) {\n      const parsedFilter = JSON.parse(headers.filter);\n      if (parsedFilter.where) {\n        filter = parsedFilter.where;\n      }\n    } else if (parsedQueryFilters.where) {\n      filter = parsedQueryFilters.where;\n    }\n\n    const identity = (await this.userIdentitiesService.findOne(\n      filter,\n    )) as UserIdentity;\n\n    if (!identity) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserIdentitiesService.html":{"url":"injectables/UserIdentitiesService.html","title":"injectable - UserIdentitiesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserIdentitiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user-identities.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userIdentityModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/user-identities.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userIdentityModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/users/user-identities.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { FilterQuery, Model } from \"mongoose\";\nimport {\n  UserIdentity,\n  UserIdentityDocument,\n} from \"./schemas/user-identity.schema\";\n\n@Injectable()\nexport class UserIdentitiesService {\n  constructor(\n    @InjectModel(UserIdentity.name)\n    private userIdentityModel: Model,\n  ) {}\n\n  async findOne(\n    filter: FilterQuery,\n  ): Promise {\n    return this.userIdentityModel.findOne(filter).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserIdentity.html":{"url":"classes/UserIdentity.html","title":"class - UserIdentity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserIdentity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user-identity.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                authStrategy\n                            \n                            \n                                    \n                                created\n                            \n                            \n                                    \n                                credentials\n                            \n                            \n                                    \n                                externalId\n                            \n                            \n                                    \n                                modified\n                            \n                            \n                                    \n                                profile\n                            \n                            \n                                    \n                                provider\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        authStrategy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-identity.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        created\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-identity.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        credentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-identity.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-identity.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        modified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-identity.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserProfile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: UserProfile})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-identity.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-identity.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-identity.schema.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as mongoose from \"mongoose\";\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\nimport { UserProfile } from \"./user-profile.schema\";\n\nexport type UserIdentityDocument = UserIdentity & Document;\n\n@Schema({\n  collection: \"UserIdentity\",\n  toJSON: {\n    getters: true,\n  },\n  timestamps: { createdAt: \"created\", updatedAt: \"modified\" },\n})\nexport class UserIdentity {\n  @Prop()\n  authStrategy: string;\n\n  @Prop({ type: Date })\n  created: Date;\n\n  @Prop({ type: Object })\n  credentials: Record;\n\n  @Prop()\n  externalId: string;\n\n  @Prop({ type: Date })\n  modified: Date;\n\n  @Prop({ type: UserProfile })\n  profile: UserProfile;\n\n  @Prop()\n  provider: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: \"User\" })\n  userId: string;\n}\n\nexport const UserIdentitySchema = SchemaFactory.createForClass(UserIdentity);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserPayload.html":{"url":"interfaces/UserPayload.html","title":"interface - UserPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/userPayload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            accessGroupProperty\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payload\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessGroupProperty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessGroupProperty:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payload:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserPayload {\n  userId: string;\n  username?: string;\n  email?: string;\n  accessGroupProperty?: string;\n  payload?: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfile.html":{"url":"classes/UserProfile.html","title":"class - UserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user-profile.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessGroups\n                            \n                            \n                                    \n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    Optional\n                                emails\n                            \n                            \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    Optional\n                                thumbnailPhoto\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessGroups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-profile.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-profile.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-profile.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        emails\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-profile.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-profile.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        thumbnailPhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-profile.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-profile.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document } from \"mongoose\";\n\nexport type UserProfileDocument = UserProfile & Document;\n\n@Schema()\nexport class UserProfile {\n  @Prop()\n  displayName?: string;\n\n  @Prop()\n  email: string;\n\n  @Prop()\n  username: string;\n\n  @Prop()\n  thumbnailPhoto?: string;\n\n  @Prop()\n  id?: string;\n\n  @Prop({ type: [Object] })\n  emails?: Record[];\n\n  @Prop({ type: [String] })\n  accessGroups: string[];\n}\n\nexport const UserProfileSchema = SchemaFactory.createForClass(UserProfile);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRole.html":{"url":"classes/UserRole.html","title":"class - UserRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user-role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                roleId\n                            \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop({type: undefined, ref: 'Role'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-role.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Prop({type: undefined, ref: 'User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-role.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport * as mongoose from \"mongoose\";\n\nexport type UserRoleDocument = UserRole & mongoose.Document;\n\n@Schema({\n  collection: \"UserRole\",\n})\nexport class UserRole {\n  @ApiProperty()\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: \"User\" })\n  userId: string;\n\n  @ApiProperty()\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: \"Role\" })\n  roleId: string;\n}\n\nexport const UserRoleSchema = SchemaFactory.createForClass(UserRole);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSettings.html":{"url":"classes/UserSettings.html","title":"class - UserSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user-settings.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    \n                                    \n                                columns\n                            \n                            \n                                    \n                                    \n                                datasetCount\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                jobCount\n                            \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-settings.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, default: undefined, description: 'Array of the users preferred columns in dataset table'})@Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-settings.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        datasetCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, default: 25, description: 'The users preferred number of datasets to view per page'})@Prop({type: Number, default: 25})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-settings.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-settings.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, default: 25, description: 'The users preferred number of jobs to view per page'})@Prop({type: Number, default: 25})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-settings.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, required: true})@Prop({type: undefined, ref: 'User', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user-settings.schema.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as mongoose from \"mongoose\";\nimport { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\nimport { Document } from \"mongoose\";\n\nexport type UserSettingsDocument = UserSettings & Document;\n\n@Schema({\n  collection: \"UserSetting\",\n  toJSON: {\n    getters: true,\n  },\n})\nexport class UserSettings {\n  _id: string;\n\n  id?: string;\n\n  @ApiProperty({\n    type: [Object],\n    default: [],\n    description: \"Array of the users preferred columns in dataset table\",\n  })\n  @Prop({ type: [Object], default: [] })\n  columns: Record[];\n\n  @ApiProperty({\n    type: Number,\n    default: 25,\n    description: \"The users preferred number of datasets to view per page\",\n  })\n  @Prop({ type: Number, default: 25 })\n  datasetCount: number;\n\n  @ApiProperty({\n    type: Number,\n    default: 25,\n    description: \"The users preferred number of jobs to view per page\",\n  })\n  @Prop({ type: Number, default: 25 })\n  jobCount: number;\n\n  @ApiProperty({ type: String, required: true })\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: \"User\", required: true })\n  userId: string;\n}\n\nexport const UserSettingsSchema = SchemaFactory.createForClass(UserSettings);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                canUserCreateDataset\n                            \n                            \n                                    Async\n                                checkUserAuthorization\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                createCustomJWT\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createSettings\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getSettings\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getUserIdentity\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                getUserJWT\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                patchSettings\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                removeSettings\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                updateSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        canUserCreateDataset\n                        \n                    \n                \n            \n            \n                \n                    \n                    canUserCreateDataset(request: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get('/:id/authorization/dataset/create')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkUserAuthorization\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkUserAuthorization(request: Request, actions: Action[], viewedUserId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    actions\n                                    \n                                                Action[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    viewedUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        createCustomJWT\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCustomJWT(request: Request, id: string, jwtProperties: CreateCustomJwt)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Post('/:id/jwt')@ApiOperation({summary: 'It creates a new jwt token for the user specified.', description: 'It creates a new jwt token for the user specified. Only users in admin groups can create use this endpoint. Token expiration can be custom. Use 'expiresIn: never' for tokens that have no expiration.'})@ApiBody({type: CreateCustomJwt})@ApiResponse({status: 201, type: CreateUserJWT, description: 'Create a new JWT token for specified user with custom properties'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:305\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jwtProperties\n                                    \n                                                CreateCustomJwt\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        createSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSettings(request: Request, id: string, createUserSettingsDto: CreateUserSettingsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Post('/:id/settings')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserSettingsDto\n                                    \n                                                CreateUserSettingsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(request: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@UseInterceptors(CreateUserSettingsInterceptor)@Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSettings(request: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get('/:id/settings')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getUserIdentity\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserIdentity(request: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Get(':id/userIdentity')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        getUserJWT\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserJWT(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @AllowAny()@Post('jwt')@ApiOperation({summary: 'It creates a new jwt token.', description: 'It creates a new jwt token. It will be anonymous if no user is logged in.'})@ApiResponse({status: 201, type: CreateUserJWT, description: 'Create a new JWT token for anonymous or the user that is currently logged in'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: Record)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: CredentialsDto})@AllowAny()@UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiOperation({summary: 'It logs the current user out.', description: 'It logs out the current user.'})@ApiResponse({status: 200, description: 'User logged out'})@HttpCode(200)@Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        patchSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    patchSettings(request: Request, id: string, updateUserSettingsDto: UpdateUserSettingsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Patch('/:id/settings')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserSettingsDto\n                                    \n                                                UpdateUserSettingsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        removeSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeSettings(request: Request, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Delete('/:id/settings')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:236\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        updateSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSettings(request: Request, id: string, updateUserSettingsDto: UpdateUserSettingsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(PoliciesGuard)@CheckPolicies(ability => )@Put('/:id/settings')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserSettingsDto\n                                    \n                                                UpdateUserSettingsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Param,\n  UseGuards,\n  Req,\n  Patch,\n  Delete,\n  UseInterceptors,\n  Put,\n  Body,\n  ForbiddenException,\n  HttpCode,\n} from \"@nestjs/common\";\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { Action } from \"src/casl/action.enum\";\nimport { AppAbility, CaslAbilityFactory } from \"src/casl/casl-ability.factory\";\nimport { CheckPolicies } from \"src/casl/decorators/check-policies.decorator\";\nimport { PoliciesGuard } from \"src/casl/guards/policies.guard\";\nimport { UserIdentity } from \"./schemas/user-identity.schema\";\nimport { UsersService } from \"./users.service\";\nimport { CreateUserJWT } from \"./dto/create-user-jwt.dto\";\nimport { AllowAny } from \"src/auth/decorators/allow-any.decorator\";\nimport { Request, Response } from \"express\";\nimport { JWTUser } from \"../auth/interfaces/jwt-user.interface\";\nimport { UserSettings } from \"./schemas/user-settings.schema\";\nimport { CreateUserSettingsDto } from \"./dto/create-user-settings.dto\";\nimport { UpdateUserSettingsDto } from \"./dto/update-user-settings.dto\";\nimport { User } from \"./schemas/user.schema\";\nimport { CreateUserSettingsInterceptor } from \"./interceptors/create-user-settings.interceptor\";\nimport { AuthService } from \"src/auth/auth.service\";\nimport { CredentialsDto } from \"src/auth/dto/credentials.dto\";\nimport { LocalAuthGuard } from \"src/auth/guards/local-auth.guard\";\nimport { DatasetClass } from \"src/datasets/schemas/dataset.schema\";\nimport { JwtAuthGuard } from \"src/auth/guards/jwt-auth.guard\";\nimport { JwtSignOptions } from \"@nestjs/jwt\";\nimport { CreateCustomJwt } from \"./dto/create-custom-jwt.dto\";\n//import { AuthController } from \"src/auth/auth.controller\";\n\n@ApiBearerAuth()\n@ApiTags(\"users\")\n@Controller(\"users\")\nexport class UsersController {\n  constructor(\n    private authService: AuthService,\n    private usersService: UsersService,\n    private caslAbilityFactory: CaslAbilityFactory,\n  ) {}\n\n  async checkUserAuthorization(\n    request: Request,\n    actions: Action[],\n    viewedUserId: string,\n  ) {\n    const authenticatedUser: JWTUser = request.user as JWTUser;\n    const viewedUserSchema = new User();\n    viewedUserSchema._id = viewedUserId;\n    viewedUserSchema.id = viewedUserId;\n\n    const ability = await this.caslAbilityFactory.createForUser(\n      authenticatedUser,\n    );\n    // const authorized = actions.map( action =>\n    //   ability.can(action, viewedUserSchema)\n    // ) as Array;\n    if (!actions.some((action) => ability.can(action, viewedUserSchema))) {\n      throw new ForbiddenException(\"Access Forbidden or Unauthorized\");\n    }\n  }\n\n  @AllowAny()\n  @Post(\"jwt\")\n  @ApiOperation({\n    summary: \"It creates a new jwt token.\",\n    description:\n      \"It creates a new jwt token. It will be anonymous if no user is logged in.\",\n  })\n  @ApiResponse({\n    status: 201,\n    type: CreateUserJWT,\n    description:\n      \"Create a new JWT token for anonymous or the user that is currently logged in\",\n  })\n  async getUserJWT(@Req() request: Request): Promise {\n    return this.usersService.createUserJWT(request.user as JWTUser);\n  }\n\n  @ApiBody({ type: CredentialsDto })\n  @AllowAny()\n  @UseGuards(LocalAuthGuard)\n  @Post(\"login\")\n  async login(\n    @Req() req: Record,\n  ): Promise> {\n    return await this.authService.login(req.user as Omit);\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies(\n    (ability: AppAbility) =>\n      ability.can(Action.UserReadOwn, User) ||\n      ability.can(Action.UserReadAny, User),\n  )\n  @UseInterceptors(CreateUserSettingsInterceptor)\n  @Get(\"/:id\")\n  async findById(\n    @Req() request: Request,\n    @Param(\"id\") id: string,\n  ): Promise | null> {\n    await this.checkUserAuthorization(\n      request,\n      [Action.UserReadAny, Action.UserReadOwn],\n      id,\n    );\n    return this.usersService.findById(id);\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies(\n    (ability: AppAbility) =>\n      ability.can(Action.UserReadOwn, User) ||\n      ability.can(Action.UserReadAny, User),\n  )\n  @Get(\":id/userIdentity\")\n  async getUserIdentity(\n    @Req() request: Request,\n    @Param(\"id\") id: string,\n  ): Promise {\n    await this.checkUserAuthorization(\n      request,\n      [Action.UserReadAny, Action.UserReadOwn],\n      id,\n    );\n    return this.usersService.findByIdUserIdentity(id);\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies(\n    (ability: AppAbility) =>\n      ability.can(Action.UserCreateOwn, User) ||\n      ability.can(Action.UserCreateAny, User),\n  )\n  @Post(\"/:id/settings\")\n  async createSettings(\n    @Req() request: Request,\n    @Param(\"id\") id: string,\n    @Body() createUserSettingsDto: CreateUserSettingsDto,\n  ): Promise {\n    await this.checkUserAuthorization(\n      request,\n      [Action.UserCreateAny, Action.UserCreateOwn],\n      id,\n    );\n    return this.usersService.createUserSettings(id, createUserSettingsDto);\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies(\n    (ability: AppAbility) =>\n      ability.can(Action.UserReadOwn, User) ||\n      ability.can(Action.UserReadAny, User),\n  )\n  @Get(\"/:id/settings\")\n  async getSettings(\n    @Req() request: Request,\n    @Param(\"id\") id: string,\n  ): Promise {\n    await this.checkUserAuthorization(\n      request,\n      [Action.UserReadAny, Action.UserReadOwn],\n      id,\n    );\n    return this.usersService.findByIdUserSettings(id);\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies(\n    (ability: AppAbility) =>\n      ability.can(Action.UserUpdateOwn, User) ||\n      ability.can(Action.UserUpdateAny, User),\n  )\n  @Put(\"/:id/settings\")\n  async updateSettings(\n    @Req() request: Request,\n    @Param(\"id\") id: string,\n    @Body() updateUserSettingsDto: UpdateUserSettingsDto,\n  ): Promise {\n    await this.checkUserAuthorization(\n      request,\n      [Action.UserUpdateAny, Action.UserUpdateOwn],\n      id,\n    );\n    return this.usersService.findOneAndUpdateUserSettings(\n      id,\n      updateUserSettingsDto,\n    );\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies(\n    (ability: AppAbility) =>\n      ability.can(Action.UserUpdateOwn, User) ||\n      ability.can(Action.UserUpdateAny, User),\n  )\n  @Patch(\"/:id/settings\")\n  async patchSettings(\n    @Req() request: Request,\n    @Param(\"id\") id: string,\n    updateUserSettingsDto: UpdateUserSettingsDto,\n  ): Promise {\n    await this.checkUserAuthorization(\n      request,\n      [Action.UserUpdateAny, Action.UserUpdateOwn],\n      id,\n    );\n    return this.usersService.findOneAndUpdateUserSettings(\n      id,\n      updateUserSettingsDto,\n    );\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies(\n    (ability: AppAbility) =>\n      ability.can(Action.UserDeleteOwn, User) ||\n      ability.can(Action.UserDeleteAny, User),\n  )\n  @Delete(\"/:id/settings\")\n  async removeSettings(\n    @Req() request: Request,\n    @Param(\"id\") id: string,\n  ): Promise {\n    await this.checkUserAuthorization(\n      request,\n      [Action.UserUpdateAny, Action.UserUpdateOwn],\n      id,\n    );\n    return this.usersService.findOneAndRemoveUserSettings(id);\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) => {\n    return (\n      ability.can(Action.UserReadOwn, User) ||\n      ability.can(Action.UserReadAny, User)\n    );\n  })\n  @Get(\"/:id/authorization/dataset/create\")\n  async canUserCreateDataset(\n    @Req() request: Request,\n    @Param(\"id\") id: string,\n  ): Promise {\n    await this.checkUserAuthorization(\n      request,\n      [Action.UserReadAny, Action.UserReadOwn],\n      id,\n    );\n    const viewedUser = (await this.usersService.findById2JWTUser(\n      id,\n    )) as JWTUser;\n    const ability = await this.caslAbilityFactory.createForUser(viewedUser);\n\n    return { authorization: ability.can(Action.Create, DatasetClass) };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({\n    summary: \"It logs the current user out.\",\n    description: \"It logs out the current user.\",\n  })\n  @ApiResponse({\n    status: 200,\n    description: \"User logged out\",\n  })\n  @HttpCode(200)\n  @Post(\"logout\")\n  async logout(@Req() req: Request) {\n    return this.authService.logout(req);\n  }\n\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies((ability: AppAbility) =>\n    ability.can(Action.UserCreateJwt, User),\n  )\n  @Post(\"/:id/jwt\")\n  @ApiOperation({\n    summary: \"It creates a new jwt token for the user specified.\",\n    description:\n      \"It creates a new jwt token for the user specified. Only users in admin groups can create use this endpoint. Token expiration can be custom. Use 'expiresIn: never' for tokens that have no expiration.\",\n  })\n  @ApiBody({ type: CreateCustomJwt })\n  @ApiResponse({\n    status: 201,\n    type: CreateUserJWT,\n    description:\n      \"Create a new JWT token for specified user with custom properties\",\n  })\n  async createCustomJWT(\n    @Req() request: Request,\n    @Param(\"id\") id: string,\n    @Body() jwtProperties: CreateCustomJwt,\n  ): Promise {\n    const viewedUser = (await this.usersService.findById(id)) as Omit;\n\n    if (viewedUser) {\n      return this.usersService.createCustomJWT(\n        JSON.parse(JSON.stringify(viewedUser)),\n        jwtProperties as JwtSignOptions,\n      );\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersLogbooksInterceptor.html":{"url":"injectables/UsersLogbooksInterceptor.html","title":"injectable - UsersLogbooksInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersLogbooksInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logbooks/interceptors/users-logbooks.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(proposalsService: ProposalsService)\n                    \n                \n                        \n                            \n                                Defined in src/logbooks/interceptors/users-logbooks.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        proposalsService\n                                                  \n                                                        \n                                                                        ProposalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/logbooks/interceptors/users-logbooks.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from \"@nestjs/common\";\nimport { map, Observable } from \"rxjs\";\nimport { ProposalsService } from \"src/proposals/proposals.service\";\nimport { Logbook } from \"../schemas/logbook.schema\";\nimport { Role } from \"src/auth/role.enum\";\n@Injectable()\nexport class UsersLogbooksInterceptor implements NestInterceptor {\n  constructor(private readonly proposalsService: ProposalsService) {}\n\n  async intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Promise> {\n    const usersGroups = context.getArgs()[1].req.user.currentGroups;\n    const isAdmin = usersGroups.includes(Role.Admin);\n    const proposals = await this.proposalsService.findAll({\n      where: { ownerGroup: { $in: usersGroups } },\n    });\n    const proposalIds = proposals.map((proposal) => proposal.proposalId);\n\n    return next.handle().pipe(\n      map((payload: unknown) => {\n        if (Array.isArray(payload)) {\n          const filteredLogbook = (payload as Logbook[]).filter(\n            (logbook) => proposalIds.includes(logbook?.name) || isAdmin,\n          );\n          return filteredLogbook;\n        }\n\n        return proposalIds.includes((payload as Logbook)?.name) || isAdmin\n          ? (payload as Logbook)\n          : null;\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nRolesService  -->\n\nUsersModule->RolesService \n\n\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nUsersModule -->\n\nCaslAbilityFactory->UsersModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nUsersModule -->\n\nRolesService->UsersModule\n\n\n\n\n\nUserIdentitiesService\n\nUserIdentitiesService\n\nUsersModule -->\n\nUserIdentitiesService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            CaslAbilityFactory\n                        \n                        \n                            RolesService\n                        \n                        \n                            UserIdentitiesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                        \n                            UserIdentitiesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { User, UserSchema } from \"./schemas/user.schema\";\nimport { UsersService } from \"./users.service\";\nimport { UsersController } from \"./users.controller\";\nimport {\n  UserIdentity,\n  UserIdentitySchema,\n} from \"./schemas/user-identity.schema\";\nimport { RolesService } from \"./roles.service\";\nimport { Role, RoleSchema } from \"./schemas/role.schema\";\nimport { UserRole, UserRoleSchema } from \"./schemas/user-role.schema\";\nimport { CaslAbilityFactory } from \"src/casl/casl-ability.factory\";\nimport { JwtModule } from \"@nestjs/jwt\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport {\n  UserSettings,\n  UserSettingsSchema,\n} from \"./schemas/user-settings.schema\";\nimport { UserIdentitiesController } from \"./user-identities.controller\";\nimport { UserIdentitiesService } from \"./user-identities.service\";\nimport { AuthService } from \"src/auth/auth.service\";\nimport { accessGroupServiceFactory } from \"src/auth/access-group-provider/access-group-service-factory\";\n\n@Module({\n  imports: [\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get(\"jwt.secret\"),\n        signOptions: { expiresIn: configService.get(\"jwt.expiresIn\") },\n      }),\n      inject: [ConfigService],\n    }),\n    ConfigModule,\n    MongooseModule.forFeature([\n      {\n        name: UserIdentity.name,\n        schema: UserIdentitySchema,\n      },\n      {\n        name: Role.name,\n        schema: RoleSchema,\n      },\n      {\n        name: User.name,\n        schema: UserSchema,\n      },\n      {\n        name: UserRole.name,\n        schema: UserRoleSchema,\n      },\n      {\n        name: UserSettings.name,\n        schema: UserSettingsSchema,\n      },\n    ]),\n  ],\n  providers: [\n    AuthService,\n    CaslAbilityFactory,\n    UsersService,\n    UserIdentitiesService,\n    RolesService,\n    accessGroupServiceFactory,\n  ],\n  exports: [UsersService, RolesService],\n  controllers: [UsersController, UserIdentitiesController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createCustomJWT\n                            \n                            \n                                    Async\n                                createUserIdentity\n                            \n                            \n                                    Async\n                                createUserJWT\n                            \n                            \n                                    Async\n                                createUserSettings\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findById2JWTUser\n                            \n                            \n                                    Async\n                                findByIdUserIdentity\n                            \n                            \n                                    Async\n                                findByIdUserSettings\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneAndRemoveUserSettings\n                            \n                            \n                                    Async\n                                findOneAndUpdateUserSettings\n                            \n                            \n                                    Async\n                                findOrCreate\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                removeUserIdentity\n                            \n                            \n                                    Async\n                                updateUserIdentity\n                            \n                            \n                                    Async\n                                userExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, jwtService: JwtService, rolesService: RolesService, userModel: Model, userIdentityModel: Model, userSettingsModel: Model, accessGroupService: AccessGroupService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userIdentityModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userSettingsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessGroupService\n                                                  \n                                                        \n                                                                        AccessGroupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCustomJWT\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCustomJWT(user: Omit, jwtProperties: JwtSignOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:305\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                Omit\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jwtProperties\n                                    \n                                            JwtSignOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUserIdentity\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserIdentity(createUserIdentityDto: CreateUserIdentityDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserIdentityDto\n                                    \n                                                CreateUserIdentityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUserJWT\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserJWT(accessToken: JWTUser | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:279\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                JWTUser | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUserSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserSettings(userId: string, createUserSettingsDto: CreateUserSettingsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:251\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserSettingsDto\n                                    \n                                                CreateUserSettingsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById2JWTUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById2JWTUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByIdUserIdentity\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdUserIdentity(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByIdUserSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdUserSettings(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:262\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: FilterQuery, includePassword)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    includePassword\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneAndRemoveUserSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAndRemoveUserSettings(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:275\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneAndUpdateUserSettings\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAndUpdateUserSettings(userId: string, updateUserSettingsDto: UpdateUserSettingsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserSettingsDto\n                                    \n                                                UpdateUserSettingsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOrCreate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOrCreate(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeUserIdentity\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUserIdentity(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserIdentity\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserIdentity(updateUserIdentityDto: UpdateUserIdentityDto, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:229\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserIdentityDto\n                                    \n                                                UpdateUserIdentityDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        userExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    userExists(filter: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { genSalt, hash } from \"bcrypt\";\nimport { FilterQuery, Model, ObjectId } from \"mongoose\";\nimport { CreateUserIdentityDto } from \"./dto/create-user-identity.dto\";\nimport { CreateUserDto } from \"./dto/create-user.dto\";\nimport { RolesService } from \"./roles.service\";\nimport {\n  UserIdentity,\n  UserIdentityDocument,\n} from \"./schemas/user-identity.schema\";\nimport { User, UserDocument } from \"./schemas/user.schema\";\nimport { CreateRoleDto } from \"./dto/create-role.dto\";\nimport { CreateUserRoleDto } from \"./dto/create-user-role.dto\";\nimport { CreateUserJWT } from \"./dto/create-user-jwt.dto\";\nimport { JwtService, JwtSignOptions } from \"@nestjs/jwt\";\nimport { JWTUser } from \"../auth/interfaces/jwt-user.interface\";\nimport * as fs from \"fs\";\nimport {\n  UserSettings,\n  UserSettingsDocument,\n} from \"./schemas/user-settings.schema\";\nimport { CreateUserSettingsDto } from \"./dto/create-user-settings.dto\";\nimport { UpdateUserSettingsDto } from \"./dto/update-user-settings.dto\";\nimport { UpdateUserIdentityDto } from \"./dto/update-user-identity.dto\";\nimport { UserPayload } from \"src/auth/interfaces/userPayload.interface\";\nimport { AccessGroupService } from \"src/auth/access-group-provider/access-group.service\";\n\n@Injectable()\nexport class UsersService implements OnModuleInit {\n  constructor(\n    private configService: ConfigService,\n    private jwtService: JwtService,\n    private rolesService: RolesService,\n    @InjectModel(User.name) private userModel: Model,\n    @InjectModel(UserIdentity.name)\n    private userIdentityModel: Model,\n    @InjectModel(UserSettings.name)\n    private userSettingsModel: Model,\n    private accessGroupService: AccessGroupService,\n  ) {}\n\n  async onModuleInit() {\n    let functionalAccounts =\n      this.configService.get(\"functionalAccounts\");\n\n    const filePath = \"functionalAccounts.json\";\n    if (fs.existsSync(filePath)) {\n      const data = fs.readFileSync(filePath, \"utf8\");\n      functionalAccounts = JSON.parse(data);\n    }\n\n    if (functionalAccounts && functionalAccounts.length > 0) {\n      const accountPromises = functionalAccounts.map(async (account) => {\n        const { role, global, ...createAccount } = account;\n        createAccount.authStrategy = \"local\";\n        const user = await this.findOrCreate(createAccount);\n        const roles: Record> = {};\n\n        if (user) {\n          const userPayload: UserPayload = {\n            userId: user.id as string,\n            username: user.username,\n            email: user.email,\n          };\n          const accessGroupsOrig =\n            await this.accessGroupService.getAccessGroups(userPayload);\n          const accessGroups = [...accessGroupsOrig];\n\n          if (role) {\n            // add role as access group\n            accessGroups.push(role);\n            if (!(role in roles)) {\n              roles[role] = [];\n            }\n            roles[role].push(user._id.toString());\n          }\n          if (global) {\n            accessGroups.push(\"globalaccess\");\n            if (!(\"globalaccess\" in roles)) {\n              roles[\"globalaccess\"] = [];\n            }\n            roles[\"globalaccess\"].push(user._id.toString());\n          }\n\n          // creates user identity to store access groups\n          const createUserIdentity: CreateUserIdentityDto = {\n            authStrategy: \"local\",\n            credentials: {},\n            externalId: \"\",\n            profile: {\n              displayName: account.username as string,\n              email: account.email as string,\n              username: account.username as string,\n              thumbnailPhoto: \"error: no photo found\",\n              emails: [{ value: account.email as string }],\n              accessGroups: [...new Set([role as string, ...accessGroups])],\n              id: user.id as string,\n            },\n            provider: \"local\",\n            userId: user._id,\n          };\n\n          const tempUserIdentity = await this.findByIdUserIdentity(user._id);\n          if (tempUserIdentity) {\n            await this.updateUserIdentity(createUserIdentity, user._id);\n          } else {\n            await this.createUserIdentity(createUserIdentity);\n          }\n        }\n        return roles;\n      });\n\n      const results = await Promise.all(accountPromises);\n      const roles = results.reduce((a, b) => {\n        Object.keys(b).forEach((k) => {\n          if (k in a) {\n            a[k] = a[k].concat(b[k]);\n          } else {\n            a[k] = b[k];\n          }\n        });\n        return a;\n      }, {});\n      if (roles) {\n        for (const [role, userIds] of Object.entries(roles)) {\n          const createRole: CreateRoleDto = {\n            name: role,\n          };\n          const createdRole = await this.rolesService.findOrCreate(createRole);\n          if (createdRole && userIds) {\n            userIds.forEach(async (userId) => {\n              const createUserRole: CreateUserRoleDto = {\n                userId: userId,\n                roleId: createdRole._id,\n              };\n              await this.rolesService.findOrCreateUserRole(createUserRole);\n            });\n          }\n        }\n      }\n    }\n  }\n\n  async userExists(filter: FilterQuery): Promise {\n    const user = await this.userModel.exists(filter);\n    return user ? true : false;\n  }\n\n  async create(createUserDto: CreateUserDto): Promise {\n    Logger.log(\n      `Creating user ${createUserDto.username} ( Strategy : ${createUserDto.authStrategy} )`,\n      \"UsersService\",\n    );\n\n    if (createUserDto.authStrategy !== \"local\") {\n      const { password, ...sanitizedCreateUserDto } = createUserDto;\n      const createdUser = new this.userModel(sanitizedCreateUserDto);\n      return createdUser.save();\n    } else if (createUserDto.password) {\n      const hashedPassword = await hash(\n        createUserDto.password,\n        await genSalt(),\n      );\n      const createUser = { ...createUserDto, password: hashedPassword };\n      const createdUser = new this.userModel(createUser);\n      return createdUser.save();\n    }\n    return null;\n  }\n\n  async findOrCreate(\n    createUserDto: CreateUserDto,\n  ): Promise | null> {\n    const userFilter: FilterQuery = {\n      $or: [\n        { username: createUserDto.username },\n        { email: createUserDto.email },\n      ],\n    };\n    const userExists = await this.userExists(userFilter);\n\n    if (userExists) {\n      return await this.findOne(userFilter);\n    }\n\n    return await this.create(createUserDto);\n  }\n\n  async findOne(\n    filter: FilterQuery,\n    includePassword = false,\n  ): Promise | null> {\n    return includePassword\n      ? this.userModel.findOne(filter).select(\"+password\").exec()\n      : this.userModel.findOne(filter).exec();\n  }\n\n  async findById(id: string): Promise | null> {\n    return this.userModel.findById(id).exec();\n  }\n\n  async findById2JWTUser(id: string): Promise {\n    const userIdentity = await this.userIdentityModel\n      .findOne({ userId: id })\n      .exec();\n    if (userIdentity) {\n      const userProfile = userIdentity.profile;\n      return {\n        _id: userProfile.id,\n        username: userProfile.username,\n        email: userProfile.email,\n        currentGroups: userProfile.accessGroups,\n      } as JWTUser;\n    }\n    return null;\n  }\n\n  async createUserIdentity(\n    createUserIdentityDto: CreateUserIdentityDto,\n  ): Promise {\n    const createdUserIdentity = new this.userIdentityModel(\n      createUserIdentityDto,\n    );\n    return createdUserIdentity.save();\n  }\n\n  async updateUserIdentity(\n    updateUserIdentityDto: UpdateUserIdentityDto,\n    userId: string,\n  ): Promise {\n    return this.userIdentityModel\n      .findOneAndUpdate({ userId }, updateUserIdentityDto, { new: true })\n      .exec();\n  }\n\n  // NOTE: This is just for testing purposes inside accessGroups.e2e-spec.ts\n  async removeUserIdentity(userId: string): Promise {\n    const removedUserIdentity = await this.userIdentityModel\n      .findOneAndDelete({ userId })\n      .exec();\n\n    return removedUserIdentity;\n  }\n\n  async findByIdUserIdentity(userId: string): Promise {\n    return this.userIdentityModel.findOne({ userId }).exec();\n  }\n\n  async createUserSettings(\n    userId: string,\n    createUserSettingsDto: CreateUserSettingsDto,\n  ): Promise {\n    const createdUserSettings = new this.userSettingsModel({\n      ...createUserSettingsDto,\n      userId,\n    });\n    return createdUserSettings.save();\n  }\n\n  async findByIdUserSettings(userId: string): Promise {\n    return this.userSettingsModel.findOne({ userId }).exec();\n  }\n\n  async findOneAndUpdateUserSettings(\n    userId: string,\n    updateUserSettingsDto: UpdateUserSettingsDto,\n  ): Promise {\n    return this.userSettingsModel\n      .findOneAndUpdate({ userId }, updateUserSettingsDto, { new: true })\n      .exec();\n  }\n\n  async findOneAndRemoveUserSettings(userId: string): Promise {\n    return this.userSettingsModel.findOneAndRemove({ userId }).exec();\n  }\n\n  async createUserJWT(\n    accessToken: JWTUser | undefined,\n  ): Promise {\n    const signAndVerifyOptions = {\n      expiresIn: this.configService.get(\"jwt.expiresIn\") || \"1h\",\n      secret: this.configService.get(\"jwt.secret\"),\n    };\n\n    if (!accessToken) {\n      const groups = [\"public\"];\n      const payload = {\n        username: \"anonymous\",\n        groups,\n      };\n      const jwtString = this.jwtService.sign(payload, signAndVerifyOptions);\n      return { jwt: jwtString };\n    }\n\n    const payload = {\n      username: accessToken._id,\n      groups: accessToken.currentGroups,\n    };\n    const jwtString = this.jwtService.sign(payload, signAndVerifyOptions);\n    return { jwt: jwtString };\n  }\n\n  async createCustomJWT(\n    user: Omit,\n    jwtProperties: JwtSignOptions,\n  ): Promise {\n    const signAndVerifyOptions: JwtSignOptions = {\n      ...jwtProperties,\n    } as JwtSignOptions;\n    if (signAndVerifyOptions.expiresIn == \"never\") {\n      signAndVerifyOptions.expiresIn =\n        this.configService.get(\"jwt.neverExpires\") || \"100y\";\n    } else if (\n      typeof signAndVerifyOptions.expiresIn === \"string\" &&\n      signAndVerifyOptions.expiresIn &&\n      !isNaN(+signAndVerifyOptions.expiresIn)\n    ) {\n      signAndVerifyOptions.expiresIn = parseInt(signAndVerifyOptions.expiresIn);\n    } else if (!signAndVerifyOptions.expiresIn) {\n      signAndVerifyOptions.expiresIn =\n        this.configService.get(\"jwt.expiresIn\") || \"1h\";\n    }\n    signAndVerifyOptions.secret = this.configService.get(\"jwt.secret\");\n    const jwtString = this.jwtService.sign(user, signAndVerifyOptions);\n    return { jwt: jwtString };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @babel/plugin-proposal-private-methods : ^7.18.6\n        \n            @casl/ability : ^6.3.2\n        \n            @nestjs-modules/mailer : ^1.8.1\n        \n            @nestjs/axios : ^3.0.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/event-emitter : ^2.0.1\n        \n            @nestjs/jwt : ^10.0.1\n        \n            @nestjs/mongoose : ^10.0.0\n        \n            @nestjs/passport : ^10.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^7.1.7\n        \n            @user-office-software/duo-message-broker : ^1.4.0\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            dotenv : ^16.0.3\n        \n            express-session : ^1.17.3\n        \n            handlebars : ^4.7.7\n        \n            lodash : ^4.17.21\n        \n            luxon : ^3.2.1\n        \n            mathjs : ^11.4.0\n        \n            migrate-mongo : ^10.0.0\n        \n            mongoose : ^7.4.3\n        \n            node-fetch : ^3.3.0\n        \n            nodemailer : ^6.7.8\n        \n            openid-client : ^5.1.8\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-ldapauth : ^3.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^5.0.0\n        \n            rxjs : ^7.5.7\n        \n            swagger-ui-express : ^5.0.0\n        \n            uuid : ^9.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Action   (src/.../action.enum.ts)\n                        \n                        \n                            DatasetState   (src/.../job-type.enum.ts)\n                        \n                        \n                            DatasetType   (src/.../dataset-type.enum.ts)\n                        \n                        \n                            JobType   (src/.../job-type.enum.ts)\n                        \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                        \n                            SampleField   (src/.../sample-field.enum.ts)\n                        \n                        \n                            ScientificRelation   (src/.../scientific-relation.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/casl/action.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Action\n                    \n                \n                        \n                            \n                                 Manage\n                            \n                        \n                        \n                            \n                                Value : manage\n                            \n                        \n                        \n                            \n                                 Create\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 Read\n                            \n                        \n                        \n                            \n                                Value : read\n                            \n                        \n                        \n                            \n                                 ReadOwn\n                            \n                        \n                        \n                            \n                                Value : readown\n                            \n                        \n                        \n                            \n                                 ReadAll\n                            \n                        \n                        \n                            \n                                Value : readall\n                            \n                        \n                        \n                            \n                                 Update\n                            \n                        \n                        \n                            \n                                Value : update\n                            \n                        \n                        \n                            \n                                 Delete\n                            \n                        \n                        \n                            \n                                Value : delete\n                            \n                        \n                        \n                            \n                                 ListOwn\n                            \n                        \n                        \n                            \n                                Value : listown\n                            \n                        \n                        \n                            \n                                 ListAll\n                            \n                        \n                        \n                            \n                                Value : listall\n                            \n                        \n                        \n                            \n                                 UserReadOwn\n                            \n                        \n                        \n                            \n                                Value : user_read_own\n                            \n                        \n                        \n                            \n                                 UserReadAny\n                            \n                        \n                        \n                            \n                                Value : user_read_any\n                            \n                        \n                        \n                            \n                                 UserCreateOwn\n                            \n                        \n                        \n                            \n                                Value : user_create_own\n                            \n                        \n                        \n                            \n                                 UserCreateAny\n                            \n                        \n                        \n                            \n                                Value : user_create_any\n                            \n                        \n                        \n                            \n                                 UserUpdateOwn\n                            \n                        \n                        \n                            \n                                Value : user_update_own\n                            \n                        \n                        \n                            \n                                 UserUpdateAny\n                            \n                        \n                        \n                            \n                                Value : user_update_any\n                            \n                        \n                        \n                            \n                                 UserDeleteOwn\n                            \n                        \n                        \n                            \n                                Value : user_delete_own\n                            \n                        \n                        \n                            \n                                 UserDeleteAny\n                            \n                        \n                        \n                            \n                                Value : user_delete_any\n                            \n                        \n                        \n                            \n                                 UserCreateJwt\n                            \n                        \n                        \n                            \n                                Value : user_create_jwt\n                            \n                        \n                        \n                            \n                                 InstrumentRead\n                            \n                        \n                        \n                            \n                                Value : instrument_read\n                            \n                        \n                        \n                            \n                                 InstrumentUpdate\n                            \n                        \n                        \n                            \n                                Value : instrument_update\n                            \n                        \n                        \n                            \n                                 InstrumentCreate\n                            \n                        \n                        \n                            \n                                Value : instrument_create\n                            \n                        \n                        \n                            \n                                 InstrumentDelete\n                            \n                        \n                        \n                            \n                                Value : instrument_delete\n                            \n                        \n            \n        \n\n    src/jobs/job-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DatasetState\n                    \n                \n                        \n                            \n                                 retrieve\n                            \n                        \n                        \n                            \n                                Value : retrievable\n                            \n                        \n                        \n                            \n                                 archive\n                            \n                        \n                        \n                            \n                                Value : archivable\n                            \n                        \n                        \n                            \n                                 public\n                            \n                        \n                        \n                            \n                                Value : isPublished\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        JobType\n                    \n                \n                        \n                            \n                                 Archive\n                            \n                        \n                        \n                            \n                                Value : archive\n                            \n                        \n                        \n                            \n                                 Retrieve\n                            \n                        \n                        \n                            \n                                Value : retrieve\n                            \n                        \n                        \n                            \n                                 Public\n                            \n                        \n                        \n                            \n                                Value : public\n                            \n                        \n            \n        \n\n    src/datasets/dataset-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DatasetType\n                    \n                \n                        \n                            \n                                 Raw\n                            \n                        \n                        \n                            \n                                Value : raw\n                            \n                        \n                        \n                            \n                                 Derived\n                            \n                        \n                        \n                            \n                                Value : derived\n                            \n                        \n            \n        \n\n    src/auth/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 Ingestor\n                            \n                        \n                        \n                            \n                                Value : ingestor\n                            \n                        \n                        \n                            \n                                 ArchiveManager\n                            \n                        \n                        \n                            \n                                Value : archivemanager\n                            \n                        \n                        \n                            \n                                 ProposalIngestor\n                            \n                        \n                        \n                            \n                                Value : proposalingestor\n                            \n                        \n                        \n                            \n                                 GlobalAccess\n                            \n                        \n                        \n                            \n                                Value : globalaccess\n                            \n                        \n            \n        \n\n    src/samples/sample-field.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        SampleField\n                    \n                \n                        \n                            \n                                 Text\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n                        \n                            \n                                 MetadataKey\n                            \n                        \n                        \n                            \n                                Value : metadataKey\n                            \n                        \n                        \n                            \n                                 Characteristics\n                            \n                        \n                        \n                            \n                                Value : characteristics\n                            \n                        \n            \n        \n\n    src/common/scientific-relation.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ScientificRelation\n                    \n                \n                        \n                            \n                                 EQUAL_TO_STRING\n                            \n                        \n                        \n                            \n                                Value : EQUAL_TO_STRING\n                            \n                        \n                        \n                            \n                                 EQUAL_TO_NUMERIC\n                            \n                        \n                        \n                            \n                                Value : EQUAL_TO_NUMERIC\n                            \n                        \n                        \n                            \n                                 GREATER_THAN\n                            \n                        \n                        \n                            \n                                Value : GREATER_THAN\n                            \n                        \n                        \n                            \n                                 LESS_THAN\n                            \n                        \n                        \n                            \n                                Value : LESS_THAN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            formRegistrationXML   (src/.../published-data.controller.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/published-data/published-data.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formRegistrationXML\n                        \n                    \n                \n            \n            \n                \nformRegistrationXML(publishedData: PublishedData)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    publishedData\n                                    \n                                                PublishedData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSciCat Backend\nVersion: v4.x\nNestJS implementation\n\n\n\n\nIMPORTANT!!!!\nAs of 2023/06/15, this repository holds the official version of SciCat backend\nThis is the only version that is officially supported. It is commonly referred to as backend, BE, v4.x or a combination of them.\nYou can find the old backend (v3.x, loopback implementation) at (https://github.com/SciCatProject/backend).\nThe repo for backend v3.x is archived and read-only\nIf you have any questions, please feel free to contact any member of the development team,\nor the SciCat team at ESS.\nGet started\n\ngit clone https://github.com/SciCatProject/scicat-backend-next.git\nnpm install\nAdd .env file to project root folder. See Environment variables.\nOptional Add functionalAccounts.json file to project root folder. If not set up, the functional accounts in functionalAccounts.json.example will be created automatically.\nnpm run start:dev\nGo to http://localhost:3000/explorer to get an overview of available endpoints and database schemas.\nTo be able to run the e2e tests with the same setup as in the Github actions you will need to run npm run  prepare:local and after that run npm run start:dev. This will start all needed containers and copy some configuration to the right place.\n\nDevelop in a container using the docker-compose.dev file\n\ngit clone https://github.com/SciCatProject/scicat-backend-next.git\ndocker-compose -f docker-compose.dev.yaml up -d\nOptional Mount functionalAccounts.json file to a volume in the container. If not set up, the functional accounts in functionalAccounts.json.example will be created automatically.\nOptional change the container env variables\nAttach to the container\nnpm run start:dev\nGo to http://localhost:3000/explorer to get an overview of available endpoints and database schemas.\n\nTest the app\n\nRunning the unit tests: npm run test\nRunning the e2e(api) tests:\n\n\nFirst of all run npm run prepare:local to prepare the local environment for starting\nAfter that run npm run test:api which will start the backend locally and run both jest and mocha e2e(api) tests.\n[Optional] If you want to run only the mocha tests you will need to start the backend locally with npm run start and then use npm run test:api:mocha\n[Optional] If you want to run only the jest tests you can use npm run test:api:jest\n\nConfiguration\nThere are multiple ways to configure your SciCat instance.\nIn order to configure a SciCat instance run on barebone OS, there are three options:\n\nEdit directly the file src/config/configuration.ts\nCreate a .env file with your local value of the variables listed in the next session. Only the variables that are required by your installation should be defined. To create your .env file, you can copy and edit the sample .env.example provided with in code\nDefine in your environment all the necessary variables (list provided below), prior running SciCat.\n\nIf SciCat runs in a containeraized environment, like docker or kubernetes, you can run the release image and specify your configuration using one of the following two methods:\n\ncreate .env and mount it directly in your container.\ndefine the necessary environment variables directly in your container.\n\nMore information are provided in the official documentation.\nEnvironment variables\nValid environment variables for the .env file. See .env.example for examples value formats.\n\nACCESS_GROUPS_STATIC_VALUES [string] Optional Comma separated list of access groups automatically assigned to all users. Example: \"scicat,user\"\nACCESS_GROUPS_SERVICE_TOKEN [string] Optional Authentication token used if access groups are obtained from a third party service. This value is not used by the vanilla installation, but only if the instance is customized to use an external service to provide user groups, like the ESS example\nACCESS_GROUP_SERVICE_API_URL [string] Optional URL of the service providing the users' access groups. This value is not used by the vanilla installation, but only if the instance is customized to use an external service to provide user groups, like the ESS example\nDOI_PREFIX [string] The facility DOI prefix, with trailing slash.\nEXPRESS_SESSION_SECRET [string] Optional Secret used to set up express session.\nHTTP_MAX_REDIRECTS [number] Optional Max redirects for http requests. Defaults to 5.\nHTTP_TIMEOUT [number] Optional Timeout from http requests in ms. Defaults to 5000.\nJWT_SECRET [string] The secret for your JWT token, used for authorization.\nJWT_EXPIRES_IN [number] Optional How long, in seconds, the JWT token is valid. Defaults to 3600.\nLDAP_URL [string] Optional The URL to your LDAP server.\nLDAP_BIND_DN [string] Optional Bind_DN for your LDAP server.\nLDAP_BIND_CREDENTIALS [string] Optional Credentials for your LDAP server.\nLDAP_SEARCH_BASE [string] Optional Search base for your LDAP server.\nLDAP_SEARCH_FILTER [string] Optional Search filter for you LDAP server.\nOIDC_ISSUER [string] Optional URL of the oidc server providing the authentication service. Example: https://identity.esss.dk/realm/ess.\nOIDC_CLIENT_ID [string] Optional Identity of the client that we want to use to obtain the user token. Example: scicat\nOIDC_CLIENT_SECRET [string] Optional Secret to provide to the oidc service to obtain the user token. Example: Aa1JIw3kv3mQlGFWhRrE3gOdkH6xreAwro\nOIDC_CALLBACK_URL [string] Optional SciCat callback URL that we want th eoidc service to redirect to, in case of successful login. Example: http://myscicat/api/v3/oidc/callback\nOIDC_SCOPE [string] Optional Space separated list of the info returned by the oidc service. Example: \"openid profile email\"\nOIDC_SUCCESS_URL [string] Optional SciCat Frontend auth-callback URL. Required in order to pass user credentials to SciCat Frontend after OIDC login. Example: https://myscicatfrontend/auth-callback\nOIDC_ACCESS_GROUPS [string] Optional Functionality is still unclear.\nLOGBOOK_ENABLED [string] Optional Flag to enable/disable the Logbook endpoints. Values \"yes\" or \"no\". Defaults to \"no\".\nLOGBOOK_BASE_URL [string] Optional The base URL to the Logbook API. Only required if Logbook is enabled.\nLOGBOOK_USERNAME [string] Optional The username used to authenticate to the Logbook API. Only required if Logbook is enabled.\nLOGBOOK_PASSWORD [string] Optional The password used to authenticate to the Logbook API. Only required if Logbook is enabled.\nMETADATA_KEYS_RETURN_LIMIT [number] Optional The return limit for the /Datasets/metadataKeys endpoint.\nMETADATA_PARENT_INSTANCES_RETURN_LIMIT Optional The return limit of Datasets to extract metadata keys from for the /Datasets/metadataKeys endpoint.\nMONGODB_URI [string] The URI for your MongoDB instance.\nOAI_PROVIDER_ROUTE [string] Optional URI to OAI provider, used for the /publisheddata/:id/resync endpoint.\nPID_PREFIX [string] The facility PID prefix, with trailing slash.\nPUBLIC_URL_PREFIX [string] The base URL to the facility Landing Page.\nPORT [number] Optional The port on which you want to access the app. Defaults to 3000.\nRABBITMQ_ENABLED [string] Optional Flag to enable/disable RabbitMQ consumer. Values \"yes\" or \"no\". Defaults to \"no\".\nRABBITMQ_HOSTNAME [string] Optional The hostname of the RabbitMQ message broker. Only required if RabbitMQ is enabled.\nRABBITMQ_USERNAME [string] Optional The username used to authenticate to the RabbitMQ message broker. Only required if RabbitMQ is enabled.\nRABBITMQ_PASSWORD [string] Optional The password used to authenticate to the RabbitMQ message broker. Only required if RabbitMQ is enabled.\nREGISTER_DOI_URI [string] URI to the organization that registers the facilities DOI's.\nREGISTER_METADATA_URI [string] URI to the organization that registers the facilities published data metadata.\nSITE [string] The name of your site.\nSMTP_HOST [string] Optional Host of SMTP server.\nSMTP_MESSAGE_FROM [string] Optional Email address that emails should be sent from.\nSMTP_PORT [string] Optional Port of SMTP server.\nSMTP_SECURE [string] Optional Secure of SMTP server.\nPOLICY_PUBLICATION_SHIFT [integer] Optional Embargo period expressed in years. Default value: 3 years\nPOLICY_RETENTION_SHIFT [integer] Optional Retention period (aka how long the facility will hold on to data) expressed in years. Default value: -1 (data will be hold indefinitely)\n\nMigrating from the old SciCat Backend\nWhere the current SciCat Backend accepts id fields in the database named pid, doi, or similar, this implementation requires there to be an id field of the form _id on every document. It is therefore necessary to run a database migration script towards MongoDB instance from a place where you have access to it and can install migrate-mongo package.\nAll database migration scripts located in the migrations folder. To start the migration use:\nnpm run migrate:db:upFor down migration use:\nnpm run migrate:db:downFor listing applied DB migrations:\nnpm run migrate:db:status\nFor the full documentation please go to the SciCat home page and follow the documentation link\nMigration documentation and NestJs resources\nFollowing are the post that I found useful working on the migration:\n\nSchema and DTOs: https://betterprogramming.pub/how-to-use-data-transfer-objects-dto-for-validation-in-nest-js-7ff95309f650\nValidation:\nOfficial documentation\nCustom validation with datasbase in NestJs\nValidating nested objects with class-validator in NestJs\nValidating numeric query parameters in NestJS\nInjecting request object to a custom validation class in NestJS\n\n\nSwagger and OpenAPI:\nhttps://docs.nestjs.com/openapi/introduction\nhttps://docs.nestjs.com/openapi/types-and-parameters\nhttps://docs.nestjs.com/openapi/decorators\n\n\n\nLicense\nThis project is licensed under the GPL License - see the LICENSE file for details\nAcknowledgments\nScicat is developed at PSI, ESS and MAXIV with in-kind funding from ESS and from the European Union Framework Programme for Research and Innovation Horizon 2020, under grant agreement 676548, “BrightnESS”.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBSD 3-Clause License\nCopyright (c) 2022, SciCat Project\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\nNeither the name of the copyright holder nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AttachmentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CaslModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatablocksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatasetsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InitialDatasetsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InstrumentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogbooksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrigDatablocksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PoliciesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProposalsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PublishedDataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SamplesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AttachmentsModule\n\n\n\ncluster_AttachmentsModule_exports\n\n\n\ncluster_AttachmentsModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CaslModule\n\n\n\ncluster_CaslModule_exports\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_DatablocksModule\n\n\n\ncluster_DatablocksModule_exports\n\n\n\ncluster_DatablocksModule_providers\n\n\n\ncluster_DatasetsModule\n\n\n\ncluster_DatasetsModule_exports\n\n\n\ncluster_DatasetsModule_providers\n\n\n\ncluster_InitialDatasetsModule\n\n\n\ncluster_InitialDatasetsModule_exports\n\n\n\ncluster_InitialDatasetsModule_providers\n\n\n\ncluster_InstrumentsModule\n\n\n\ncluster_InstrumentsModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_LogbooksModule\n\n\n\ncluster_LogbooksModule_exports\n\n\n\ncluster_LogbooksModule_providers\n\n\n\ncluster_OrigDatablocksModule\n\n\n\ncluster_OrigDatablocksModule_exports\n\n\n\ncluster_OrigDatablocksModule_providers\n\n\n\ncluster_PoliciesModule\n\n\n\ncluster_PoliciesModule_exports\n\n\n\ncluster_PoliciesModule_providers\n\n\n\ncluster_ProposalsModule\n\n\n\ncluster_ProposalsModule_exports\n\n\n\ncluster_ProposalsModule_providers\n\n\n\ncluster_PublishedDataModule\n\n\n\ncluster_PublishedDataModule_providers\n\n\n\ncluster_SamplesModule\n\n\n\ncluster_SamplesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nAttachmentsModule\n\nAttachmentsModule\n\n\n\nDatasetsModule\n\nDatasetsModule\n\nDatasetsModule -->\n\nAttachmentsModule->DatasetsModule\n\n\n\n\n\nProposalsModule\n\nProposalsModule\n\nProposalsModule -->\n\nAttachmentsModule->ProposalsModule\n\n\n\n\n\nPublishedDataModule\n\nPublishedDataModule\n\nPublishedDataModule -->\n\nAttachmentsModule->PublishedDataModule\n\n\n\n\n\nSamplesModule\n\nSamplesModule\n\nSamplesModule -->\n\nAttachmentsModule->SamplesModule\n\n\n\nAppModule -->\n\nAttachmentsModule->AppModule\n\n\n\n\n\nAttachmentsService \n\nAttachmentsService \n\nAttachmentsService  -->\n\nAttachmentsModule->AttachmentsService \n\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nPoliciesModule\n\nPoliciesModule\n\nPoliciesModule -->\n\nAuthModule->PoliciesModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCaslModule\n\nCaslModule\n\nAppModule -->\n\nCaslModule->AppModule\n\n\n\n\n\nCaslAbilityFactory \n\nCaslAbilityFactory \n\nCaslAbilityFactory  -->\n\nCaslModule->CaslAbilityFactory \n\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nCommonModule->JobsModule\n\n\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nCommonModule->MailService \n\n\n\n\n\nDatablocksModule\n\nDatablocksModule\n\nDatasetsModule -->\n\nDatablocksModule->DatasetsModule\n\n\n\nAppModule -->\n\nDatablocksModule->AppModule\n\n\n\n\n\nDatablocksService \n\nDatablocksService \n\nDatablocksService  -->\n\nDatablocksModule->DatablocksService \n\n\n\nJobsModule -->\n\nDatasetsModule->JobsModule\n\n\n\nPublishedDataModule -->\n\nDatasetsModule->PublishedDataModule\n\n\n\nSamplesModule -->\n\nDatasetsModule->SamplesModule\n\n\n\nAppModule -->\n\nDatasetsModule->AppModule\n\n\n\n\n\nDatasetsService \n\nDatasetsService \n\nDatasetsService  -->\n\nDatasetsModule->DatasetsService \n\n\n\n\n\nInitialDatasetsModule\n\nInitialDatasetsModule\n\nDatasetsModule -->\n\nInitialDatasetsModule->DatasetsModule\n\n\n\nAppModule -->\n\nInitialDatasetsModule->AppModule\n\n\n\n\n\nInitialDatasetsService \n\nInitialDatasetsService \n\nInitialDatasetsService  -->\n\nInitialDatasetsModule->InitialDatasetsService \n\n\n\n\n\nInstrumentsModule\n\nInstrumentsModule\n\nAppModule -->\n\nInstrumentsModule->AppModule\n\n\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nLogbooksModule\n\nLogbooksModule\n\nAppModule -->\n\nLogbooksModule->AppModule\n\n\n\n\n\nLogbooksService \n\nLogbooksService \n\nLogbooksService  -->\n\nLogbooksModule->LogbooksService \n\n\n\n\n\nOrigDatablocksModule\n\nOrigDatablocksModule\n\nDatasetsModule -->\n\nOrigDatablocksModule->DatasetsModule\n\n\n\nJobsModule -->\n\nOrigDatablocksModule->JobsModule\n\n\n\nAppModule -->\n\nOrigDatablocksModule->AppModule\n\n\n\n\n\nOrigDatablocksService \n\nOrigDatablocksService \n\nOrigDatablocksService  -->\n\nOrigDatablocksModule->OrigDatablocksService \n\n\n\nJobsModule -->\n\nPoliciesModule->JobsModule\n\n\n\nAppModule -->\n\nPoliciesModule->AppModule\n\n\n\n\n\nPoliciesService \n\nPoliciesService \n\nPoliciesService  -->\n\nPoliciesModule->PoliciesService \n\n\n\nLogbooksModule -->\n\nProposalsModule->LogbooksModule\n\n\n\nPublishedDataModule -->\n\nProposalsModule->PublishedDataModule\n\n\n\nAppModule -->\n\nProposalsModule->AppModule\n\n\n\n\n\nProposalsService \n\nProposalsService \n\nProposalsService  -->\n\nProposalsModule->ProposalsService \n\n\n\nAppModule -->\n\nPublishedDataModule->AppModule\n\n\n\nAppModule -->\n\nSamplesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nPoliciesModule -->\n\nUsersModule->PoliciesModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nUsersModule->RolesService \n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAttachmentsService\n\nAttachmentsService\n\nAttachmentsModule -->\n\nAttachmentsService->AttachmentsModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\n\n\nCaslAbilityFactory\n\nCaslAbilityFactory\n\nAuthModule -->\n\nCaslAbilityFactory->AuthModule\n\n\n\nCaslModule -->\n\nCaslAbilityFactory->CaslModule\n\n\n\nDatasetsModule -->\n\nCaslAbilityFactory->DatasetsModule\n\n\n\nInstrumentsModule -->\n\nCaslAbilityFactory->InstrumentsModule\n\n\n\nJobsModule -->\n\nCaslAbilityFactory->JobsModule\n\n\n\nLogbooksModule -->\n\nCaslAbilityFactory->LogbooksModule\n\n\n\nOrigDatablocksModule -->\n\nCaslAbilityFactory->OrigDatablocksModule\n\n\n\nPoliciesModule -->\n\nCaslAbilityFactory->PoliciesModule\n\n\n\nProposalsModule -->\n\nCaslAbilityFactory->ProposalsModule\n\n\n\nPublishedDataModule -->\n\nCaslAbilityFactory->PublishedDataModule\n\n\n\nSamplesModule -->\n\nCaslAbilityFactory->SamplesModule\n\n\n\nUsersModule -->\n\nCaslAbilityFactory->UsersModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLdapStrategy\n\nLdapStrategy\n\nAuthModule -->\n\nLdapStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nCommonModule -->\n\nMailService->CommonModule\n\n\n\n\n\nDatablocksService\n\nDatablocksService\n\nDatablocksModule -->\n\nDatablocksService->DatablocksModule\n\n\n\n\n\nDatasetsService\n\nDatasetsService\n\nDatasetsModule -->\n\nDatasetsService->DatasetsModule\n\n\n\n\n\nInitialDatasetsService\n\nInitialDatasetsService\n\nInitialDatasetsModule -->\n\nInitialDatasetsService->InitialDatasetsModule\n\n\n\n\n\nInstrumentsService\n\nInstrumentsService\n\nInstrumentsModule -->\n\nInstrumentsService->InstrumentsModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nLogbooksService\n\nLogbooksService\n\nLogbooksModule -->\n\nLogbooksService->LogbooksModule\n\n\n\n\n\nOrigDatablocksService\n\nOrigDatablocksService\n\nOrigDatablocksModule -->\n\nOrigDatablocksService->OrigDatablocksModule\n\n\n\n\n\nPoliciesService\n\nPoliciesService\n\nPoliciesModule -->\n\nPoliciesService->PoliciesModule\n\n\n\n\n\nProposalsService\n\nProposalsService\n\nProposalsModule -->\n\nProposalsService->ProposalsModule\n\n\n\n\n\nPublishedDataService\n\nPublishedDataService\n\nPublishedDataModule -->\n\nPublishedDataService->PublishedDataModule\n\n\n\n\n\nSamplesService\n\nSamplesService\n\nSamplesModule -->\n\nSamplesService->SamplesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nUsersModule -->\n\nRolesService->UsersModule\n\n\n\n\n\nUserIdentitiesService\n\nUserIdentitiesService\n\nUsersModule -->\n\nUserIdentitiesService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        18 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    42 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    78 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    24 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 4.0.0\n        \n            Description : scicat-backend-next\n        \n            License : BSD-3-Clause\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppAbility   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            AttachmentDocument   (src/.../attachment.schema.ts)\n                        \n                        \n                            DatablockDocument   (src/.../datablock.schema.ts)\n                        \n                        \n                            DataFileDocument   (src/.../datafile.schema.ts)\n                        \n                        \n                            DatasetDocument   (src/.../dataset.schema.ts)\n                        \n                        \n                            HistoryDocument   (src/.../history.schema.ts)\n                        \n                        \n                            InitialDatasetDocument   (src/.../initial-dataset.schema.ts)\n                        \n                        \n                            InstrumentDocument   (src/.../instrument.schema.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schema.ts)\n                        \n                        \n                            LifecycleDocument   (src/.../lifecycle.schema.ts)\n                        \n                        \n                            LogbookDocument   (src/.../logbook.schema.ts)\n                        \n                        \n                            MeasurementPeriodDocument   (src/.../measurement-period.schema.ts)\n                        \n                        \n                            MessageContentDocument   (src/.../message-content.schema.ts)\n                        \n                        \n                            MessageDocument   (src/.../message.schema.ts)\n                        \n                        \n                            OidcConfig   (src/.../configuration.ts)\n                        \n                        \n                            OrigDatablockDocument   (src/.../origdatablock.schema.ts)\n                        \n                        \n                            PolicyDocument   (src/.../policy.schema.ts)\n                        \n                        \n                            PolicyHandler   (src/.../policy-handler.interface.ts)\n                        \n                        \n                            PolicyHandlerCallback   (src/.../policy-handler.interface.ts)\n                        \n                        \n                            ProposalDocument   (src/.../proposal.schema.ts)\n                        \n                        \n                            PublishedDataDocument   (src/.../published-data.schema.ts)\n                        \n                        \n                            RelationshipDocument   (src/.../relationship.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            SampleDocument   (src/.../sample.schema.ts)\n                        \n                        \n                            Subjects   (src/.../casl-ability.factory.ts)\n                        \n                        \n                            TechniqueDocument   (src/.../technique.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                        \n                            UserIdentityDocument   (src/.../user-identity.schema.ts)\n                        \n                        \n                            UserProfileDocument   (src/.../user-profile.schema.ts)\n                        \n                        \n                            UserRoleDocument   (src/.../user-role.schema.ts)\n                        \n                        \n                            UserSettingsDocument   (src/.../user-settings.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/casl/casl-ability.factory.ts\n    \n    \n        \n            \n                \n                    \n                    AppAbility\n                \n            \n            \n                \n                        Ability<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Subjects\n                \n            \n            \n                \n                            string | InferSubjects | \"all\"\n\n                \n            \n        \n    \n    src/attachments/schemas/attachment.schema.ts\n    \n    \n        \n            \n                \n                    \n                    AttachmentDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/datablocks/schemas/datablock.schema.ts\n    \n    \n        \n            \n                \n                    \n                    DatablockDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/common/schemas/datafile.schema.ts\n    \n    \n        \n            \n                \n                    \n                    DataFileDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/datasets/schemas/dataset.schema.ts\n    \n    \n        \n            \n                \n                    \n                    DatasetDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/datasets/schemas/history.schema.ts\n    \n    \n        \n            \n                \n                    \n                    HistoryDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/initial-datasets/schemas/initial-dataset.schema.ts\n    \n    \n        \n            \n                \n                    \n                    InitialDatasetDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/instruments/schemas/instrument.schema.ts\n    \n    \n        \n            \n                \n                    \n                    InstrumentDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/jobs/schemas/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/datasets/schemas/lifecycle.schema.ts\n    \n    \n        \n            \n                \n                    \n                    LifecycleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/logbooks/schemas/logbook.schema.ts\n    \n    \n        \n            \n                \n                    \n                    LogbookDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/proposals/schemas/measurement-period.schema.ts\n    \n    \n        \n            \n                \n                    \n                    MeasurementPeriodDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/logbooks/schemas/message-content.schema.ts\n    \n    \n        \n            \n                \n                    \n                    MessageContentDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/logbooks/schemas/message.schema.ts\n    \n    \n        \n            \n                \n                    \n                    MessageDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/config/configuration.ts\n    \n    \n        \n            \n                \n                    \n                    OidcConfig\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/origdatablocks/schemas/origdatablock.schema.ts\n    \n    \n        \n            \n                \n                    \n                    OrigDatablockDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/policies/schemas/policy.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PolicyDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/casl/interfaces/policy-handler.interface.ts\n    \n    \n        \n            \n                \n                    \n                    PolicyHandler\n                \n            \n            \n                \n                            IPolicyHandler | PolicyHandlerCallback\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PolicyHandlerCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/proposals/schemas/proposal.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ProposalDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/published-data/schemas/published-data.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PublishedDataDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/datasets/schemas/relationship.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RelationshipDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/users/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/samples/schemas/sample.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SampleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/datasets/schemas/technique.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TechniqueDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/users/schemas/user-identity.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserIdentityDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/users/schemas/user-profile.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserProfileDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/users/schemas/user-role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserRoleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/users/schemas/user-settings.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserSettingsDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
